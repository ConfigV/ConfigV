Resources.AWS::Serverless::Function.Properties.CodeUri,s3://media-sharing-refarch/31d08688ac4c72609539eba52cd520f8
Resources.AWS::Serverless::Function.Type,AWS::Serverless::Function
Resources.Custom::S3EventTrigger.Properties.accountId,{u'Ref': u'AWS::AccountId'}
Resources.Custom::S3EventTrigger.Version,1.0
Outputs.S3PhotoRepoBucket.Value,{u'Ref': u'PhotoRepoS3Bucket'}
Resources.AWS::DynamoDB::Table.Type,AWS::DynamoDB::Table
Outputs.DescribeExecutionLambda.Value,{u'Ref': u'DescribeExecutionFunction'}
Outputs.DDBAlbumMetadataTable.Value,{u'Ref': u'AlbumMetadataDDBTable'}
Resources.AWS::DynamoDB::Table.Properties.KeySchema,"[{u'KeyType': u'HASH', u'AttributeName': u'albumID'}]"
Resources.AWS::IAM::Role.Properties.Path,/MediaSharingRefarch/
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Resources.AWS::Serverless::Function.Properties.MemorySize,256
Resources.Custom::S3EventTrigger.Properties.StartExecutionFunction,{u'Ref': u'ImageProcStartExecutionFunction'}
Resources.AWS::Serverless::Function.Properties.Environment.Variables.STATE_MACHINE_ARN,{u'Ref': u'ImageProcStateMachine'}
Outputs.Region.Value,{u'Ref': u'AWS::Region'}
Outputs.CognitoIdentityPool.Value,{u'Ref': u'TestClientIdentityPool'}
Resources.AWS::DynamoDB::Table.Properties.GlobalSecondaryIndexes,"[{u'KeySchema': [{u'KeyType': u'HASH', u'AttributeName': u'userID'}, {u'KeyType': u'RANGE', u'AttributeName': u'creationTime'}], u'IndexName': u'userID-creationTime-index', u'Projection': {u'ProjectionType': u'ALL'}, u'ProvisionedThroughput': {u'WriteCapacityUnits': u'1', u'ReadCapacityUnits': u'2'}}]"
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.WriteCapacityUnits,1
Resources.AWS::Cognito::IdentityPoolRoleAttachment.Properties.IdentityPoolId,{u'Ref': u'TestClientIdentityPool'}
Resources.AWS::Serverless::Function.Properties.Timeout,60
Resources.AWS::Serverless::Function.Properties.Role,"{u'Fn::GetAtt': [u'BackendProcessingLambdaRole', u'Arn']}"
Resources.AWS::DynamoDB::Table.Properties.AttributeDefinitions,"[{u'AttributeName': u'albumID', u'AttributeType': u'S'}, {u'AttributeName': u'creationTime', u'AttributeType': False}, {u'AttributeName': u'userID', u'AttributeType': u'S'}]"
Resources.AWS::Serverless::Function.Properties.Handler,index.handler
Resources.AWS::Cognito::IdentityPoolRoleAttachment.Type,AWS::Cognito::IdentityPoolRoleAttachment
Resources.AWS::S3::Bucket.Type,AWS::S3::Bucket
Resources.Custom::S3EventTrigger.Properties.ServiceToken,"{u'Fn::GetAtt': [u'CreateS3EventTriggerFunction', u'Arn']}"
Resources.AWS::Serverless::Function.Properties.Description,Use Amazon Rekognition to detect labels from image
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'lambda.amazonaws.com']}}]"
Resources.Custom::S3EventTrigger.DependsOn,"[u'PhotoRepoS3Bucket', u'ImageProcStartExecutionFunction']"
Resources.AWS::StepFunctions::StateMachine.Type,AWS::StepFunctions::StateMachine
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Resources.Custom::S3EventTrigger.Type,Custom::S3EventTrigger
Resources.AWS::StepFunctions::StateMachine.Properties.DefinitionString,"{u'Fn::Sub': [u'{\n  ""Comment"": ""Image Processing workflow"",\n  ""StartAt"": ""ExtractImageMetadata"",\n  ""States"": {\n    ""ExtractImageMetadata"": {\n      ""Type"": ""Task"",\n      ""Resource"": ""${ExtractImageMetadataLambdaArn}"",\n      ""InputPath"": ""$"",\n      ""ResultPath"": ""$.extractedMetadata"",\n      ""Next"": ""ImageTypeCheck"",\n      ""Catch"": [\n        {\n          ""ErrorEquals"": [\n            ""ImageIdentifyError""\n          ],\n          ""Next"": ""NotSupportedImageType""\n        }\n      ],\n      ""Retry"": [\n        {\n          ""ErrorEquals"": [\n            ""ImageIdentifyError""\n          ],\n          ""MaxAttempts"": 0\n        },\n        {\n          ""ErrorEquals"": [\n            ""States.ALL""\n          ],\n          ""IntervalSeconds"": 1,\n          ""MaxAttempts"": 2,\n          ""BackoffRate"": 1.5\n        }\n      ]\n    },\n    ""ImageTypeCheck"": {\n      ""Type"": ""Choice"",\n      ""Choices"": [\n        {\n          ""Or"": [\n            {\n              ""Variable"": ""$.extractedMetadata.format"",\n              ""StringEquals"": ""JPEG""\n            },\n            {\n              ""Variable"": ""$.extractedMetadata.format"",\n              ""StringEquals"": ""PNG""\n            }\n          ],\n          ""Next"": ""TransformMetadata""\n        }\n      ],\n      ""Default"": ""NotSupportedImageType""\n    },\n    ""TransformMetadata"": {\n      ""Type"": ""Task"",\n      ""Resource"": ""${TransformMetadataLambdaArn}"",\n      ""InputPath"": ""$.extractedMetadata"",\n      ""ResultPath"": ""$.extractedMetadata"",\n      ""Retry"": [\n        {\n          ""ErrorEquals"": [\n            ""States.ALL""\n          ],\n          ""IntervalSeconds"": 1,\n          ""MaxAttempts"": 2,\n          ""BackoffRate"": 1.5\n        }\n      ],\n      ""Next"": ""ParallelProcessing""\n    },\n    ""NotSupportedImageType"": {\n      ""Type"": ""Fail"",\n      ""Cause"": ""Image type not supported!"",\n      ""Error"": ""FileTypeNotSupported""\n    },\n    ""ParallelProcessing"": {\n      ""Type"": ""Parallel"",\n      ""Branches"": [\n        {\n          ""StartAt"": ""Rekognition"",\n          ""States"": {\n            ""Rekognition"": {\n              ""Type"": ""Task"",\n              ""Resource"": ""${RekognitionLambdaArn}"",\n              ""Retry"": [\n                {\n                  ""ErrorEquals"": [\n                    ""States.ALL""\n                  ],\n                  ""IntervalSeconds"": 1,\n                  ""MaxAttempts"": 2,\n                  ""BackoffRate"": 1.5\n                }\n              ],\n              ""End"": true\n            }\n          }\n        },\n        {\n          ""StartAt"": ""Thumbnail"",\n          ""States"": {\n            ""Thumbnail"": {\n              ""Type"": ""Task"",\n              ""Resource"": ""${GenerateThumbnailLambdaArn}"",\n              ""Retry"": [\n                {\n                  ""ErrorEquals"": [\n                    ""States.ALL""\n                  ],\n                  ""IntervalSeconds"": 1,\n                  ""MaxAttempts"": 2,\n                  ""BackoffRate"": 1.5\n                }\n              ],\n              ""End"": true\n            }\n          }\n        }\n      ],\n      ""ResultPath"": ""$.parallelResults"",\n      ""Next"": ""StoreImageMetadata""\n    },\n    ""StoreImageMetadata"": {\n      ""Type"": ""Task"",\n      ""Resource"": ""${StoreImageMetadataLambdaArn}"",\n      ""InputPath"": ""$"",\n      ""ResultPath"": ""$.storeResult"",\n      ""Retry"": [\n        {\n          ""ErrorEquals"": [\n            ""States.ALL""\n          ],\n          ""IntervalSeconds"": 1,\n          ""MaxAttempts"": 2,\n          ""BackoffRate"": 1.5\n        }\n      ],\n      ""End"": true\n    }\n  }\n}', {u'RekognitionLambdaArn': {u'Fn::GetAtt': [u'RekognitionFunction', u'Arn']}, u'StoreImageMetadataLambdaArn': {u'Fn::GetAtt': [u'StoreImageMetadataFunction', u'Arn']}, u'ExtractImageMetadataLambdaArn': {u'Fn::GetAtt': [u'ExtractImageMetadataFunction', u'Arn']}, u'GenerateThumbnailLambdaArn': {u'Fn::GetAtt': [u'GenerateThumbnailFunction', u'Arn']}, u'TransformMetadataLambdaArn': {u'Fn::GetAtt': [u'TransformMetadataFunction', u'Arn']}}]}"
Resources.AWS::S3::Bucket.Properties.CorsConfiguration.CorsRules,"[{u'AllowedHeaders': [u'*'], u'ExposedHeaders': [u'ETag'], u'AllowedMethods': [u'PUT', u'GET', u'POST', u'HEAD'], u'AllowedOrigins': [u'*']}]"
Resources.Custom::S3EventTrigger.Properties.StartExecutionFunctionArn,"{u'Fn::GetAtt': [u'ImageProcStartExecutionFunction', u'Arn']}"
Resources.AWS::Cognito::IdentityPool.Type,AWS::Cognito::IdentityPool
Resources.AWS::StepFunctions::StateMachine.Properties.RoleArn,"{u'Fn::GetAtt': [u'StateMachineRole', u'Arn']}"
Resources.AWS::Cognito::IdentityPoolRoleAttachment.Properties.Roles.authenticated,"{u'Fn::GetAtt': [u'TestClientIAMRole', u'Arn']}"
Resources.AWS::Serverless::Function.Properties.Runtime,nodejs4.3
Outputs.DDBImageMetadataTable.Value,{u'Ref': u'ImageMetadataDDBTable'}
Resources.AWS::Cognito::IdentityPool.Properties.IdentityPoolName,TestWebApp
Resources.AWS::Cognito::IdentityPool.Properties.AllowUnauthenticatedIdentities,True
Resources.Custom::S3EventTrigger.Properties.PhotoRepoS3Bucket,{u'Ref': u'PhotoRepoS3Bucket'}
Resources.AWS::Serverless::Function.Properties.Environment.Variables.IMAGE_METADATA_DDB_TABLE,{u'Ref': u'ImageMetadataDDBTable'}
Resources.AWS::Serverless::Function.DependsOn,PhotoRepoS3Bucket
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'LambdaWriteCWLogs', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u'logs:CreateLogGroup', u'logs:CreateLogStream', u'logs:PutLogEvents'], u'Resource': u'*', u'Effect': u'Allow', u'Sid': u'AllowLogging'}]}}, {u'PolicyName': u'ReadFromPhotoRepoS3Bucket', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u's3:Get*'], u'Resource': {u'Fn::Sub': u'arn:aws:s3:::${PhotoRepoS3Bucket}/*'}, u'Effect': u'Allow', u'Sid': u'ReadFromPhotoRepoS3Bucket'}]}}, {u'PolicyName': u'WriteToPhotoRepoS3Bucket', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u's3:PutObject'], u'Resource': {u'Fn::Sub': u'arn:aws:s3:::${PhotoRepoS3Bucket}/*'}, u'Effect': u'Allow', u'Sid': u'WriteToPhotoRepoS3Bucket'}]}}, {u'PolicyName': u'WriteToImageMetadataDDBTable', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u'dynamodb:UpdateItem', u'dynamodb:PutItem'], u'Resource': {u'Fn::Sub': u'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ImageMetadataDDBTable}'}, u'Effect': u'Allow', u'Sid': u'WriteToImageMetadataDDBTable'}]}}, {u'PolicyName': u'RekognitionDetectLabels', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u'rekognition:DetectLabels'], u'Resource': u'*', u'Effect': u'Allow', u'Sid': u'RekognitionDetectLabels'}]}}, {u'PolicyName': u'StepFunctionStartExecution', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u'states:StartExecution'], u'Resource': u'*', u'Effect': u'Allow', u'Sid': u'StepFunctionStartExecution'}]}}]"
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.ReadCapacityUnits,2
Resources.AWS::Cognito::IdentityPoolRoleAttachment.Properties.Roles.unauthenticated,"{u'Fn::GetAtt': [u'TestClientIAMRole', u'Arn']}"
