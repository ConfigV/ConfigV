Parameters.RouteTable.Description,The route table to associate the subnet with.
Resources.AWS::EC2::Subnet.Properties.VpcId,{u'Ref': u'VpcId'}
Resources.AWS::EC2::Subnet.Properties.CidrBlock,{u'Ref': u'CidrBlock'}
Outputs.SubnetId.Description,The ID of the subnet created by this stack
Parameters.VpcId.Type,AWS::EC2::VPC::Id
Parameters.VpcId.Description,The VPC to apply the settings to.
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,{u'Ref': u'AvailabilityZone'}
Outputs.SubnetId.Value,{u'Ref': u'Subnet'}
Parameters.AvailabilityZone.Description,The AZ to place the instance in.
Parameters.SubnetName.Description,The human name to apply to the subnet we're creating
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': {u'Ref': u'SubnetName'}, u'Key': u'Name'}]"
Resources.AWS::EC2::SubnetRouteTableAssociation.Type,AWS::EC2::SubnetRouteTableAssociation
Parameters.SubnetName.Default,
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,{u'Ref': u'Subnet'}
Parameters.CidrBlock.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Parameters.RouteTable.Type,String
Parameters.CidrBlock.Type,String
Parameters.SubnetName.Type,String
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,{u'Ref': u'RouteTable'}
Resources.AWS::EC2::Subnet.Type,AWS::EC2::Subnet
Parameters.AvailabilityZone.Type,AWS::EC2::AvailabilityZone::Name
Parameters.CidrBlock.ConstraintDescription,Must be a valid IP CIDR range.
