Resources.AWS::AutoScaling::AutoScalingGroup.DependsOn,[u'IgniteLaunchConfig']
Resources.AWS::IAM::User.Type,AWS::IAM::User
Metadata.AWS::CloudFormation::Interface.ParameterLabels.S3Bucket.default,Enter bucket name for discovery
Parameters.CIDRToWhitelist.Type,String
Parameters.CIDRToWhitelist.Description,Internal VPC IP CIDR for internal communication for Ignite
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.Tags,"[{u'PropagateAtLaunch': u'true', u'Value': u'Ignite', u'Key': u'Name'}]"
Resources.AWS::IAM::User.Properties.Path,/
Parameters.CacheReplicas.Default,1
Parameters.CacheReplicas.Type,Number
Parameters.RemoteAccessCIDR.ConstraintDescription,must be a valid CIDR range of the form x.x.x.x/x.
Parameters.RemoteAccessCIDR.Description,IP CIDR from where you could SSH into Ignite cluster
Parameters.JavaVersion.Default,Java7
Metadata.AWS::CloudFormation::Interface.ParameterLabels.awssdklocation.default,Enter location for AWS SDK
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.DesiredCapacity,{u'Ref': u'FleetSize'}
Resources.AWS::AutoScaling::LaunchConfiguration.DependsOn,"[u'IgniteProfile', u'IgniteSecurityGroup', u'Igniteaccesskey']"
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.configure_hosts.commands.02-signal_startup_complete.command,touch .create_hosts_entry-semaphore
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'65535', u'IpProtocol': u'tcp', u'CidrIp': {u'Ref': u'CIDRToWhitelist'}, u'FromPort': u'0'}, {u'ToPort': u'22', u'IpProtocol': u'tcp', u'CidrIp': {u'Ref': u'CIDRToWhitelist'}, u'FromPort': u'22'}, {u'ToPort': u'22', u'IpProtocol': u'tcp', u'CidrIp': {u'Ref': u'RemoteAccessCIDR'}, u'FromPort': u'22'}]"
Parameters.SecondSubnetId.Type,AWS::EC2::Subnet::Id
Parameters.JavaVersion.ConstraintDescription,only Java7 or Java8 version allowed
Parameters.CIDRToWhitelist.MaxLength,18
Resources.AWS::AutoScaling::AutoScalingGroup.CreationPolicy.ResourceSignal.Count,{u'Ref': u'FleetSize'}
Resources.AWS::AutoScaling::LaunchConfiguration.Properties.IamInstanceProfile,{u'Ref': u'IgniteProfile'}
Parameters.awssdklocation.Default,s3://publicbucketbabupe/ignitelibrary/aws-java-sdk-1.3.21.1.jar
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.install_java7.packages.yum.java-1.7.0-openjdk-devel,[]
Metadata.AWS::CloudFormation::Interface.ParameterLabels.VpcId.default,Enter VPC ID
Metadata.AWS::CloudFormation::Interface.ParameterGroups,"[{u'Description': {u'default': u'Enter VPC related information'}, u'Parameters': [u'VpcId', u'FirstSubnetId', u'SecondSubnetId', u'ThirdSubnetId'], u'Label': {u'default': u'Network Stack'}}, {u'Description': {u'default': u'Choice of Instance type and number of nodes configuration'}, u'Parameters': [u'InstanceType', u'FleetSize', u'SSHKeyName', u'RemoteAccessCIDR', u'CIDRToWhitelist'], u'Label': {u'default': u'EC2 Instance Configuration'}}, {u'Description': {u'default': u'This bucket will be used by Ignite to discover nodes in the cluster'}, u'Parameters': [u'S3Bucket'], u'Label': {u'default': u'S3 bucket name for node discovery'}}, {u'Description': {u'default': u'This bucket will be used to host ignite binaries. Example: s3://<bucket-name>/<path-to-binaries>'}, u'Parameters': [u'IgniteCodeLocation', u'IgniteconfigCodeLocation', u'awssdklocation'], u'Label': {u'default': u'S3 bucket name for Ignite code'}}, {u'Description': {u'default': u'Enter Cluster Information'}, u'Parameters': [u'CacheName', u'JavaVersion', u'CacheReplicas'], u'Label': {u'default': u'Ignite Cluster Information'}}]"
Metadata.AWS::CloudFormation::Interface.ParameterLabels.RemoteAccessCIDR.default,Enter remote CIDR to allow access
Parameters.CIDRToWhitelist.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::AutoScaling::LaunchConfiguration.Properties.UserData,"{u'Fn::Base64': {u'Fn::Join': [u'', [u'#! /bin/bash -v\n', u'mkdir -p /home/ec2-user/ignite \n', u'cd /home/ec2-user/ignite \n', u'until ping -c 1 google.com \n', u'do \n', u'sleep 5; \n', u'done \n', u'aws s3 cp ', {u'Ref': u'IgniteCodeLocation'}, u' ignite.zip \n', u'unzip ignite.zip \n', u'mv `ls|grep -v ignite.zip` ignite \n', u'cd ignite \n', u'aws s3 cp ', {u'Ref': u'awssdklocation'}, u' aws-sdk.jar \n', u'cp aws-sdk.jar libs/ \n', u'cp libs/optional/ignite-aws/*.jar libs/ \n', u'echo ""', {u'Ref': u'CacheName'}, u'"" > /tmp/cachename.data \n', u'echo ""', {u'Ref': u'CacheReplicas'}, u'"" > /tmp/cachereplicas.data \n', u'echo ""', {u'Ref': u'S3Bucket'}, u'"" > /tmp/s3bucket.data \n', u'aws s3 cp ', {u'Ref': u'IgniteconfigCodeLocation'}, u' configureIgnite.sh \n', u'chmod +x configureIgnite.sh \n', u'./configureIgnite.sh $(cat /tmp/cachename.data) $(cat /tmp/cachereplicas.data) $(cat /tmp/s3bucket.data) ', {u'Ref': u'Igniteaccesskey'}, u' ', {u'Fn::GetAtt': [u'Igniteaccesskey', u'SecretAccessKey']}, u' \n', u'cp config/default-config.xml  config/default-config.xml.backup \n', u'cp /tmp/igniteconfig.xml config/default-config.xml \n', u'nohup bin/ignite.sh -J-Xms$(cat /tmp/heapsize.log) -J-Xmx$(cat /tmp/heapsize.log) & \n', u'# Helper function\n', u'function error_exit\n', u'{\n', u'  /opt/aws/bin/cfn-signal -e 1 --reason=""$1"" --stack ', {u'Ref': u'AWS::StackName'}, u' --region ', {u'Ref': u'AWS::Region'}, u'  --resource=IgniteFleet \n', u'  exit 1\n', u'}\n', u'# Install packages\n', u'/opt/aws/bin/cfn-init -s ', {u'Ref': u'AWS::StackId'}, u' -r IgniteLaunchConfig ', u'    --region ', {u'Ref': u'AWS::Region'}, u'\n', u'# All is well so signal success\n', u'  /opt/aws/bin/cfn-signal -e 0 --reason=""Ignitesetup complete"" --stack ', {u'Ref': u'AWS::StackName'}, u' --region ', {u'Ref': u'AWS::Region'}, u'  --resource=IgniteFleet \n']]}}"
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.install_jna.packages.yum.jna,[]
Parameters.S3Bucket.Description,S3 bucket Name for discovery
Metadata.AWS::CloudFormation::Interface.ParameterLabels.CIDRToWhitelist.default,Internal CIDR IP range to whitelist
Parameters.IgniteCodeLocation.Default,s3://publicbucketbabupe/ignitelibrary/apache-ignite-fabric-1.5.0.final-bin.zip
Parameters.JavaVersion.Type,String
Resources.AWS::IAM::AccessKey.DependsOn,[u'IgnitediscoveryUser']
Resources.AWS::IAM::AccessKey.Type,AWS::IAM::AccessKey
Parameters.JavaVersion.AllowedValues,"[u'Java7', u'Java8']"
Parameters.IgniteCodeLocation.Type,String
Parameters.FleetSize.Type,Number
Resources.AWS::AutoScaling::LaunchConfiguration.Properties.InstanceMonitoring,false
Resources.AWS::AutoScaling::ScalingPolicy.Properties.AdjustmentType,ChangeInCapacity
Parameters.ThirdSubnetId.Type,AWS::EC2::Subnet::Id
Parameters.awssdklocation.Type,String
Parameters.VpcId.Type,AWS::EC2::VPC::Id
Parameters.IgniteCodeLocation.Description,S3 location for Ignite code
Parameters.CIDRToWhitelist.MinLength,9
Metadata.AWS::CloudFormation::Interface.ParameterLabels.SecondSubnetId.default,Enter Second Subnet ID
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.configSets.default,"[u'configure_hosts', {u'Fn::If': [u'Installjava7', u'install_java7', u'install_java8']}, u'install_jna']"
Metadata.AWS::CloudFormation::Interface.ParameterLabels.FirstSubnetId.default,Enter First Subnet ID
Parameters.S3Bucket.Type,String
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.MinSize,{u'Ref': u'FleetSize'}
Resources.AWS::AutoScaling::LaunchConfiguration.Properties.KeyName,{u'Ref': u'SSHKeyName'}
Resources.AWS::AutoScaling::AutoScalingGroup.CreationPolicy.ResourceSignal.Timeout,PT30M
Metadata.AWS::CloudFormation::Interface.ParameterLabels.CacheName.default,Enter name of Cache
Resources.AWS::AutoScaling::ScalingPolicy.Properties.AutoScalingGroupName,{u'Ref': u'IgniteFleet'}
Resources.AWS::AutoScaling::ScalingPolicy.DependsOn,IgniteFleet
Parameters.RemoteAccessCIDR.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::AutoScaling::AutoScalingGroup.UpdatePolicy.AutoScalingRollingUpdate.MinInstancesInService,1
Parameters.IgniteconfigCodeLocation.Default,s3://publicbucketbabupe/ignitelibrary/configureIgnite.sh
Metadata.AWS::CloudFormation::Interface.ParameterLabels.JavaVersion.default,Enter Version of Java
Resources.AWS::EC2::SecurityGroup.Type,AWS::EC2::SecurityGroup
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.install_java8.packages.yum.java-1.8.0-openjdk-devel,[]
Resources.AWS::IAM::AccessKey.Properties.UserName,{u'Ref': u'IgnitediscoveryUser'}
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupEgress,"[{u'ToPort': u'65535', u'IpProtocol': u'-1', u'FromPort': u'1', u'CidrIp': u'0.0.0.0/0'}]"
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Enable access for Communication(Trim as Needed)
Parameters.FirstSubnetId.Description,First subnet ID in your Virtual Private Cloud (VPC)
Parameters.CacheName.Default,IgniteCache
Parameters.CIDRToWhitelist.ConstraintDescription,must be a valid CIDR range of the form x.x.x.x/x.
Parameters.VpcId.Description,VpcId of your existing Virtual Private Cloud (VPC)
Parameters.awssdklocation.Description,S3 location for AWS SDK for discovery using S3
Resources.AWS::AutoScaling::ScalingPolicy.Properties.Cooldown,120
Metadata.AWS::CloudFormation::Interface.ParameterLabels.SSHKeyName.default,Enter SSH Key pair name
Parameters.JavaVersion.Description,Java Version
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.configure_hosts.commands.01-create_hosts_entry-on_boot.test,test ! -f .create_hosts_entry-semaphore
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'ec2.amazonaws.com', u'autoscaling.amazonaws.com']}}]"
Parameters.SSHKeyName.Description,Name of an existing EC2 KeyPair to enable SSH access to the instances
Parameters.CacheName.Type,String
Parameters.RemoteAccessCIDR.MinLength,9
Resources.AWS::AutoScaling::ScalingPolicy.Type,AWS::AutoScaling::ScalingPolicy
Resources.AWS::EC2::SecurityGroup.Properties.VpcId,{u'Ref': u'VpcId'}
Parameters.FirstSubnetId.Type,AWS::EC2::Subnet::Id
Resources.AWS::AutoScaling::AutoScalingGroup.Type,AWS::AutoScaling::AutoScalingGroup
Resources.AWS::AutoScaling::AutoScalingGroup.UpdatePolicy.AutoScalingRollingUpdate.PauseTime,PT2M30S
Resources.AWS::IAM::User.Properties.Policies,"[{u'PolicyName': u'IgnitePolicy', u'PolicyDocument': {u'Statement': [{u'Action': [u's3:*'], u'Resource': u'*', u'Effect': u'Allow'}]}}]"
Parameters.SecondSubnetId.Description,Second subnet ID in your Virtual Private Cloud (VPC)
Resources.AWS::AutoScaling::AutoScalingGroup.UpdatePolicy.AutoScalingRollingUpdate.MaxBatchSize,1
Resources.AWS::AutoScaling::LaunchConfiguration.Type,AWS::AutoScaling::LaunchConfiguration
Parameters.CIDRToWhitelist.Default,0.0.0.0/0
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.configure_hosts.commands.01-create_hosts_entry-on_boot.command,"echo ""`curl -s curl http://169.254.169.254/latest/meta-data/local-ipv4` `hostname`"" >>/etc/hosts"
Parameters.FleetSize.MinValue,1
Resources.AWS::AutoScaling::LaunchConfiguration.Properties.ImageId,"{u'Fn::FindInMap': [u'AWSAmazonLinuxAMI', {u'Ref': u'AWS::Region'}, u'201503']}"
Metadata.AWS::CloudFormation::Interface.ParameterLabels.IgniteconfigCodeLocation.default,Enter location for ignite configuration script
Parameters.RemoteAccessCIDR.Default,0.0.0.0/0
Parameters.ThirdSubnetId.Description,Third subnet ID in your Virtual Private Cloud (VPC)
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.install_java8.commands.use_java8.command,alternatives --set java /usr/lib/jvm/jre-1.8.0-openjdk.x86_64/bin/java
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.MaxSize,{u'Ref': u'FleetSize'}
Resources.AWS::IAM::Role.Properties.Path,/
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Parameters.CacheName.Description,Cache Name
Parameters.CacheReplicas.Description,Number of replicas for cache data
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.VPCZoneIdentifier,"[{u'Ref': u'SecondSubnetId'}, {u'Ref': u'ThirdSubnetId'}, {u'Ref': u'FirstSubnetId'}]"
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.install_java7.commands.use_java7.command,alternatives --set java /usr/lib/jvm/jre-1.7.0-openjdk.x86_64/bin/java
Parameters.RemoteAccessCIDR.MaxLength,18
Resources.AWS::AutoScaling::LaunchConfiguration.Properties.SecurityGroups,[{u'Ref': u'IgniteSecurityGroup'}]
Resources.AWS::AutoScaling::ScalingPolicy.Properties.ScalingAdjustment,1
Parameters.FleetSize.Description,Number of nodes in the Ignite cluster
Parameters.IgniteconfigCodeLocation.Type,String
Resources.AWS::IAM::InstanceProfile.Type,AWS::IAM::InstanceProfile
Parameters.SSHKeyName.Type,AWS::EC2::KeyPair::KeyName
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'IgnitePolicy', u'PolicyDocument': {u'Statement': [{u'Action': [u's3:*', u'ec2:Describe*', u'ec2:AttachNetworkInterface', u'ec2:AttachVolume', u'ec2:CreateTags', u'ec2:CreateVolume', u'ec2:RunInstances', u'ec2:StartInstances', u'ec2:DeleteVolume', u'ec2:CreateSecurityGroup', u'ec2:CreateSnapshot', u'autoscaling:*'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u'dynamodb:*', u'dynamodb:Scan', u'dynamodb:Query', u'dynamodb:GetItem', u'dynamodb:BatchGetItem', u'dynamodb:UpdateTable'], u'Resource': [u'*'], u'Effect': u'Allow'}]}}]"
Metadata.AWS::CloudFormation::Interface.ParameterLabels.FleetSize.default,Enter number of nodes to launch
Metadata.AWS::CloudFormation::Interface.ParameterLabels.IgniteCodeLocation.default,Enter location for Ignite binaries
Parameters.IgniteconfigCodeLocation.Description,S3 location for Ignite configuration code
Parameters.RemoteAccessCIDR.Type,String
Parameters.FleetSize.MaxValue,300
Parameters.FleetSize.Default,1
Metadata.AWS::CloudFormation::Interface.ParameterLabels.CacheReplicas.default,Enter number of replicas for cache
Resources.AWS::IAM::InstanceProfile.Properties.Roles,[{u'Ref': u'IgniteRole'}]
Metadata.AWS::CloudFormation::Interface.ParameterLabels.ThirdSubnetId.default,Enter Third Subnet ID
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.LaunchConfigurationName,{u'Ref': u'IgniteLaunchConfig'}
