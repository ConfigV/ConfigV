Resources.AWS::IAM::InstanceProfile.Properties.Path,/
Resources.AWS::IAM::Policy.Properties.PolicyDocument.Statement,"[{u'Action': [u'ssm:ListAssociations', u'ssm:ListInstanceAssociations', u'ssm:UpdateInstanceInformation', u'ec2messages:GetMessages'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u'autoscaling:Describe*', u'autoscaling:UpdateAutoScalingGroup'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u'dynamodb:CreateTable', u'dynamodb:DescribeTable', u'dynamodb:DeleteTable', u'dynamodb:PutItem', u'dynamodb:GetItem', u'dynamodb:UpdateItem', u'dynamodb:DeleteItem', u'dynamodb:Query'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u'route53:CreateHostedZone', u'route53:ListHostedZonesByName', u'route53:GetHostedZone', u'route53:ChangeResourceRecordSets', u'route53:ListResourceRecordSets', u'route53:DeleteHostedZone'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u'logs:Create*', u'logs:Put*', u'logs:Delete*', u'logs:DescribeLogGroups', u'logs:DescribeLogStreams'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u'cloudwatch:PutMetricData'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u'ec2:AssignPrivateIpAddresses', u'ec2:UnassignPrivateIpAddresses', u'ec2:AssociateRouteTable', u'ec2:AttachInternetGateway', u'ec2:AttachNetworkInterface', u'ec2:AttachVolume', u'ec2:AuthorizeSecurityGroupEgress', u'ec2:AuthorizeSecurityGroupIngress', u'ec2:CreateInternetGateway', u'ec2:CreateNatGateway', u'ec2:CreateNetworkAcl', u'ec2:CreateNetworkAclEntry', u'ec2:CreateNetworkInterface', u'ec2:CreateRoute', u'ec2:CreateRouteTable', u'ec2:CreateSecurityGroup', u'ec2:CreateSubnet', u'ec2:CreateTags', u'ec2:CreateVolume', u'ec2:CreateVpc', u'ec2:DeleteInternetGateway', u'ec2:DeleteNatGateway', u'ec2:DeleteNetworkAcl', u'ec2:DeleteNetworkAclEntry', u'ec2:DeleteNetworkInterface', u'ec2:DeleteRoute', u'ec2:DeleteRouteTable', u'ec2:DeleteSecurityGroup', u'ec2:DeleteSubnet', u'ec2:DeleteTags', u'ec2:DeleteVolume', u'ec2:DeleteVpc', u'ec2:DescribeAvailabilityZones', u'ec2:DescribeHosts', u'ec2:DescribeImageAttribute', u'ec2:DescribeImages', u'ec2:DescribeInstanceStatus', u'ec2:DescribeInstances', u'ec2:DescribeInternetGateways', u'ec2:DescribeKeyPairs', u'ec2:DescribeNetworkInterfaces', u'ec2:DescribeRegions', u'ec2:DescribeRouteTables', u'ec2:DescribeSecurityGroups', u'ec2:DescribeSubnets', u'ec2:DescribeTags', u'ec2:DescribeVolumeAttribute', u'ec2:DescribeVolumeStatus', u'ec2:DescribeVolumes', u'ec2:DescribeVpcAttribute', u'ec2:DescribeVpcs', u'ec2:DetachInternetGateway', u'ec2:DetachNetworkInterface', u'ec2:DetachVolume', u'ec2:DisassociateAddress', u'ec2:DisassociateRouteTable', u'ec2:GetConsoleOutput', u'ec2:GetConsoleScreenshot', u'ec2:ModifyNetworkInterfaceAttribute', u'ec2:ModifyVpcAttribute', u'ec2:RebootInstances', u'ec2:ReleaseAddress', u'ec2:ReleaseHosts'], u'Resource': u'*', u'Effect': u'Allow'}]"
Resources.AWS::IAM::Policy.Properties.Roles,[{u'Ref': u'EC2Role'}]
Resources.AWS::IAM::InstanceProfile.Type,AWS::IAM::InstanceProfile
Parameters.ContainerPlatform.AllowedValues,"[u'ecs', u'swarm']"
Resources.AWS::IAM::Role.Properties.Path,/
Parameters.ContainerPlatform.Description,The container orchestration platform.
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'ec2.amazonaws.com']}}]"
Parameters.ContainerPlatform.Type,String
Resources.AWS::IAM::InstanceProfile.Properties.Roles,[{u'Ref': u'EC2Role'}]
Resources.AWS::IAM::Policy.Condition,ECSContainerPlatformCondition
Resources.AWS::IAM::Policy.Type,AWS::IAM::Policy
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Outputs.NodeInstanceProfile.Value,{u'Ref': u'Profile'}
Resources.AWS::IAM::Policy.Properties.PolicyName,firecamp-policy
Parameters.ContainerPlatform.Default,ecs
