Resources.AWS::EC2::Route.Type,AWS::EC2::Route
Resources.AWS::EC2::NetworkAclEntry.Properties.NetworkAclId,{u'Ref': u'PublicNetworkAcl'}
Mappings.SubnetConfig.VPC.CIDR,10.0.0.0/16
Parameters.SSHFrom.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Outputs.VPCId.Value,{u'Ref': u'VPC'}
Parameters.SSHFrom.MaxLength,18
Parameters.KeyName.ConstraintDescription,"can contain only alphanumeric characters, spaces, dashes and underscores."
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,false
Parameters.KeyName.MaxLength,64
Parameters.SSHFrom.MinLength,9
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'22', u'IpProtocol': u'tcp', u'CidrIp': {u'Ref': u'SSHFrom'}, u'FromPort': u'22'}]"
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.SubnetId,{u'Ref': u'PublicSubnet'}
Resources.AWS::EC2::NetworkAcl.Type,AWS::EC2::NetworkAcl
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Resources.AWS::EC2::SubnetNetworkAclAssociation.Type,AWS::EC2::SubnetNetworkAclAssociation
Resources.AWS::EC2::NetworkAclEntry.Type,AWS::EC2::NetworkAclEntry
Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,6
Resources.AWS::EC2::Subnet.Properties.CidrBlock,"{u'Fn::FindInMap': [u'SubnetConfig', u'Public', u'CIDR']}"
Resources.AWS::EC2::Instance.Properties.KeyName,{u'Ref': u'KeyName'}
Parameters.SSHFrom.Description,Lockdown SSH access to the bastion host (default can be accessed from anywhere)
Outputs.VPCId.Description,VPCId of the newly created VPC
Outputs.DNSName.Description,DNS Name of the EC2 host
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.NetworkAclId,{u'Ref': u'PublicNetworkAcl'}
Parameters.SSHFrom.ConstraintDescription,must be a valid CIDR range of the form x.x.x.x/x.
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,102
Resources.AWS::EC2::VPCGatewayAttachment.Properties.InternetGatewayId,{u'Ref': u'InternetGateway'}
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'Public', u'Key': u'Network'}]"
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Resources.AWS::EC2::Route.Properties.RouteTableId,{u'Ref': u'PublicRouteTable'}
Resources.AWS::EC2::Route.DependsOn,GatewayToInternet
Mappings.SubnetConfig.Public.CIDR,10.0.0.0/24
Resources.AWS::EC2::Instance.Properties.NetworkInterfaces,"[{u'DeleteOnTermination': u'true', u'DeviceIndex': u'0', u'SubnetId': {u'Ref': u'PublicSubnet'}, u'GroupSet': [{u'Ref': u'EC2SecurityGroup'}], u'AssociatePublicIpAddress': u'true'}]"
Resources.AWS::EC2::RouteTable.Properties.VpcId,{u'Ref': u'VPC'}
Outputs.PublicSubnet.Value,{u'Ref': u'PublicSubnet'}
Outputs.PublicSubnet.Description,SubnetId of the public subnet
Resources.AWS::EC2::VPC.Properties.CidrBlock,"{u'Fn::FindInMap': [u'SubnetConfig', u'VPC', u'CIDR']}"
Resources.AWS::EC2::Subnet.Type,AWS::EC2::Subnet
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.To,22
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Enable access to the EC2 host
Parameters.SSHFrom.Type,String
Resources.AWS::EC2::NetworkAcl.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.From,22
Resources.AWS::EC2::NetworkAcl.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'Public', u'Key': u'Network'}]"
Parameters.SSHFrom.Default,0.0.0.0/0
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,{u'Ref': u'PublicRouteTable'}
Resources.AWS::EC2::InternetGateway.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'Public', u'Key': u'Network'}]"
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'Public', u'Key': u'Network'}]"
Parameters.KeyName.Description,Name of an existing EC2 KeyPair to enable SSH access to the bastion host
Resources.AWS::EC2::InternetGateway.Type,AWS::EC2::InternetGateway
Resources.AWS::EC2::SecurityGroup.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::SecurityGroup.Type,AWS::EC2::SecurityGroup
Parameters.KeyName.MinLength,1
Outputs.DNSName.Value,"{u'Fn::GetAtt': [u'EC2Host', u'PublicDnsName']}"
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,{u'Ref': u'SSHFrom'}
Resources.AWS::EC2::VPCGatewayAttachment.Type,AWS::EC2::VPCGatewayAttachment
Resources.AWS::EC2::Route.Properties.GatewayId,{u'Ref': u'InternetGateway'}
Resources.AWS::EC2::VPC.Type,AWS::EC2::VPC
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'Public', u'Key': u'Network'}]"
Resources.AWS::EC2::SubnetRouteTableAssociation.Type,AWS::EC2::SubnetRouteTableAssociation
Resources.AWS::EC2::Instance.DependsOn,GatewayToInternet
Resources.AWS::EC2::Instance.Type,AWS::EC2::Instance
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,{u'Ref': u'PublicSubnet'}
Resources.AWS::EC2::RouteTable.Type,AWS::EC2::RouteTable
Parameters.KeyName.AllowedPattern,[-_ a-zA-Z0-9]*
Parameters.KeyName.Type,String
Resources.AWS::EC2::Instance.Properties.ImageId,"{u'Fn::FindInMap': [u'AWSRegionArch2AMI', {u'Ref': u'AWS::Region'}, {u'Fn::FindInMap': [u'AWSInstanceType2Arch', {u'Ref': u'EC2InstanceType'}, u'Arch']}]}"
