Resources.AWS::IAM::InstanceProfile.Properties.Path,/
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/storm-install.sh.owner,ec2-user
Parameters.ClusterNodeType.Default,cache.m1.small
Resources.AWS::Kinesis::Stream.Properties.ShardCount,2
Resources.AWS::EC2::Route.Type,AWS::EC2::Route
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/crontask.group,ec2-user
Parameters.ClusterNodeType.Type,String
Parameters.ClusterNodeType.Description,Node type for the Redis Cluster
Parameters.SSHLocation.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/node-app.js.mode,000755
Parameters.SSHLocation.ConstraintDescription,Please provide a valid IP CIDR range of the form x.x.x.x/x.
Resources.AWS::ElastiCache::CacheCluster.Properties.VpcSecurityGroupIds,[{u'Ref': u'RedisSecurityGroup'}]
Parameters.KeyName.ConstraintDescription,can contain only ASCII characters.
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/crontask.mode,000644
Parameters.KeyName.MaxLength,255
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/index.html.mode,000755
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': u'Public', u'Key': u'Network'}]"
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Parameters.SSHLocation.Description,The IP address range that can be used to SSH to the EC2 instances
Resources.AWS::CloudFormation::WaitCondition.Properties.Timeout,1200
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/sample.properties.content,"{u'Fn::Join': [u'', [u'topologyName = SampleTopology\n', u'streamName = ', {u'Ref': u'KinesisStream'}, u'\n', u'initialPositionInStream = TRIM_HORIZON\n', u'zookeeperEndpoint = localhost:2181\n', u'redisEndpoint = redisNode\n', u'regionName = ', {u'Ref': u'AWS::Region'}]]}"
Resources.AWS::ElastiCache::CacheCluster.Properties.NumCacheNodes,1
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/index.html.owner,root
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/node-app.js.owner,root
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/watchdog.sh.group,ec2-user
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/kinesis-storm-clickstream-sample-app.jar.mode,000755
Outputs.StormURL.Value,"{u'Fn::Join': [u'', [u'http://', {u'Fn::GetAtt': [u'StormInstance', u'PublicDnsName']}, u':8080']]}"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/storm-install.sh.source,https://s3.amazonaws.com/kinesis-storm-clickstream/storm-install.sh
Resources.AWS::EC2::Subnet.Properties.CidrBlock,10.0.1.0/24
Resources.AWS::EC2::Instance.Properties.KeyName,{u'Ref': u'KeyName'}
Outputs.StreamName.Value,{u'Ref': u'KinesisStream'}
Parameters.KeyName.Type,String
Resources.AWS::EC2::VPCGatewayAttachment.Properties.InternetGatewayId,{u'Ref': u'InternetGateway'}
Resources.AWS::ElastiCache::CacheCluster.Properties.Engine,redis
Resources.AWS::ElastiCache::CacheCluster.Type,AWS::ElastiCache::CacheCluster
Parameters.ClusterNodeType.ConstraintDescription,Please select a valid Cache Node type.
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/node-app.js.group,root
Resources.AWS::EC2::Route.Properties.RouteTableId,{u'Ref': u'PublicRouteTable'}
Resources.AWS::EC2::Instance.Properties.NetworkInterfaces,"[{u'SubnetId': {u'Ref': u'PublicSubnet'}, u'DeviceIndex': u'0', u'GroupSet': [{u'Ref': u'NodeJsSecurityGroup'}], u'DeleteOnTermination': u'true', u'AssociatePublicIpAddress': u'true'}]"
Resources.AWS::EC2::Instance.Properties.BlockDeviceMappings,"[{u'DeviceName': u'/dev/xvda', u'Ebs': {u'VolumeSize': u'100', u'VolumeType': u'gp2'}}]"
Resources.AWS::EC2::RouteTable.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'22', u'FromPort': u'22', u'IpProtocol': u'tcp', u'CidrIp': {u'Ref': u'SSHLocation'}}, {u'ToPort': u'8080', u'FromPort': u'8080', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0'}]"
Outputs.StormURL.Description,URL to the Storm UI
Outputs.VisualizationURL.Value,"{u'Fn::Join': [u'', [u'http://', {u'Fn::GetAtt': [u'NodeJsInstance', u'PublicDnsName']}, u':9000']]}"
Resources.AWS::EC2::VPC.Type,AWS::EC2::VPC
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'KinesisStreamAccess', u'PolicyDocument': {u'Statement': [{u'Action': [u'kinesis:*'], u'Resource': {u'Fn::Join': [u'', [u'arn:aws:kinesis:', {u'Ref': u'AWS::Region'}, u':', {u'Ref': u'AWS::AccountId'}, u':stream/', {u'Ref': u'KinesisStream'}]]}, u'Effect': u'Allow'}, {u'Action': [u'elasticache:DescribeCacheClusters'], u'Resource': [u'*'], u'Effect': u'Allow'}]}}]"
Resources.AWS::EC2::Subnet.Type,AWS::EC2::Subnet
Resources.AWS::IAM::InstanceProfile.Properties.Roles,[{u'Ref': u'InstanceIAMRole'}]
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupEgress,"[{u'ToPort': u'65535', u'FromPort': u'1', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0'}, {u'ToPort': u'65535', u'FromPort': u'1', u'IpProtocol': u'udp', u'CidrIp': u'0.0.0.0/0'}]"
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Enable HTTP and SSH access
Resources.AWS::CloudFormation::WaitCondition.DependsOn,StormInstance
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/node-app.js.source,https://s3.amazonaws.com/kinesis-storm-clickstream/node-app.js
Resources.AWS::EC2::Instance.Properties.UserData,"{u'Fn::Base64': {u'Fn::Join': [u'', [u'#!/bin/bash\n', u'\n', u'function error_exit\n', u'{\n', u'  /opt/aws/bin/cfn-signal -e 1 -r ""$1"" \'', {u'Ref': u'NodeJsWaitHandle'}, u""'\n"", u'  exit 1\n', u'}\n', u'\n', u'## Install and Update CloudFormation\n', u'yum update -y aws-cfn-bootstrap\n', u'\n', u'## Run CloudFormation Init\n', u'/opt/aws/bin/cfn-init -v -s ', {u'Ref': u'AWS::StackName'}, u' -r NodeJsInstance', u'   --region ', {u'Ref': u'AWS::Region'}, u"" > /home/ec2-user/cfn-init.log 2>&1 || error_exit 'Failed to run cfn-init.See cfn-init.log for details'\n"", u'\n', u'## Installing Node Js\n', u""yum install -y nodejs npm --enablerepo=epel > /home/ec2-user/node-install.log 2>&1 || error_exit 'Failed to install NodeJs.See node-install.log for details'\n"", u'\n', u'## Installing Node Packages\n', u'cd /mnt/clickstream-demo\n', u'npm install ""connect@2.20"" >> /home/ec2-user/node-install.log 2>&1 || error_exit \'Failed to install NodeJs.See node-install.log for details\'\n', u""npm install redis >> /home/ec2-user/node-install.log 2>&1 || error_exit 'Failed to install NodeJs.See node-install.log for details'\n"", u""wget http://fastly.github.io/epoch/download/epoch.0.6.0.zip >> /home/ec2-user/epoch-install.log 2>&1 || error_exit 'Failed to install Epoch.See epoch-install.log for details'\n"", u""unzip epoch.0.6.0.zip >> /home/ec2-user/epoch-install.log 2>&1 || error_exit 'Failed to install Epoch.See epoch-install.log for details'\n"", u'\n', u'## Starting Node app\n', u""redisNode=$(aws elasticache describe-cache-clusters --show-cache-node-info --query 'CacheClusters[].CacheNodes[].Endpoint.Address' --output text --region "", {u'Ref': u'AWS::Region'}, u' --cache-cluster-id ', {u'Ref': u'RedisCluster'}, u')\n', u""node node-app.js $redisNode & > /home/ec2-user/node-app.log 2>&1 || error_exit 'Failed to run NodeJs app.See /home/ec2-user/node-app.log for details'\n"", u'\n', u'## If all went well, signal success\n', u""/opt/aws/bin/cfn-signal -e $? -r 'Installation Complete' '"", {u'Ref': u'NodeJsWaitHandle'}, u""'\n""]]}}"
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,"{u'Fn::Select': [0, {u'Fn::GetAZs': u''}]}"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.packages.yum.java-1.7.0-openjdk,[]
Outputs.StreamName.Description,Name of the Kinesis Stream
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/index.html.source,https://s3.amazonaws.com/kinesis-storm-clickstream/index.html
Resources.AWS::CloudFormation::WaitCondition.Properties.Handle,{u'Ref': u'StormWaitHandle'}
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/kinesis-storm-clickstream-sample-app.jar.owner,ec2-user
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/storm-install.sh.mode,000755
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/kinesis-storm-clickstream-sample-app.jar.group,ec2-user
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,{u'Ref': u'PublicRouteTable'}
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'ec2.amazonaws.com']}}]"
Resources.AWS::ElastiCache::SubnetGroup.Properties.Description,Subnet for the Redis Elasticache instance.
Parameters.KeyName.Description,Name of an existing EC2 KeyPair to enable SSH access
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/watchdog.sh.content,"{u'Fn::Join': [u'', [u'#!/bin/bash\n', u'if ! ps aux | grep HttpReferrerStreamWriter | grep -v grep ; then\n', u'    # Launch our Kinesis stream writer to fill our stream with generated HTTP (resource, referrer) pairs.\n', u'    # This will create a writer with 5 threads to send records indefinitely.\n', u'    java -cp /mnt/clickstream-demo/lib/\\* com.amazonaws.services.kinesis.samples.datavis.HttpReferrerStreamWriter 5 ', {u'Ref': u'KinesisStream'}, u' ', {u'Ref': u'AWS::Region'}, u' &>> /home/ec2-user/clickstream-producer.log &\n', u'fi\n']]}"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/watchdog.sh.mode,000755
Resources.AWS::EC2::Instance.Properties.IamInstanceProfile,{u'Ref': u'InstanceProfile'}
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.sources./mnt/clickstream-demo/,https://github.com/awslabs/amazon-kinesis-data-visualization-sample/releases/download/v1.1.1/amazon-kinesis-data-visualization-sample-1.1.1-assembly.zip
Resources.AWS::EC2::InternetGateway.Type,AWS::EC2::InternetGateway
Resources.AWS::EC2::SecurityGroup.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::SecurityGroup.Type,AWS::EC2::SecurityGroup
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/storm-install.sh.group,ec2-user
Resources.AWS::ElastiCache::CacheCluster.Properties.CacheNodeType,{u'Ref': u'ClusterNodeType'}
Resources.AWS::ElastiCache::CacheCluster.Properties.CacheSubnetGroupName,{u'Ref': u'RedisSubnetGroup'}
Outputs.VisualizationURL.Description,URL to the Visualization
Parameters.SSHLocation.MinLength,9
Parameters.KeyName.MinLength,0
Resources.AWS::EC2::RouteTable.Type,AWS::EC2::RouteTable
Resources.AWS::ElastiCache::SubnetGroup.Properties.SubnetIds,[{u'Ref': u'PublicSubnet'}]
Parameters.ClusterNodeType.AllowedValues,"[u'cache.m1.small', u'cache.m1.medium', u'cache.m1.large', u'cache.m1.xlarge', u'cache.m2.xlarge', u'cache.m2.2xlarge', u'cache.m2.4xlarge', u'cache.m3.xlarge', u'cache.m3.2xlarge']"
Resources.AWS::CloudFormation::WaitConditionHandle.Type,AWS::CloudFormation::WaitConditionHandle
Resources.AWS::ElastiCache::SubnetGroup.Type,AWS::ElastiCache::SubnetGroup
Resources.AWS::IAM::Role.Properties.Path,/
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Parameters.SSHLocation.Type,String
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/crontask.content,"{u'Fn::Join': [u'', [u'* * * * * bash /mnt/clickstream-demo/watchdog.sh\n']]}"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/crontask.owner,ec2-user
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/kinesis-storm-clickstream-sample-app.jar.source,https://s3.amazonaws.com/kinesis-storm-clickstream/kinesis-storm-clickstream-sample-app.jar
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/index.html.group,root
Resources.AWS::EC2::VPCGatewayAttachment.Type,AWS::EC2::VPCGatewayAttachment
Resources.AWS::EC2::Route.Properties.GatewayId,{u'Ref': u'InternetGateway'}
Resources.AWS::EC2::VPC.Properties.CidrBlock,10.0.0.0/16
Resources.AWS::IAM::InstanceProfile.Type,AWS::IAM::InstanceProfile
Resources.AWS::EC2::SubnetRouteTableAssociation.Type,AWS::EC2::SubnetRouteTableAssociation
Resources.AWS::EC2::Instance.DependsOn,StormInstance
Resources.AWS::EC2::Instance.Type,AWS::EC2::Instance
Parameters.SSHLocation.MaxLength,18
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,{u'Ref': u'PublicSubnet'}
Parameters.SSHLocation.Default,0.0.0.0/0
Resources.AWS::Kinesis::Stream.Type,AWS::Kinesis::Stream
Resources.AWS::CloudFormation::WaitCondition.Type,AWS::CloudFormation::WaitCondition
Parameters.KeyName.AllowedPattern,[\x20-\x7E]*
Resources.AWS::EC2::Instance.Properties.ImageId,"{u'Fn::FindInMap': [u'AWSRegionArch2AMI', {u'Ref': u'AWS::Region'}, {u'Fn::FindInMap': [u'AWSInstanceType2Arch', {u'Ref': u'NodeJsInstanceType'}, u'Arch']}]}"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./mnt/clickstream-demo/watchdog.sh.owner,ec2-user
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
