Resources.AWS::IAM::InstanceProfile.Properties.Path,/
Resources.AWS::EC2::Route.Type,AWS::EC2::Route
Resources.AWS::EC2::NetworkAclEntry.Properties.NetworkAclId,{u'Ref': u'PublicNetworkAcl'}
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,false
Resources.AWS::EC2::Instance.Properties.UserData,"{u'Fn::Base64': {u'Fn::Join': [u'', [u'#!/bin/bash -ex\n', u'yum install -y aws-cli\n', u'cd /home/ec2-user/\n', u'wget https://aws-codedeploy-', {u'Ref': u'AWS::Region'}, u'.s3.amazonaws.com/latest/codedeploy-agent.noarch.rpm\n', u'yum -y install codedeploy-agent.noarch.rpm\n', u'service codedeploy-agent start\n', u'\n']]}}"
Resources.AWS::IAM::Policy.Properties.PolicyDocument.Statement,"[{u'Action': u'cloudformation:DescribeStackResources', u'Resource': [{u'Fn::Join': [u'', [u'arn:aws:cloudformation:', {u'Ref': u'AWS::Region'}, u':', {u'Ref': u'AWS::AccountId'}, u':stack/', {u'Ref': u'AWS::StackName'}, u'/*']]}], u'Effect': u'Allow'}, {u'Action': [u'autoscaling:Describe*', u'autoscaling:EnterStandby', u'autoscaling:ExitStandby', u'autoscaling:UpdateAutoScalingGroup'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u'ec2:DescribeInstances', u'ec2:DescribeInstanceStatus'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u's3:Get*', u's3:List*'], u'Resource': [{u'Fn::Join': [u'', [u'arn:aws:s3:::cicd-workshop-', {u'Ref': u'AWS::Region'}, u'-', {u'Ref': u'AWS::AccountId'}]]}, {u'Fn::Join': [u'', [u'arn:aws:s3:::cicd-workshop-', {u'Ref': u'AWS::Region'}, u'-', {u'Ref': u'AWS::AccountId'}, u'/*']]}, {u'Fn::Join': [u'', [u'arn:aws:s3:::codepipeline-', u'*']]}], u'Effect': u'Allow'}]"
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'80', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'80'}]"
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.SubnetId,{u'Ref': u'publicSubnet01'}
Resources.AWS::EC2::NetworkAcl.Type,AWS::EC2::NetworkAcl
Outputs.ProdPublicDNS.Value,"{u'Fn::Join': [u'', [u'http://', {u'Fn::GetAtt': [u'ProdWebApp01', u'PublicDnsName']}]]}"
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Resources.AWS::EC2::Instance.Properties.EbsOptimized,"{u'Fn::FindInMap': [u'AWSInstanceType2EBSOpt', {u'Fn::FindInMap': [u'instancesTypes', u'Demo', u'INST']}, u'EBSOpt']}"
Resources.AWS::EC2::SubnetNetworkAclAssociation.Type,AWS::EC2::SubnetNetworkAclAssociation
Resources.AWS::EC2::NetworkAclEntry.Type,AWS::EC2::NetworkAclEntry
Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,-1
Resources.AWS::IAM::Policy.Properties.Roles,[{u'Ref': u'WebAppRole'}]
Resources.AWS::IAM::Role.Properties.ManagedPolicyArns,"[u'arn:aws:iam::aws:policy/AWSCodeDeployReadOnlyAccess', u'arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess']"
Mappings.publicSubnetConfig.publicSubnet01.CIDR,10.0/24
Resources.AWS::EC2::Subnet.Properties.CidrBlock,"{u'Fn::Join': [u'', [{u'Fn::FindInMap': [u'VPCIpSpace', {u'Ref': u'AWS::Region'}, u'RANGE']}, u'.', {u'Fn::FindInMap': [u'publicSubnetConfig', u'publicSubnet01', u'CIDR']}]]}"
Resources.AWS::IAM::InstanceProfile.Type,AWS::IAM::InstanceProfile
Resources.AWS::IAM::Policy.Type,AWS::IAM::Policy
Outputs.DevPublicDNS.Description,DevWebApp01 Public DNS Name
Mappings.AWSRegionVirt2AMI.eu-central-1.HVM,ami-c7ee5ca8
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.NetworkAclId,{u'Ref': u'PublicNetworkAcl'}
Mappings.AWSRegionVirt2AMI.ca-central-1.HVM,ami-fd55ec99
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,2000
Resources.AWS::EC2::VPCGatewayAttachment.Properties.InternetGatewayId,{u'Ref': u'InternetGateway'}
Mappings.VPCIpSpace.ca-central-1.RANGE,10.42
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': u'PublicRouteTable', u'Key': u'Name'}]"
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Resources.AWS::EC2::Route.Properties.RouteTableId,{u'Ref': u'PublicRouteTable'}
Resources.AWS::EC2::Instance.Properties.NetworkInterfaces,"[{u'SubnetId': {u'Ref': u'publicSubnet01'}, u'DeviceIndex': u'0', u'GroupSet': [{u'Ref': u'WebAppSG'}], u'AssociatePublicIpAddress': u'true'}]"
Resources.AWS::EC2::RouteTable.Properties.VpcId,{u'Ref': u'DevOpsVPC'}
Resources.AWS::EC2::VPC.Type,AWS::EC2::VPC
Resources.AWS::EC2::Subnet.Type,AWS::EC2::Subnet
Mappings.SubnetTypeIpRanges.public.RANGE,0.0/17
Mappings.VPCIpSpace.eu-central-1.RANGE,10.42
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupEgress,"[{u'ToPort': u'80', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'80'}, {u'ToPort': u'443', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'443'}, {u'ToPort': u'123', u'IpProtocol': u'udp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'123'}, {u'ToPort': u'9418', u'IpProtocol': u'udp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'9418'}, {u'ToPort': u'-1', u'IpProtocol': u'icmp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'-1'}]"
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,{u'Ref': u'DevOpsVPC'}
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Enable HTTP access on port 80
Mappings.instancesTypes.Demo.INST,t2.small
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,"{u'Fn::Select': [u'0', {u'Fn::GetAZs': {u'Ref': u'AWS::Region'}}]}"
Resources.AWS::EC2::NetworkAcl.Properties.VpcId,{u'Ref': u'DevOpsVPC'}
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.From,0
Resources.AWS::EC2::NetworkAcl.Properties.Tags,"[{u'Value': u'NetworkAcl', u'Key': u'Name'}]"
Outputs.DevPublicDNS.Value,"{u'Fn::Join': [u'', [u'http://', {u'Fn::GetAtt': [u'DevWebApp01', u'PublicDnsName']}]]}"
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,{u'Ref': u'PublicRouteTable'}
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': u'sts:AssumeRole', u'Principal': {u'Service': u'ec2.amazonaws.com'}, u'Effect': u'Allow', u'Sid': u''}]"
Resources.AWS::EC2::InternetGateway.Properties.Tags,"[{u'Value': u'Devops-VPCIGW', u'Key': u'Name'}]"
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': u'Devops-VPC', u'Key': u'Name'}]"
Resources.AWS::EC2::Instance.Properties.IamInstanceProfile,{u'Ref': u'WebAppInstanceProfile'}
Resources.AWS::EC2::InternetGateway.Type,AWS::EC2::InternetGateway
Resources.AWS::EC2::SecurityGroup.Properties.VpcId,{u'Ref': u'DevOpsVPC'}
Resources.AWS::EC2::SecurityGroup.Type,AWS::EC2::SecurityGroup
Resources.AWS::EC2::Instance.Properties.ImageId,"{u'Fn::FindInMap': [u'AWSRegionVirt2AMI', {u'Ref': u'AWS::Region'}, {u'Fn::FindInMap': [u'AWSInstanceType2Virt', {u'Fn::FindInMap': [u'instancesTypes', u'Demo', u'INST']}, u'Virt']}]}"
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Resources.AWS::IAM::Role.Properties.Path,/
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Resources.AWS::EC2::VPCGatewayAttachment.Type,AWS::EC2::VPCGatewayAttachment
Resources.AWS::EC2::Route.Properties.GatewayId,{u'Ref': u'InternetGateway'}
Resources.AWS::EC2::VPC.Properties.CidrBlock,"{u'Fn::Join': [u'', [{u'Fn::FindInMap': [u'VPCIpSpace', {u'Ref': u'AWS::Region'}, u'RANGE']}, u'.', u'0.0/16']]}"
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': u'Public', u'Key': u'SubnetType'}, {u'Value': u'publicSubnet01', u'Key': u'Name'}]"
Resources.AWS::EC2::SubnetRouteTableAssociation.Type,AWS::EC2::SubnetRouteTableAssociation
Resources.AWS::EC2::Instance.Type,AWS::EC2::Instance
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,{u'Ref': u'publicSubnet01'}
Resources.AWS::EC2::RouteTable.Type,AWS::EC2::RouteTable
Resources.AWS::IAM::Policy.Properties.PolicyName,BackendRole
Outputs.ProdPublicDNS.Description,ProdWebApp01 Public DNS Name
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.To,65535
Resources.AWS::EC2::SecurityGroup.Properties.Tags,"[{u'Value': u'WebAppSG', u'Key': u'Name'}]"
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpcId,{u'Ref': u'DevOpsVPC'}
Resources.AWS::EC2::Instance.Properties.Tags,"[{u'Value': u'ProdWebApp01', u'Key': u'Name'}]"
Resources.AWS::IAM::InstanceProfile.Properties.Roles,[{u'Ref': u'WebAppRole'}]
