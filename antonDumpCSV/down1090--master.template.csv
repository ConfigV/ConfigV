Resources.AWS::CloudFormation::Stack.DependsOn,BastionHost
Parameters.SplunkLicensePath.Description,[Optional] Path to license file in S3 Bucket
Parameters.ClusterSize.Default,3
Parameters.CIDRBlock.Default,0.0.0.0/0
Parameters.SSHFrom.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Parameters.ClusterSecurityKey.Type,String
Parameters.SSHFrom.MaxLength,18
Parameters.KeyName.ConstraintDescription,"can contain only alphanumeric characters, spaces, dashes and underscores."
Resources.AWS::CloudFormation::Stack.Properties.Parameters.SSHFrom,{u'Ref': u'SSHFrom'}
Outputs.MasterNodeURL.Description,Splunk URL of cluster master
Parameters.ClusterAZCount.Type,Number
Outputs.MasterNodeURL.Value,"{u'Fn::GetAtt': [u'SplunkCluster', u'Outputs.MasterNodeURL']}"
Parameters.CIDRBlock.MaxLength,18
Parameters.SSHFrom.MinLength,9
Parameters.HostedZoneName.ConstraintDescription,Must be a valid DNS domain.
Outputs.SearchHeadIpAddress.Description,Public IP address of cluster search head
Resources.AWS::CloudFormation::Stack.Properties.Parameters.BastionKeyName,{u'Ref': u'BastionKeyName'}
Parameters.ClusterSecurityKey.ConstraintDescription,"can contain only alphanumeric characters, spaces, dashes and underscores."
Parameters.HostedZoneName.Default,
Parameters.ClusterSize.Description,Splunk Cluster size or number of peer nodes; must be between 2 and 9
Parameters.CIDRBlock.Description,Restrict incoming data from specified IP range (default can be received from anywhere)
Parameters.SplunkLicenseBucket.Description,[Optional] Name of private S3 bucket with licenses to be accessed via authenticated requests
Parameters.SSHFrom.Description,Lockdown SSH access to Bastion host (default can be accessed from anywhere)
Parameters.CIDRBlock.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Parameters.ClusterSecurityKey.AllowedPattern,[-_ a-zA-Z0-9]+
Outputs.PeerNodesURL.Description,Indexer tier address to forward data to
Parameters.ClusterSize.MinValue,2
Parameters.CIDRBlock.MinLength,9
Parameters.HostedZoneName.Description,[Optional] Hosted zone name e.g. 'example.com' (without trailing dot) - Route 53 must be the DNS service for specified domain
Outputs.SubnetIds.Description,Public subnets IDs
Parameters.BastionKeyName.Description,Name of the EC2 KeyPair we will create internally to access instances in our VPC from the Bastion host
Outputs.PeerNodesIpAddresses.Description,List of public IP address of all cluster peer nodes
Parameters.Subdomain.ConstraintDescription,"can contain only alphanumeric characters, and dashes and underscores."
Parameters.CIDRBlock.ConstraintDescription,must be a valid CIDR range of the form x.x.x.x/x.
Parameters.ClusterAZCount.AllowedValues,"[u'1', u'2', u'3']"
Parameters.Subdomain.MaxLength,255
Parameters.KeyName.Type,String
Parameters.SSHFrom.ConstraintDescription,must be a valid CIDR range of the form x.x.x.x/x.
Resources.AWS::CloudFormation::Stack.Properties.Parameters.ClusterSecurityKey,{u'Ref': u'ClusterSecurityKey'}
Outputs.MasterNodeIpAddress.Description,Public IP address of cluster master
Resources.AWS::CloudFormation::Stack.Metadata.Comment,VPC with 1 or more subnets across different AZs.
Resources.AWS::CloudFormation::Stack.Properties.Parameters.HostedZoneName,{u'Ref': u'HostedZoneName'}
Outputs.MasterNodeURL.Condition,AddDNSRecords
Parameters.ClusterAZCount.MaxValue,3
Parameters.Subdomain.Type,String
Parameters.Subdomain.AllowedPattern,[-_a-zA-Z0-9]*
Parameters.ClusterAZCount.Default,1
Parameters.KeyName.MinLength,1
Resources.AWS::CloudFormation::Stack.Properties.Parameters.Subdomain,{u'Ref': u'Subdomain'}
Outputs.PeerNodesURL.Condition,AddDNSRecords
Parameters.BastionKeyName.Default,bastion_key
Resources.AWS::CloudFormation::Stack.Properties.Parameters.KeyName,{u'Ref': u'BastionKeyName'}
Resources.AWS::CloudFormation::Stack.Properties.TemplateURL,"{u'Fn::Join': [u'/', [{u'Fn::FindInMap': [u'AWSRegion2s3Bucket', {u'Ref': u'AWS::Region'}, u's3Bucket']}, u'cloudformation-templates', u'vpc_multi_subnets.template']]}"
Outputs.BastionPublicIp.Value,"{u'Fn::GetAtt': [u'BastionHost', u'Outputs.PublicIp']}"
Outputs.MasterNodeIpAddress.Value,"{u'Fn::GetAtt': [u'SplunkCluster', u'Outputs.MasterNodeIpAddress']}"
Parameters.HostedZoneName.AllowedPattern,^(([a-zA-Z0-9]|[a-zA-Z0-9][-a-zA-Z0-9]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][-A-Za-z0-9]*[A-Za-z0-9])?$
Parameters.SSHFrom.Type,String
Outputs.SearchHeadURL.Description,Splunk URL of cluster search head
Resources.AWS::CloudFormation::Stack.Properties.Parameters.CIDRBlock,{u'Ref': u'CIDRBlock'}
Parameters.Subdomain.Default,
Parameters.Subdomain.Description,[Optional] Subdomain to use for new DNS records for cluster (without trailing dot)
Parameters.BastionKeyName.MaxLength,64
Parameters.BastionKeyName.MinLength,1
Parameters.BastionKeyName.Type,String
Outputs.BastionPublicIp.Description,Bastion host public IP address
Parameters.BastionKeyName.AllowedPattern,[-_ a-zA-Z0-9]*
Parameters.Subdomain.MinLength,0
Outputs.PeerNodesURL.Value,"{u'Fn::GetAtt': [u'SplunkCluster', u'Outputs.PeerNodesURL']}"
Outputs.SearchHeadURL.Condition,AddDNSRecords
Resources.AWS::CloudFormation::Stack.Properties.Parameters.SubnetIds,"{u'Fn::GetAtt': [u'VPC', u'Outputs.SubnetIds']}"
Parameters.KeyName.Description,Name of an existing EC2 KeyPair to enable SSH access to the Bastion host
Parameters.KeyName.MaxLength,64
Outputs.VpcId.Description,VPC ID of newly created VPC
Parameters.SSHFrom.Default,0.0.0.0/0
Parameters.ClusterSecurityKey.Default,password
Outputs.SearchHeadURL.Value,"{u'Fn::GetAtt': [u'SplunkCluster', u'Outputs.SearchHeadURL']}"
Parameters.ClusterAZCount.MinValue,1
Parameters.ClusterSize.Type,Number
Parameters.CIDRBlock.Type,String
Parameters.ClusterSize.AllowedValues,"[u'2', u'3', u'4', u'5', u'6', u'7', u'8', u'9']"
Outputs.SubnetIds.Value,"{u'Fn::GetAtt': [u'VPC', u'Outputs.SubnetIds']}"
Resources.AWS::CloudFormation::Stack.Properties.Parameters.VpcId,"{u'Fn::GetAtt': [u'VPC', u'Outputs.VpcId']}"
Resources.AWS::CloudFormation::Stack.Properties.Parameters.SplunkLicensePath,{u'Ref': u'SplunkLicensePath'}
Parameters.ClusterSecurityKey.Description,Security key to authenticate traffic between cluster nodes
Parameters.ClusterAZCount.Description,"Number of Availability Zones [1,2,3] to distribute nodes over; set to > 1 for Multi-AZ Clustering"
Parameters.ClusterSize.MaxValue,9
Parameters.SplunkLicenseBucket.Type,String
Parameters.SplunkLicensePath.Type,String
Resources.AWS::CloudFormation::Stack.Properties.Parameters.ClusterSize,{u'Ref': u'ClusterSize'}
Parameters.SplunkLicenseBucket.Default,
Resources.AWS::CloudFormation::Stack.Properties.Parameters.SubnetCount,{u'Ref': u'ClusterAZCount'}
Resources.AWS::CloudFormation::Stack.Type,AWS::CloudFormation::Stack
Resources.AWS::CloudFormation::Stack.Properties.Parameters.SplunkLicenseBucket,{u'Ref': u'SplunkLicenseBucket'}
Resources.AWS::CloudFormation::Stack.Properties.Parameters.SubnetId,"{u'Fn::GetAtt': [u'VPC', u'Outputs.MainSubnetId']}"
Parameters.SplunkLicensePath.Default,
Parameters.BastionKeyName.ConstraintDescription,"can contain only alphanumeric characters, spaces, dashes and underscores."
Outputs.SearchHeadIpAddress.Value,"{u'Fn::GetAtt': [u'SplunkCluster', u'Outputs.SearchHeadIpAddress']}"
Parameters.HostedZoneName.Type,String
Outputs.VpcId.Value,"{u'Fn::GetAtt': [u'VPC', u'Outputs.VpcId']}"
Parameters.KeyName.AllowedPattern,[-_ a-zA-Z0-9]*
Outputs.PeerNodesIpAddresses.Value,"{u'Fn::GetAtt': [u'SplunkCluster', u'Outputs.PeerNodesIpAddresses']}"
