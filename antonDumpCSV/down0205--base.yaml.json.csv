Resources.AWS::Serverless::Function.Properties.Events.ProxyApiGreedy.Properties.Path,/{proxy+}
Resources.AWS::Serverless::Function.Properties.CodeUri,../lambdas/cognito-user-pools-auto-confirm
Outputs.ApiGatewayApiConsoleUrl.Value,"[u'', [u'https://', u'AWS::Region', u'.console.aws.amazon.com/apigateway/home?region=', u'AWS::Region', u'#/apis/', u'ApiGatewayApi', u'/stages/prod']]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.options.consumes,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.x-amazon-apigateway-any-method.x-amazon-apigateway-integration.uri,"[u'', [u'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function', u':${stageVariables.DevPortalFunctionName}/invocations']]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Headers,"'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
Resources.AWS::Lambda::Permission.Properties.FunctionName,SubscriptionListenerLambdaFunction.Arn
Parameters.DevPortalSiteS3Bucket.Description,"The S3 bucket in which the web application code is stored. Bucket names are region-unique, so you must change this."
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.x-amazon-apigateway-any-method.produces,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.x-amazon-apigateway-any-method.x-amazon-apigateway-integration.type,aws_proxy
Resources.AWS::DynamoDB::Table.Type,AWS::DynamoDB::Table
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.get.produces,[u'application/json']
Outputs.CognitoUserPoolId.Value,CognitoUserPool
Resources.AWS::DynamoDB::Table.Properties.KeySchema,"[{u'KeyType': u'HASH', u'AttributeName': u'Id'}]"
Resources.AWS::S3::Bucket.Properties.WebsiteConfiguration.IndexDocument,index.html
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.options.responses.200.headers.Access-Control-Allow-Headers.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.options.x-amazon-apigateway-integration.requestTemplates.application/json,"{""statusCode"": 200}"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.options.x-amazon-apigateway-integration.requestTemplates.application/json,"{""statusCode"": 200}"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.options.responses.200.description,200 response
Resources.AWS::Serverless::Function.Properties.MemorySize,128
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.options.produces,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Methods,"'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::Cognito::IdentityPoolRoleAttachment.Type,AWS::Cognito::IdentityPoolRoleAttachment
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Headers,"'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.x-amazon-apigateway-any-method.produces,[u'application/json']
Resources.AWS::Cognito::UserPool.Properties.LambdaConfig.PreSignUp,PreSignupLambdaFunction.Arn
Resources.AWS::DynamoDB::Table.Properties.AttributeDefinitions,"[{u'AttributeName': u'Id', u'AttributeType': u'S'}, {u'AttributeName': u'MarketplaceCustomerId', u'AttributeType': u'S'}]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.options.consumes,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.x-amazon-apigateway-any-method.x-amazon-apigateway-integration.httpMethod,POST
Parameters.ArtifactsS3Bucket.Type,String
Outputs.CognitoUserPoolClientId.Description,Cognito User Pool App Client ID
Resources.AWS::Serverless::Function.Properties.Events.ProxyApiRoot.Properties.Method,ANY
Resources.AWS::Serverless::Function.Properties.Events.ProxyApiRoot.Properties.RestApiId,ApiGatewayApi
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.options.x-amazon-apigateway-integration.passthroughBehavior,when_no_match
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.post.x-amazon-apigateway-integration.httpMethod,POST
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.WriteCapacityUnits,5
Resources.AWS::Serverless::Api.Type,AWS::Serverless::Api
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.options.x-amazon-apigateway-integration.type,mock
Resources.AWS::Cognito::IdentityPoolRoleAttachment.Properties.Roles.authenticated,CognitoAuthenticatedRole.Arn
Resources.AWS::Lambda::Permission.Properties.SourceArn,"[u'', [u'arn:aws:sns:', u'AWS::Region', u':', u'AWS::AccountId', u':marketplace-test-topic']]"
Resources.AWS::Cognito::IdentityPool.Properties.AllowUnauthenticatedIdentities,False
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.options.x-amazon-apigateway-integration.passthroughBehavior,when_no_match
Parameters.CognitoIdentityPoolName.Description,The name for your Cognito Identity Pool
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.options.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.x-amazon-apigateway-any-method.x-amazon-apigateway-integration.passthroughBehavior,when_no_match
Outputs.CustomersTable.Value,CustomersTable
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement.Effect,Allow
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.ReadCapacityUnits,5
Outputs.ApiId.Description,API Gateway API ID.
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.post.produces,[u'application/json']
Parameters.ArtifactsS3Bucket.Description,"The S3 bucket in which the Lambda function code is stored. Bucket names are region-unique, so you must change this."
Outputs.CognitoIdentityPoolId.Value,CognitoIdentityPool
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.options.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::Serverless::Api.Properties.DefinitionBody.info.version,2016-09-02T22:37:24Z
Resources.AWS::S3::Bucket.Properties.WebsiteConfiguration.RoutingRules,"[{u'RoutingRuleCondition': {u'HttpErrorCodeReturnedEquals': 404}, u'RedirectRule': {u'HostName': [u'', [u'DevPortalSiteS3Bucket', u'.s3-website-', u'AWS::Region', u'.amazonaws.com']], u'ReplaceKeyPrefixWith': u'#!/'}}]"
Resources.AWS::Serverless::Function.Properties.Environment.Variables.WEBSITE_BUCKET_NAME,DevPortalSiteS3Bucket
Outputs.WebsiteURL.Value,"[u'', [u'http://', u'DevPortalSiteS3Bucket', u'.s3-website-', u'AWS::Region', u'.amazonaws.com']]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.options.consumes,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Methods,"'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
Resources.AWS::Serverless::Function.Type,AWS::Serverless::Function
Resources.AWS::Lambda::Permission.Properties.Action,lambda:InvokeFunction
Resources.AWS::Serverless::Function.Properties.Events.ProxyApiRoot.Type,Api
Outputs.ApiGatewayApiConsoleUrl.Description,Console URL for the API Gateway API's Stage.
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.options.x-amazon-apigateway-integration.responses.default.statusCode,200
Outputs.DevPortalFunctionName.Description,Devleoper Portal Lambda Function Name.
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement.Action,sts:AssumeRole
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.options.x-amazon-apigateway-integration.passthroughBehavior,when_no_match
Resources.AWS::Cognito::IdentityPool.Properties.CognitoIdentityProviders,"[{u'ProviderName': [u'', [u'cognito-idp.', u'AWS::Region', u'.amazonaws.com/', u'CognitoUserPool']], u'ClientId': u'CognitoUserPoolClient'}]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.x-amazon-apigateway-any-method.x-amazon-apigateway-integration.responses.default.statusCode,200
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.options.produces,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Headers,"'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.options.responses.200.headers.Access-Control-Allow-Methods.type,string
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Resources.AWS::DynamoDB::Table.Properties.GlobalSecondaryIndexes,"[{u'KeySchema': [{u'KeyType': u'HASH', u'AttributeName': u'MarketplaceCustomerId'}], u'IndexName': u'MarketplaceCustomerIdIndex', u'Projection': {u'ProjectionType': u'INCLUDE', u'NonKeyAttributes': [u'ApiKeyId']}, u'ProvisionedThroughput': {u'WriteCapacityUnits': u'5', u'ReadCapacityUnits': u'5'}}]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.options.responses.200.headers.Access-Control-Allow-Headers.type,string
Resources.AWS::Serverless::Function.Properties.Handler,index.handler
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.options.produces,[u'application/json']
Parameters.DevPortalCustomersTableName.Type,String
Outputs.ApiUrl.Value,"[u'', [u'https://', u'ApiGatewayApi', u'.execute-api.', u'AWS::Region', u'.amazonaws.com/prod']]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.options.responses.200.headers.Access-Control-Allow-Methods.type,string
Resources.AWS::Lambda::Permission.Type,AWS::Lambda::Permission
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.options.x-amazon-apigateway-integration.type,mock
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.options.consumes,[u'application/json']
Outputs.ApiUrl.Description,Invoke URL for your API. Clicking this link will perform a GET request on the root resource of your API.
Resources.AWS::Serverless::Api.Properties.DefinitionBody.schemes,[u'https']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.options.responses.200.description,200 response
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Methods,"'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
Parameters.DevPortalSiteS3Bucket.Type,String
Resources.AWS::Cognito::UserPool.Properties.UserPoolName,CognitoIdentityPoolName
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.options.x-amazon-apigateway-integration.type,mock
Resources.AWS::Serverless::Function.Properties.Events.ProxyApiRoot.Properties.Path,/
Resources.AWS::Serverless::Function.Properties.Runtime,nodejs4.3
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.options.x-amazon-apigateway-integration.responses.default.statusCode,200
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.post.x-amazon-apigateway-integration.uri,"[u'', [u'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function', u':${stageVariables.DevPortalFunctionName}/invocations']]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Methods,"'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'ApiGatewayMeteringPolicy', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u'aws-marketplace:BatchMeterUsage', u'aws-marketplace:ResolveCustomer'], u'Resource': u'*', u'Effect': u'Allow'}]}}]"
Resources.AWS::Serverless::Function.Properties.Events.ProxyApiGreedy.Type,Api
Resources.AWS::Serverless::Function.Properties.Events.ProxyApiGreedy.Properties.RestApiId,ApiGatewayApi
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.x-amazon-apigateway-any-method.parameters,"[{u'required': True, u'type': u'string', u'name': u'proxy', u'in': u'path'}]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.options.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement.Principal.Service,apigateway.amazonaws.com
Outputs.CustomersTable.Description,CustomersTable
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.x-amazon-apigateway-any-method.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.options.produces,[u'application/json']
Resources.AWS::Lambda::Permission.Properties.Principal,sns.amazonaws.com
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.x-amazon-apigateway-any-method.x-amazon-apigateway-integration.type,aws_proxy
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.options.x-amazon-apigateway-integration.responses.default.statusCode,200
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.options.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::Serverless::Api.Properties.StageName,prod
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.options.x-amazon-apigateway-integration.responses.default.statusCode,200
Outputs.CognitoUserPoolClientId.Value,CognitoUserPoolClient
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.options.responses.200.headers.Access-Control-Allow-Methods.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.options.x-amazon-apigateway-integration.requestTemplates.application/json,"{""statusCode"": 200}"
Outputs.ApiId.Value,ApiGatewayApi
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.options.consumes,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.options.responses.200.headers.Access-Control-Allow-Headers.type,string
Resources.AWS::Cognito::UserPoolClient.Properties.ClientName,CognitoIdentityPool
Resources.AWS::Serverless::Function.Properties.Timeout,3
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.options.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Headers,"'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.options.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::S3::Bucket.Type,AWS::S3::Bucket
Resources.AWS::DynamoDB::Table.Properties.TableName,DevPortalCustomersTableName
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': u'sts:AssumeRoleWithWebIdentity', u'Effect': u'Allow', u'Condition': {u'StringEquals': {u'cognito-identity.amazonaws.com:aud': u'CognitoIdentityPool'}, u'ForAnyValue:StringLike': {u'cognito-identity.amazonaws.com:amr': u'authenticated'}}, u'Principal': {u'Federated': u'cognito-identity.amazonaws.com'}}]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.get.x-amazon-apigateway-integration.httpMethod,POST
Parameters.MarketplaceSubscriptionTopic.Description,The marketplace SNS topic for subscription/unsubscription events
Resources.AWS::Cognito::UserPool.Type,AWS::Cognito::UserPool
Resources.AWS::Cognito::UserPool.Properties.Policies.PasswordPolicy.MinimumLength,8
Resources.AWS::Cognito::UserPool.Properties.Schema,"[{u'AttributeDataType': u'String', u'Required': False, u'Name': u'email'}]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.options.responses.200.description,200 response
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.options.x-amazon-apigateway-integration.type,mock
Resources.AWS::Cognito::IdentityPool.Type,AWS::Cognito::IdentityPool
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.options.x-amazon-apigateway-integration.responses.default.statusCode,200
Resources.AWS::Cognito::UserPoolClient.Type,AWS::Cognito::UserPoolClient
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.post.x-amazon-apigateway-integration.uri,"[u'', [u'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function', u':${stageVariables.DevPortalFunctionName}/invocations']]"
Outputs.LambdaFunctionConsoleUrl.Value,"[u'', [u'https://', u'AWS::Region', u'.console.aws.amazon.com/lambda/home?region=', u'AWS::Region', u'#/functions/', u'DevPortalLambdaFunction']]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.options.x-amazon-apigateway-integration.requestTemplates.application/json,"{""statusCode"": 200}"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.swagger,2
Resources.AWS::S3::Bucket.Properties.WebsiteConfiguration.ErrorDocument,error.html
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.options.responses.200.headers.Access-Control-Allow-Headers.type,string
Outputs.CognitoIdentityPoolId.Description,Cognito Identity Pool ID
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.options.produces,[u'application/json']
Parameters.CognitoIdentityPoolName.Type,String
Resources.AWS::Serverless::Api.Properties.Variables.DevPortalFunctionName,DevPortalLambdaFunction
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.options.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.post.x-amazon-apigateway-integration.type,aws_proxy
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.options.responses.200.headers.Access-Control-Allow-Headers.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.options.responses.200.description,200 response
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.options.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.options.x-amazon-apigateway-integration.passthroughBehavior,when_no_match
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.options.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.post.x-amazon-apigateway-integration.type,aws_proxy
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./register.options.responses.200.headers.Access-Control-Allow-Methods.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Headers,"'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
Resources.AWS::Serverless::Function.Properties.Events.ProxyApiGreedy.Properties.Method,ANY
Resources.AWS::Cognito::IdentityPool.Properties.IdentityPoolName,CognitoIdentityPoolName
Resources.AWS::Cognito::UserPoolClient.Properties.UserPoolId,CognitoUserPool
Resources.AWS::IAM::Role.Properties.Path,/
Parameters.DevPortalCustomersTableName.Description,The name of the DynamoDB Customers table.
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Resources.AWS::Serverless::Api.Properties.DefinitionBody.basePath,/prod
Resources.AWS::IAM::Role.Properties.RoleName,ApiGatewayMarketplaceMeteringRole
Resources.AWS::Serverless::Api.Properties.DefinitionBody.definitions.Empty.title,Empty Schema
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.options.responses.200.schema.$ref,#/definitions/Empty
Parameters.MarketplaceSubscriptionTopic.Type,String
Resources.AWS::Cognito::UserPoolClient.Properties.RefreshTokenValidity,30
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.options.responses.200.description,200 response
Resources.AWS::Cognito::IdentityPoolRoleAttachment.Properties.IdentityPoolId,CognitoIdentityPool
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.x-amazon-apigateway-any-method.responses.200.description,200 response
Resources.AWS::Serverless::Api.Properties.DefinitionBody.definitions.Empty.type,object
Resources.AWS::Serverless::Function.Properties.Role,DevPortalLambdaExecutionRole.Arn
Outputs.DevPortalFunctionName.Value,DevPortalLambdaFunction
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.get.x-amazon-apigateway-integration.type,aws_proxy
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.x-amazon-apigateway-any-method.x-amazon-apigateway-integration.uri,"[u'', [u'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function', u':${stageVariables.DevPortalFunctionName}/invocations']]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.post.produces,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.options.responses.200.headers.Access-Control-Allow-Methods.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Methods,"'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.x-amazon-apigateway-any-method.x-amazon-apigateway-integration.httpMethod,POST
Outputs.LambdaFunctionConsoleUrl.Description,Console URL for the Lambda Function.
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::S3::Bucket.Properties.AccessControl,PublicRead
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./catalog.get.x-amazon-apigateway-integration.uri,"[u'', [u'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function', u':${stageVariables.DevPortalFunctionName}/invocations']]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.options.x-amazon-apigateway-integration.requestTemplates.application/json,"{""statusCode"": 200}"
Outputs.WebsiteURL.Description,URL for website hosted on S3
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./marketplace-confirm/{usagePlanId}.post.x-amazon-apigateway-integration.httpMethod,POST
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.x-amazon-apigateway-any-method.x-amazon-apigateway-auth.type,aws_iam
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./{proxy+}.options.x-amazon-apigateway-integration.type,mock
Outputs.CognitoUserPoolId.Description,Cognito User Pool ID
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./.options.x-amazon-apigateway-integration.passthroughBehavior,when_no_match
Resources.AWS::Cognito::UserPoolClient.Properties.GenerateSecret,False
Resources.AWS::S3::Bucket.Properties.BucketName,DevPortalSiteS3Bucket
