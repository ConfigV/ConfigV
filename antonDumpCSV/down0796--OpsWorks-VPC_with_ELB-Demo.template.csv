Resources.AWS::IAM::InstanceProfile.Properties.Path,/
Resources.AWS::EC2::Route.Type,AWS::EC2::Route
Resources.AWS::EC2::NetworkAclEntry.Properties.NetworkAclId,{u'Ref': u'PrivateNetworkAcl'}
Mappings.SubnetConfig.VPC.CIDR,10.0.0.0/16
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,100
Resources.AWS::OpsWorks::Layer.Properties.CustomSecurityGroupIds,[{u'Ref': u'OpsWorksSecurityGroup'}]
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,true
Resources.AWS::EC2::Instance.Properties.SubnetId,{u'Ref': u'PublicSubnet'}
Resources.AWS::OpsWorks::Layer.Properties.Type,php-app
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'80', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'80'}]"
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.SubnetId,{u'Ref': u'PrivateSubnet'}
Outputs.ELB.Value,{u'Ref': u'ELB'}
Resources.AWS::EC2::NetworkAcl.Type,AWS::EC2::NetworkAcl
Resources.AWS::OpsWorks::Stack.Properties.Name,{u'Ref': u'AWS::StackName'}
Resources.AWS::OpsWorks::App.Properties.Name,MyPHPApp
Mappings.SubnetConfig.Public.CIDR,10.0.0.0/24
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.UnhealthyThreshold,5
Resources.AWS::EC2::SubnetNetworkAclAssociation.Type,AWS::EC2::SubnetNetworkAclAssociation
Resources.AWS::OpsWorks::Layer.Type,AWS::OpsWorks::Layer
Resources.AWS::EC2::NetworkAclEntry.Type,AWS::EC2::NetworkAclEntry
Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,6
Resources.AWS::EC2::Subnet.Properties.CidrBlock,"{u'Fn::FindInMap': [u'SubnetConfig', u'Private', u'CIDR']}"
Resources.AWS::IAM::InstanceProfile.Type,AWS::IAM::InstanceProfile
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Timeout,60
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Interval,90
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.NetworkAclId,{u'Ref': u'PrivateNetworkAcl'}
Resources.AWS::OpsWorks::ElasticLoadBalancerAttachment.Properties.ElasticLoadBalancerName,{u'Ref': u'ELB'}
Resources.AWS::EC2::Instance.Properties.SecurityGroupIds,[{u'Ref': u'NATSecurityGroup'}]
Resources.AWS::EC2::VPCGatewayAttachment.Properties.InternetGatewayId,{u'Ref': u'InternetGateway'}
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'Public', u'Key': u'Network'}]"
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Type,AWS::ElasticLoadBalancing::LoadBalancer
Resources.AWS::OpsWorks::App.Properties.StackId,{u'Ref': u'OpsWorksStack'}
Resources.AWS::OpsWorks::Instance.Properties.StackId,{u'Ref': u'OpsWorksStack'}
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Subnets,[{u'Ref': u'PublicSubnet'}]
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Resources.AWS::EC2::Route.Properties.RouteTableId,{u'Ref': u'PrivateRouteTable'}
Resources.AWS::EC2::Route.DependsOn,VPCGatewayAttachment
Resources.AWS::EC2::EIP.Properties.Domain,vpc
Resources.AWS::OpsWorks::Stack.Type,AWS::OpsWorks::Stack
Resources.AWS::EC2::RouteTable.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::OpsWorks::ElasticLoadBalancerAttachment.Properties.LayerId,{u'Ref': u'OpsWorksLayer'}
Outputs.PublicSubnet.Value,{u'Ref': u'PublicSubnet'}
Resources.AWS::OpsWorks::App.Properties.AppSource.Type,git
Outputs.PrivateSubnet.Value,{u'Ref': u'PrivateSubnet'}
Resources.AWS::OpsWorks::Layer.DependsOn,"[u'NATIPAddress', u'PublicRoute', u'PublicSubnetRouteTableAssociation', u'PrivateRoute', u'PrivateSubnetRouteTableAssociation', u'OpsWorksApp']"
Resources.AWS::EC2::VPC.Properties.CidrBlock,"{u'Fn::FindInMap': [u'SubnetConfig', u'VPC', u'CIDR']}"
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'opsworks-service', u'PolicyDocument': {u'Statement': [{u'Action': [u'ec2:*', u'iam:PassRole', u'cloudwatch:GetMetricStatistics', u'elasticloadbalancing:*'], u'Resource': u'*', u'Effect': u'Allow'}]}}]"
Resources.AWS::OpsWorks::Stack.Properties.DefaultSubnetId,{u'Ref': u'PrivateSubnet'}
Resources.AWS::EC2::Subnet.Type,AWS::EC2::Subnet
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.To,65535
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.HealthyThreshold,3
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupEgress,"[{u'ToPort': u'80', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'80'}]"
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::Route.Properties.InstanceId,{u'Ref': u'NATDevice'}
Resources.AWS::OpsWorks::Layer.Properties.Name,MyPHPApp
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Allow inbound access to the ELB
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Listeners,"[{u'InstancePort': u'80', u'LoadBalancerPort': u'80', u'Protocol': u'HTTP'}]"
Resources.AWS::EC2::EIP.Type,AWS::EC2::EIP
Resources.AWS::OpsWorks::App.Type,AWS::OpsWorks::App
Mappings.SubnetConfig.Private.CIDR,10.0.1.0/24
Resources.AWS::EC2::NetworkAcl.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::Instance.Properties.SourceDestCheck,false
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.From,0
Resources.AWS::OpsWorks::ElasticLoadBalancerAttachment.Type,AWS::OpsWorks::ElasticLoadBalancerAttachment
Resources.AWS::EC2::NetworkAcl.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'Public', u'Key': u'Network'}]"
Resources.AWS::EC2::VPC.DependsOn,OpsWorksServiceRole
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,{u'Ref': u'PrivateRouteTable'}
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'ec2.amazonaws.com']}}]"
Resources.AWS::EC2::InternetGateway.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'Public', u'Key': u'Network'}]"
Resources.AWS::OpsWorks::Instance.Type,AWS::OpsWorks::Instance
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'Public', u'Key': u'Network'}]"
Resources.AWS::OpsWorks::Layer.Properties.Shortname,php-app
Resources.AWS::EC2::InternetGateway.Type,AWS::EC2::InternetGateway
Resources.AWS::EC2::SecurityGroup.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::SecurityGroup.Type,AWS::EC2::SecurityGroup
Outputs.StackId.Value,{u'Ref': u'OpsWorksStack'}
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Target,HTTP:80/
Resources.AWS::OpsWorks::Layer.Properties.StackId,{u'Ref': u'OpsWorksStack'}
Resources.AWS::OpsWorks::Layer.Properties.AutoAssignPublicIps,true
Resources.AWS::OpsWorks::Layer.Properties.EnableAutoHealing,true
Resources.AWS::OpsWorks::Stack.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::OpsWorks::Stack.Properties.ServiceRoleArn,"{u'Fn::GetAtt': [u'OpsWorksServiceRole', u'Arn']}"
Resources.AWS::OpsWorks::App.Properties.AppSource.Url,git://github.com/amazonwebservices/opsworks-demo-php-simple-app.git
Resources.AWS::EC2::Instance.Properties.ImageId,"{u'Fn::FindInMap': [u'AWSNATAMI', {u'Ref': u'AWS::Region'}, u'AMI']}"
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Resources.AWS::IAM::Role.Properties.Path,/
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Outputs.VPC.Description,VPC
Resources.AWS::OpsWorks::Layer.Metadata.Comment,OpsWorks instances require outbound Internet access. Using DependsOn to make sure outbound Internet Access is estlablished before creating instances in this layer.
Outputs.AppId.Value,{u'Ref': u'OpsWorksApp'}
Resources.AWS::EC2::VPCGatewayAttachment.Type,AWS::EC2::VPCGatewayAttachment
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.SecurityGroups,[{u'Ref': u'ELBSecurityGroup'}]
Resources.AWS::EC2::Route.Properties.GatewayId,{u'Ref': u'InternetGateway'}
Resources.AWS::EC2::VPC.Type,AWS::EC2::VPC
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'Private', u'Key': u'Name'}]"
Resources.AWS::EC2::SubnetRouteTableAssociation.Type,AWS::EC2::SubnetRouteTableAssociation
Resources.AWS::OpsWorks::App.Properties.AppSource.Revision,version1
Resources.AWS::OpsWorks::Instance.Properties.LayerIds,[{u'Ref': u'OpsWorksLayer'}]
Resources.AWS::EC2::Instance.Type,AWS::EC2::Instance
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,{u'Ref': u'PrivateSubnet'}
Resources.AWS::EC2::RouteTable.Type,AWS::EC2::RouteTable
Resources.AWS::OpsWorks::App.Properties.Type,php
Resources.AWS::OpsWorks::App.Properties.Attributes.DocumentRoot, 
Resources.AWS::EC2::EIP.Properties.InstanceId,{u'Ref': u'NATDevice'}
Resources.AWS::OpsWorks::Layer.Properties.AutoAssignElasticIps,false
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::OpsWorks::Stack.Properties.DefaultInstanceProfileArn,"{u'Fn::GetAtt': [u'OpsWorksInstanceProfile', u'Arn']}"
Resources.AWS::IAM::InstanceProfile.Properties.Roles,[{u'Ref': u'OpsWorksInstanceRole'}]
Outputs.VPC.Value,{u'Ref': u'VPC'}
