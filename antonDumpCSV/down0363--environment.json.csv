Resources.AWS::EC2::Route.Type,AWS::EC2::Route
Outputs.S3VPCEndpoint.Value,{u'Ref': u'VPCEndpoint'}
Resources.AWS::EC2::NetworkAclEntry.Properties.NetworkAclId,{u'Ref': u'NetworkAcl'}
Mappings.AWSRegionArch2AMI.eu-central-1.PV64,ami-a03503bd
Parameters.KeyName.ConstraintDescription,must be the name of an existing EC2 KeyPair.
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,true
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'22', u'FromPort': u'22', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0'}]"
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.SubnetId,{u'Ref': u'PublicSubnet'}
Resources.AWS::EC2::NetworkAcl.Type,AWS::EC2::NetworkAcl
Resources.AWS::EC2::Route.Properties.NatGatewayId,{u'Ref': u'MNATG'}
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Resources.AWS::EC2::SubnetNetworkAclAssociation.Type,AWS::EC2::SubnetNetworkAclAssociation
Outputs.BastionInstance.Description,Bastion Instance
Resources.AWS::EC2::NetworkAclEntry.Type,AWS::EC2::NetworkAclEntry
Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,6
Resources.AWS::EC2::VPCEndpoint.Properties.PolicyDocument.Statement,"[{u'Action': [u's3:*'], u'Resource': [u'*'], u'Effect': u'Allow', u'Principal': {u'AWS': [u'*']}}]"
Resources.AWS::EC2::Subnet.Properties.CidrBlock,10.0.2.0/24
Resources.AWS::EC2::Instance.Properties.KeyName,{u'Ref': u'KeyName'}
Resources.AWS::EC2::NatGateway.Properties.SubnetId,{u'Ref': u'PublicSubnet'}
Resources.AWS::EC2::NatGateway.Properties.AllocationId,"{u'Fn::GetAtt': [u'EipNat', u'AllocationId']}"
Parameters.KeyName.Type,AWS::EC2::KeyPair::KeyName
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.NetworkAclId,{u'Ref': u'NetworkAcl'}
Resources.AWS::EC2::VPCEndpoint.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,102
Resources.AWS::EC2::VPCGatewayAttachment.Properties.InternetGatewayId,{u'Ref': u'InternetGateway'}
Resources.AWS::EC2::VPCEndpoint.Type,AWS::EC2::VPCEndpoint
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackId'}, u'Key': u'Application'}]"
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Resources.AWS::EC2::Route.Properties.RouteTableId,{u'Ref': u'PvtRouteTable'}
Resources.AWS::EC2::Route.DependsOn,AttachGateway
Resources.AWS::EC2::EIP.Properties.Domain,{u'Ref': u'VPC'}
Resources.AWS::EC2::Instance.Properties.NetworkInterfaces,"[{u'SubnetId': {u'Ref': u'PublicSubnet'}, u'DeviceIndex': u'0', u'GroupSet': [{u'Ref': u'BastionSG'}], u'DeleteOnTermination': u'true', u'AssociatePublicIpAddress': u'true'}]"
Resources.AWS::EC2::RouteTable.Properties.VpcId,{u'Ref': u'VPC'}
Outputs.PublicSubnet.Value,{u'Ref': u'PublicSubnet'}
Outputs.PrivateSubnet.Value,{u'Ref': u'PrivateSubnet'}
Resources.AWS::EC2::VPC.Type,AWS::EC2::VPC
Resources.AWS::EC2::Subnet.Type,AWS::EC2::Subnet
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.To,65535
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::NatGateway.Type,AWS::EC2::NatGateway
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,BastionSG
Resources.AWS::EC2::EIP.Type,AWS::EC2::EIP
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,us-west-2a
Resources.AWS::EC2::NetworkAcl.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.From,1024
Resources.AWS::EC2::NetworkAcl.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackId'}, u'Key': u'Application'}]"
Resources.AWS::EC2::VPCEndpoint.Properties.RouteTableIds,[{u'Ref': u'PvtRouteTable'}]
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,{u'Ref': u'RouteTable'}
Resources.AWS::EC2::InternetGateway.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackId'}, u'Key': u'Application'}]"
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackId'}, u'Key': u'Application'}]"
Parameters.KeyName.Description,Name of an existing EC2 KeyPair to enable SSH access to the instance
Resources.AWS::EC2::InternetGateway.Type,AWS::EC2::InternetGateway
Outputs.NatEip.Value,{u'Ref': u'EipNat'}
Resources.AWS::EC2::VPCEndpoint.Properties.PolicyDocument.Version,2012-10-17
Resources.AWS::EC2::SecurityGroup.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::SecurityGroup.Type,AWS::EC2::SecurityGroup
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Mappings.AWSRegionArch2AMI.eu-central-1.HVMG2,ami-b03503ad
Resources.AWS::EC2::VPCGatewayAttachment.Type,AWS::EC2::VPCGatewayAttachment
Resources.AWS::EC2::Route.Properties.GatewayId,{u'Ref': u'InternetGateway'}
Resources.AWS::EC2::VPC.Properties.CidrBlock,10.0.0.0/16
Resources.AWS::EC2::SubnetRouteTableAssociation.Type,AWS::EC2::SubnetRouteTableAssociation
Resources.AWS::EC2::Instance.Type,AWS::EC2::Instance
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,{u'Ref': u'PublicSubnet'}
Resources.AWS::EC2::RouteTable.Type,AWS::EC2::RouteTable
Resources.AWS::EC2::Subnet.Properties.MapPublicIpOnLaunch,false
Mappings.AWSRegionArch2AMI.eu-central-1.HVM64,ami-b43503a9
Resources.AWS::EC2::Instance.Properties.ImageId,"{u'Fn::FindInMap': [u'AWSRegionArch2AMI', {u'Ref': u'AWS::Region'}, {u'Fn::FindInMap': [u'AWSInstanceType2Arch', {u'Ref': u'InstanceType'}, u'Arch']}]}"
Resources.AWS::EC2::VPCEndpoint.Properties.ServiceName,"{u'Fn::Join': [u'.', [u'com.amazonaws', {u'Ref': u'AWS::Region'}, u's3']]}"
Resources.AWS::EC2::SecurityGroup.Properties.Tags,"[{u'Value': u'BastionSG', u'Key': u'Name'}]"
Resources.AWS::EC2::Instance.Properties.Tags,"[{u'Value': u'BastionInstance', u'Key': u'Name'}]"
Outputs.BastionInstance.Value,"{u'Fn::GetAtt': [u'BastionInstance', u'PublicDnsName']}"
Outputs.VPC.Value,{u'Ref': u'VPC'}
