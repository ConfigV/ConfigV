Resources.AWS::EC2::SecurityGroupIngress.Type,AWS::EC2::SecurityGroupIngress
Parameters.ImageId.Description,ImageId(AMI)
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Allow Ingress(22) from Internet and allow Egress to EC2Web
Resources.AWS::EC2::Instance.Properties.KeyName,"[u'${AppName}KeyPair', {u'AppName': u'AppName'}]"
Parameters.AppName.Description,AppName
Resources.AWS::EC2::Instance.Properties.ImageId,ImageId
Outputs.PublicIpBastion.Value,Bastion.PublicIp
Resources.AWS::EC2::SecurityGroupIngress.Properties.ToPort,22
Resources.AWS::EC2::SecurityGroupIngress.Properties.IpProtocol,tcp
Resources.AWS::EC2::SecurityGroupIngress.Properties.GroupId,SGBastion.GroupId
Resources.AWS::EC2::Instance.Properties.NetworkInterfaces,"[{u'SubnetId': {u'Fn::ImportValue': [u'${AppName}PublicSubnet1a', {u'AppName': u'AppName'}]}, u'DeviceIndex': 0, u'GroupSet': [u'SGBastion'], u'AssociatePublicIpAddress': True}]"
Resources.AWS::EC2::SecurityGroupIngress.Properties.SourceSecurityGroupId,SGBastion.GroupId
Resources.AWS::EC2::Instance.Type,AWS::EC2::Instance
Resources.AWS::EC2::SecurityGroupIngress.Properties.FromPort,22
Resources.AWS::EC2::SecurityGroupIngress.Properties.CidrIp,0.0.0.0/0
Resources.AWS::EC2::SecurityGroup.Properties.VpcId,"{u'Fn::ImportValue': [u'${AppName}VPC', {u'AppName': u'AppName'}]}"
Parameters.AppName.Type,String
Resources.AWS::EC2::SecurityGroup.Type,AWS::EC2::SecurityGroup
Parameters.ImageId.Type,String
Resources.AWS::EC2::SecurityGroup.Properties.Tags,"[{u'Value': u'AWS::StackName', u'Key': u'Name'}]"
Resources.AWS::EC2::Instance.Properties.Tags,"[{u'Value': u'AWS::StackName', u'Key': u'Name'}]"
