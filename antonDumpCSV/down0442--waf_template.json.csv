Resources.AWS::WAF::Rule.Properties.MetricName,AutoBlockRule
Resources.AWS::Lambda::Function.Properties.Code.S3Key,waf-reactive-blacklist/parser.zip
Metadata.AWS::CloudFormation::Interface.ParameterLabels.CloudFrontAccessLogBucket.default,CloudFront Access Log Bucket Name
Resources.AWS::Lambda::Function.Properties.Runtime,python2.7
Metadata.AWS::CloudFormation::Interface.ParameterLabels.RequestThreshold.default,Request Threshold
Outputs.CloudFrontAccessLogBucket.Condition,CreateBucket
Outputs.AutoBlockIPSetID.Description,Auto Block IP Set ID
Parameters.CloudFrontCreateAccessLogBucket.Default,yes
Parameters.RequestThreshold.Default,400
Resources.AWS::Lambda::Function.Properties.Description,"{u'Fn::Join': [u':', [{u'Ref': u'RequestThreshold'}, {u'Ref': u'WAFBlockPeriod'}, {u'Ref': u'WAFQuarantinePeriod'}]]}"
Outputs.ManualBlockIPSetID.Description,Manual Block IP Set ID
Parameters.WAFBlockPeriod.Type,Number
Parameters.CloudFrontCreateAccessLogBucket.AllowedValues,"[u'yes', u'no']"
Resources.AWS::WAF::IPSet.Type,AWS::WAF::IPSet
Outputs.ManualBlockIPSetID.Value,{u'Ref': u'WAFManualBlockSet'}
Resources.AWS::Lambda::Permission.Properties.Principal,s3.amazonaws.com
Resources.AWS::Lambda::Permission.Properties.Action,lambda:*
Outputs.RequestThreshold.Value,{u'Ref': u'RequestThreshold'}
Outputs.RequestThreshold.Description,Request Threshold
Resources.AWS::Lambda::Function.Properties.Timeout,60
Metadata.AWS::CloudFormation::Interface.ParameterLabels.WAFQuarantinePeriod.default,WAF Quarantine Period
Resources.AWS::IAM::Role.Properties.Path,/
Resources.AWS::Lambda::Permission.Type,AWS::Lambda::Permission
Resources.AWS::WAF::WebACL.Properties.Name,Malicious Requesters
Resources.AWS::WAF::WebACL.Properties.DefaultAction.Type,ALLOW
Parameters.WAFQuarantinePeriod.Description,Enter for how long (in minutes) IP addresses should be kept in quarantine. Default: 4 hours (240 minutes)
Outputs.AutoCountIPSetID.Description,Auto Count IP Set ID
Parameters.WAFBlockPeriod.Default,240
Parameters.CloudFrontCreateAccessLogBucket.Type,String
Parameters.CloudFrontCreateAccessLogBucket.Description,Select Yes to create a new S3 bucket for CloudFront Access Logs. Select No if you already have an S3 bucket for CloudFront Access logs.
Resources.AWS::WAF::WebACL.Type,AWS::WAF::WebACL
Resources.AWS::WAF::IPSet.Properties.Name,Manual Block Set
Outputs.WAFQuarantinePeriod.Description,WAF Quarantine Period
Outputs.CloudFrontAccessLogBucket.Description,CloudFront Access Log Bucket
Outputs.WAFBlockPeriod.Description,WAF Block Period
Resources.AWS::Lambda::Function.Properties.Code.S3Bucket,"{u'Fn::Join': [u'.', [{u'Ref': u'AWS::Region'}, u'heitorc']]}"
Resources.AWS::WAF::Rule.Properties.Name,Auto Block Rule
Metadata.AWS::CloudFormation::Interface.ParameterLabels.WAFBlockPeriod.default,WAF Block Period
Parameters.CloudFrontAccessLogBucket.Type,String
Parameters.WAFBlockPeriod.Description,Enter for how long (in minutes) IP addresses should be blocked. Default: 4 hours (240 minutes)
Resources.AWS::WAF::Rule.Properties.Predicates,"[{u'DataId': {u'Ref': u'WAFAutoBlockSet'}, u'Type': u'IPMatch', u'Negated': False}]"
Resources.AWS::Lambda::Function.Properties.MemorySize,512
Resources.AWS::S3::Bucket.Type,AWS::S3::Bucket
Resources.AWS::Lambda::Function.Properties.Handler,parser.lambda_handler
Parameters.WAFQuarantinePeriod.Default,240
Resources.AWS::Lambda::Function.DependsOn,LambdaRole
Resources.AWS::Lambda::Function.Type,AWS::Lambda::Function
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'lambda.amazonaws.com']}}]"
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Resources.AWS::S3::Bucket.Condition,CreateBucket
Outputs.AutoBlockIPSetID.Value,{u'Ref': u'WAFAutoBlockSet'}
Resources.AWS::Lambda::Permission.Properties.SourceAccount,{u'Ref': u'AWS::AccountId'}
Parameters.RequestThreshold.Type,Number
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Resources.AWS::WAF::WebACL.Properties.MetricName,MaliciousRequesters
Resources.AWS::Lambda::Permission.Properties.FunctionName,"{u'Fn::GetAtt': [u'LambdaWAFBlacklistingFunction', u'Arn']}"
Outputs.CloudFrontAccessLogBucket.Value,{u'Ref': u'CloudFrontAccessLogBucket'}
Parameters.WAFQuarantinePeriod.Type,Number
Resources.AWS::WAF::Rule.Type,AWS::WAF::Rule
Outputs.WAFBlockPeriod.Value,{u'Ref': u'WAFBlockPeriod'}
Resources.AWS::S3::Bucket.Properties.AccessControl,Private
Outputs.AutoCountIPSetID.Value,{u'Ref': u'WAFAutoCountSet'}
Resources.AWS::Lambda::Permission.DependsOn,LambdaWAFBlacklistingFunction
Parameters.CloudFrontAccessLogBucket.Default,
Metadata.AWS::CloudFormation::Interface.ParameterLabels.CloudFrontCreateAccessLogBucket.default,Create CloudFront Access Log Bucket
Resources.AWS::WAF::Rule.DependsOn,WAFAutoBlockSet
Resources.AWS::S3::Bucket.DeletionPolicy,Retain
Resources.AWS::S3::Bucket.DependsOn,LambdaWAFBlacklistingFunction
Metadata.AWS::CloudFormation::Interface.ParameterGroups,"[{u'Parameters': [u'CloudFrontCreateAccessLogBucket', u'CloudFrontAccessLogBucket'], u'Label': {u'default': u'S3 Location'}}, {u'Parameters': [u'RequestThreshold', u'WAFBlockPeriod', u'WAFQuarantinePeriod'], u'Label': {u'default': u'Rate-Based Blacklisting Parameters'}}]"
Resources.AWS::S3::Bucket.Properties.NotificationConfiguration.LambdaConfigurations,"[{u'Filter': {u'S3Key': {u'Rules': [{u'Name': u'suffix', u'Value': u'gz'}]}}, u'Function': {u'Fn::GetAtt': [u'LambdaWAFBlacklistingFunction', u'Arn']}, u'Event': u's3:ObjectCreated:*'}]"
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'S3Access', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': u's3:*', u'Resource': u'*', u'Effect': u'Allow'}]}}, {u'PolicyName': u'WAFAccess', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': u'waf:*', u'Resource': u'*', u'Effect': u'Allow'}]}}, {u'PolicyName': u'LogsAccess', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': u'logs:*', u'Resource': u'*', u'Effect': u'Allow'}]}}, {u'PolicyName': u'LambdAccess', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': u'lambda:*', u'Resource': u'*', u'Effect': u'Allow'}]}}, {u'PolicyName': u'CloudFormationAccess', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': u'cloudformation:DescribeStacks', u'Resource': u'*', u'Effect': u'Allow'}]}}, {u'PolicyName': u'CloudWatchAccess', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': u'cloudwatch:PutMetricData', u'Resource': u'*', u'Effect': u'Allow'}]}}]"
Parameters.RequestThreshold.Description,Enter the maximum acceptable request per second per IP address. Default: 400 requests per minute
Outputs.WAFQuarantinePeriod.Value,{u'Ref': u'WAFQuarantinePeriod'}
Resources.AWS::Lambda::Function.Properties.Role,"{u'Fn::GetAtt': [u'LambdaRole', u'Arn']}"
Resources.AWS::WAF::WebACL.Properties.Rules,"[{u'Action': {u'Type': u'BLOCK'}, u'Priority': 1, u'RuleId': {u'Ref': u'WAFManualBlockRule'}}, {u'Action': {u'Type': u'BLOCK'}, u'Priority': 2, u'RuleId': {u'Ref': u'WAFAutoBlockRule'}}, {u'Action': {u'Type': u'COUNT'}, u'Priority': 3, u'RuleId': {u'Ref': u'WAFAutoCountRule'}}]"
Parameters.CloudFrontAccessLogBucket.Description,"Enter the name of the S3 bucket where you will store the CloudFront access logs (e.g., http://bucket.s3-aws-region.amazonaws.com)"
Resources.AWS::WAF::WebACL.DependsOn,"[u'WAFManualBlockRule', u'WAFAutoBlockRule', u'WAFAutoCountRule']"
Resources.AWS::S3::Bucket.Properties.BucketName,{u'Ref': u'CloudFrontAccessLogBucket'}
