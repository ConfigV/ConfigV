Resources.AWS::Lambda::Function.Properties.Description,generic handler
Resources.AWS::Lambda::Permission.Properties.FunctionName,"{u'Fn::GetAtt': [u'Lambda', u'Arn']}"
Parameters.S3Key.Default,lambda.zip
Resources.AWS::Lambda::Function.Properties.Runtime,nodejs6.10
Resources.AWS::Lambda::Permission.Properties.Principal,apigateway.amazonaws.com
Resources.AWS::Lambda::Permission.Properties.Action,lambda:invokeFunction
Resources.AWS::DynamoDB::Table.Type,AWS::DynamoDB::Table
Resources.AWS::Lambda::Function.Properties.Timeout,3
Resources.AWS::DynamoDB::Table.Properties.KeySchema,"[{u'KeyType': u'HASH', u'AttributeName': u'uid'}]"
Resources.AWS::IAM::Role.Properties.Path,/
Resources.AWS::Lambda::Permission.Type,AWS::Lambda::Permission
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Parameters.S3Key.Description,The location and name of your source code .zip file.
Resources.AWS::Lambda::Function.Properties.Handler,lambda.handler
Resources.AWS::Lambda::Function.Properties.Code.S3Bucket,{u'Ref': u'S3Bucket'}
Resources.AWS::DynamoDB::Table.Properties.GlobalSecondaryIndexes,"[{u'KeySchema': [{u'KeyType': u'HASH', u'AttributeName': u'category'}, {u'KeyType': u'RANGE', u'AttributeName': u'tid'}], u'IndexName': u'category-index', u'Projection': {u'ProjectionType': u'ALL'}, u'ProvisionedThroughput': {u'WriteCapacityUnits': 1, u'ReadCapacityUnits': 1}}]"
Parameters.ApiId.Description,API Gateway App Id. E.g. 1yc6td9zjj
Parameters.ApiId.Default,
Resources.AWS::DynamoDB::Table.Properties.AttributeDefinitions,"[{u'AttributeName': u'uid', u'AttributeType': u'S'}]"
Resources.AWS::Lambda::Function.Properties.MemorySize,128
Resources.AWS::DynamoDB::Table.Properties.TableName,todo-user
Parameters.S3Bucket.Type,String
Resources.AWS::Lambda::Function.Type,AWS::Lambda::Function
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': u'lambda.amazonaws.com'}}]"
Resources.AWS::Lambda::Permission.Condition,ApiGatewayDeployed
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.WriteCapacityUnits,1
Outputs.LambdaArn.Value,"{u'Fn::GetAtt': [u'Lambda', u'Arn']}"
Resources.AWS::Lambda::Permission.Properties.SourceArn,"{u'Fn::Join': [u'', [u'arn:aws:execute-api:', {u'Ref': u'AWS::Region'}, u':', {u'Ref': u'AWS::AccountId'}, u':', {u'Ref': u'ApiId'}, u'/*']]}"
Resources.AWS::Lambda::Function.Properties.Code.S3Key,{u'Ref': u'S3Key'}
Parameters.S3Key.Type,String
Resources.AWS::Lambda::Function.Properties.Role,"{u'Fn::GetAtt': [u'LambdaRole', u'Arn']}"
Parameters.ApiId.Type,String
Parameters.S3Bucket.Description,The name of the S3 bucket that contains the source code of your Lambda function.
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'logs', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u'logs:*'], u'Resource': u'arn:aws:logs:*:*:*', u'Effect': u'Allow'}]}}, {u'PolicyName': u'dynamodb', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u'dynamodb:Scan', u'dynamodb:PutItem', u'dynamodb:GetItem', u'dynamodb:DeleteItem', u'dynamodb:Query', u'dynamodb:UpdateItem'], u'Resource': [{u'Fn::Join': [u'', [u'arn:aws:dynamodb:', {u'Ref': u'AWS::Region'}, u':', {u'Ref': u'AWS::AccountId'}, u':table/todo-user*']]}, {u'Fn::Join': [u'', [u'arn:aws:dynamodb:', {u'Ref': u'AWS::Region'}, u':', {u'Ref': u'AWS::AccountId'}, u':table/todo-task*']]}], u'Effect': u'Allow', u'Sid': u'1'}]}}]"
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.ReadCapacityUnits,1
