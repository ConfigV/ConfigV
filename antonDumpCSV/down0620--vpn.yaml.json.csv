Parameters.DomainName.Description,The domain name of the Route53 public hosted zone that will contain the DNS record.
Outputs.IPAddress.Value,EIP
Resources.AWS::Lambda::Function.Properties.Description,Looks up the OpenVPN Marketplace AMI based on the region and the desired number of connected devices.
Resources.AWS::EC2::NetworkAclEntry.Properties.NetworkAclId,{u'Fn::ImportValue': {u'Fn::Sub': u'${VPCStackName}:public-nacl'}}
Parameters.VPCStackName.Description,The name of the VPC stack where the VPN will be deployed.
Resources.AWS::Lambda::Function.Properties.Timeout,5
Resources.AWS::EC2::Instance.Properties.SecurityGroupIds,[u'SecurityGroup']
Resources.Custom::ExecuteLambda.Properties.Region,AWS::Region
Resources.AWS::EC2::SecurityGroup.Properties.GroupName,AWS::StackName
Resources.AWS::Route53::RecordSet.Type,AWS::Route53::RecordSet
Resources.AWS::EC2::NetworkAclEntry.DependsOn,Instance
Parameters.Version.Default,2.1.9
Parameters.SSHCIDR.Type,String
Resources.AWS::Lambda::Function.Properties.Handler,index.handler
Resources.Custom::ExecuteLambda.Properties.NumberOfDevices,NumberOfDevices
Resources.AWS::EC2::Instance.Properties.SubnetId,{u'Fn::ImportValue': {u'Fn::Sub': u'${VPCStackName}:public-subnet-1'}}
Resources.AWS::Lambda::Function.Properties.FunctionName,get-openvpc-marketplace-ami-${AWS::StackName}
Resources.AWS::Lambda::Function.DependsOn,LambdaRole
Parameters.SSHCIDR.Description,The IPv4 CIDR allowed to SSH into the VPN instance. NACL rule will be added.
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'22', u'FromPort': u'22', u'IpProtocol': u'tcp', u'CidrIp': u'SSHCIDR'}, {u'ToPort': u'443', u'FromPort': u'443', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0'}, {u'ToPort': u'943', u'FromPort': u'943', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0'}, {u'ToPort': u'1194', u'FromPort': u'1194', u'IpProtocol': u'udp', u'CidrIp': u'0.0.0.0/0'}]"
Parameters.HostName.Type,String
Resources.Custom::ExecuteLambda.Properties.Version,Version
Metadata.AWS::CloudFormation::Interface.ParameterGroups,"[{u'Parameters': [u'VPCStackName'], u'Label': {u'default': u'VPC'}}, {u'Parameters': [u'InstanceType', u'KeyName'], u'Label': {u'default': u'Instance'}}, {u'Parameters': [u'Version', u'NumberOfDevices'], u'Label': {u'default': u'OpenVPN'}}, {u'Parameters': [u'HostName', u'DomainName'], u'Label': {u'default': u'DNS'}}, {u'Parameters': [u'SSHCIDR'], u'Label': {u'default': u'Public SSH Ingress'}}]"
Resources.AWS::Route53::RecordSet.Properties.ResourceRecords,[{u'Ref': u'EIP'}]
Resources.AWS::EC2::NetworkAclEntry.Type,AWS::EC2::NetworkAclEntry
Outputs.DomainName.Description,The domain name of the OpenVPN instsance.
Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,17
Resources.AWS::EC2::Instance.Properties.KeyName,KeyName
Resources.AWS::Route53::RecordSet.Properties.TTL,300
Parameters.Version.AllowedValues,[u'2.1.9']
Metadata.AWS::CloudFormation::Interface.ParameterLabels.HostName.default,Host Name
Resources.Custom::ExecuteLambda.Properties.ServiceToken,LambdaFunction.Arn
Parameters.KeyName.Type,AWS::EC2::KeyPair::KeyName
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,520
Resources.AWS::Route53::RecordSet.DependsOn,Instance
Resources.AWS::EC2::EIPAssociation.Type,AWS::EC2::EIPAssociation
Parameters.HostName.Default,vpn.corp.us-east-1
Parameters.NumberOfDevices.Default,2 | Free
Resources.AWS::EC2::Instance.Type,AWS::EC2::Instance
Resources.AWS::Lambda::Function.Type,AWS::Lambda::Function
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Metadata.AWS::CloudFormation::Interface.ParameterLabels.NumberOfDevices.default,Number Of Users
Resources.AWS::EC2::EIPAssociation.Properties.InstanceId,{u'Ref': u'Instance'}
Resources.AWS::EC2::EIP.Properties.Domain,vpc
Parameters.DomainName.Type,String
Outputs.AMI.Description,The OpenVPN AMI used.
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'AllowLogsWrite', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u'logs:CreateLogGroup', u'logs:CreateLogStream', u'logs:PutLogEvents'], u'Resource': u'arn:aws:logs:*:*:*', u'Effect': u'Allow'}]}}]"
Resources.AWS::EC2::EIPAssociation.Properties.EIP,{u'Ref': u'EIP'}
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.To,1194
Resources.Custom::ExecuteLambda.Type,Custom::ExecuteLambda
Outputs.DomainName.Value,${HostName}.${DomainName}
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,AWS::StackName
Resources.AWS::EC2::EIP.Type,AWS::EC2::EIP
Parameters.NumberOfDevices.Type,String
Metadata.AWS::CloudFormation::Interface.ParameterLabels.VPCStackName.default,VPC Stack
Resources.Custom::ExecuteLambda.DependsOn,LambdaFunction
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.From,1194
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'lambda.amazonaws.com']}}]"
Parameters.KeyName.Description,The key that will be used to SSH into the OpenVPN Access Server instance.
Outputs.AdminURL.Value,https://${HostName}.${DomainName}:943/admin
Resources.AWS::EC2::SecurityGroup.Properties.VpcId,{u'Fn::ImportValue': {u'Fn::Sub': u'${VPCStackName}:vpc'}}
Resources.AWS::Route53::RecordSet.Properties.Name,${HostName}.${DomainName}.
Resources.AWS::EC2::SecurityGroup.Type,AWS::EC2::SecurityGroup
Parameters.Version.Description,The OpenVPN version.
Outputs.IPAddress.Description,The IP address of the OpenVPN instance.
Parameters.VPCStackName.Type,String
Resources.AWS::Route53::RecordSet.Properties.HostedZoneName,${DomainName}.
Resources.AWS::Route53::RecordSet.Properties.Type,A
Parameters.HostName.Description,The DNS host name of the VPN server.
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,SSHCIDR
Resources.AWS::IAM::Role.Properties.Path,/
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Resources.AWS::Lambda::Function.Properties.Code.ZipFile,"import cfnresponse
def handler(event, context):
  # handle delete event
  if event['RequestType'] is 'Delete':
    cfnresponse.send(event, context, cfnresponse.SUCCESS)
  # Set the 'event' properties to local variables.
  Region = event['ResourceProperties']['Region']
  Version = event['ResourceProperties']['Version']
  NumberOfDevices = event['ResourceProperties']['NumberOfDevices']
  NumberOfDevices = NumberOfDevices.split("" | "")[0]
  # Create the AMI map
  amiMap = {}
  amiMap[""us-east-1""] = {}
  amiMap[""us-east-1""][""2.1.9""] = {}
  amiMap[""us-east-1""][""2.1.9""][""2""] = ""ami-f6eed4e0""
  amiMap[""us-east-1""][""2.1.9""][""5""] = ""ami-6beed47d""
  amiMap[""us-east-1""][""2.1.9""][""10""] = ""ami-d4e9d3c2""
  amiMap[""us-east-1""][""2.1.9""][""25""] = ""ami-f1eed4e7""
  amiMap[""us-east-1""][""2.1.9""][""50""] = ""ami-bcebd1aa""
  amiMap[""us-east-1""][""2.1.9""][""100""] = ""ami-29eed43f""
  amiMap[""us-east-1""][""2.1.9""][""250""] = ""ami-b1ebd1a7""
  amiMap[""us-east-1""][""2.1.9""][""500""] = ""ami-2deed43b""
  # Create the response data map
  responseData = {}
  responseData['value'] = amiMap[Region][Version][NumberOfDevices]
  # Send the response
  cfnresponse.send(
          event,
          context,
          cfnresponse.SUCCESS,
          responseData,
          ""CustomResourcePhysicalID"")
"
Parameters.NumberOfDevices.AllowedValues,"[u'2 | Free', u'5 | $0.07/hr or from $490.00/yr', u'10 | $0.10/hr or from $700.00/yr', u'25 | $0.20/hr or from $1,400.00/yr', u'50 | $0.30/hr or from $2,100.00/yr', u'100 | $0.40/hr or from $2,800.00/yr', u'250 | $0.80/hr or from $5,600.00/yr', u'500 | $1.50/hr or from $10,500.00/yr']"
Parameters.SSHCIDR.Default,0.0.0.0/0
Parameters.Version.Type,String
Metadata.AWS::CloudFormation::Interface.ParameterLabels.DomainName.default,Domain Name
Outputs.AdminURL.Description,The URL to the OpenVPN Admin UI.
Resources.AWS::Lambda::Function.Properties.Runtime,python2.7
Resources.AWS::Lambda::Function.Properties.Role,LambdaRole.Arn
Metadata.AWS::CloudFormation::Interface.ParameterLabels.SSHCIDR.default,IPv4 CIDR
Parameters.DomainName.Default,mycompany.com
Outputs.AMI.Value,${OpenVPNAMI.value}
Resources.AWS::EC2::Instance.Properties.ImageId,${OpenVPNAMI.value}
Resources.AWS::EC2::SecurityGroup.Properties.Tags,"[{u'Value': u'AWS::StackName', u'Key': u'Name'}]"
Parameters.NumberOfDevices.Description,Does not include instance charges. You must accept the license agreement in the AWS Marketplace.
Resources.AWS::EC2::Instance.Properties.Tags,"[{u'Value': u'AWS::StackName', u'Key': u'Name'}]"
