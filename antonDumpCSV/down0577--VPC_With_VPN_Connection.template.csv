Resources.AWS::EC2::Route.Type,AWS::EC2::Route
Resources.AWS::EC2::NetworkAclEntry.Properties.NetworkAclId,{u'Ref': u'PrivateNetworkAcl'}
Outputs.VPCId.Value,{u'Ref': u'VPC'}
Parameters.VPCCIDR.Type,String
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,false
Resources.AWS::EC2::VPNGateway.Properties.Type,ipsec.1
Resources.AWS::EC2::VPNGateway.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}]"
Parameters.VPNAddress.MaxLength,15
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.SubnetId,{u'Ref': u'PrivateSubnet'}
Resources.AWS::EC2::NetworkAcl.Type,AWS::EC2::NetworkAcl
Resources.AWS::EC2::CustomerGateway.Type,AWS::EC2::CustomerGateway
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Resources.AWS::EC2::CustomerGateway.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': {u'Fn::Join': [u'', [u'Gateway to ', {u'Ref': u'VPNAddress'}]]}, u'Key': u'VPN'}]"
Resources.AWS::EC2::SubnetNetworkAclAssociation.Type,AWS::EC2::SubnetNetworkAclAssociation
Resources.AWS::EC2::NetworkAclEntry.Type,AWS::EC2::NetworkAclEntry
Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,6
Resources.AWS::EC2::Subnet.Properties.CidrBlock,{u'Ref': u'SubnetCIDR'}
Parameters.VPCCIDR.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Outputs.PrivateSubnet.Description,SubnetId of the VPN connected subnet
Outputs.VPCId.Description,VPCId of the newly created VPC
Resources.AWS::EC2::VPNConnection.Properties.Type,ipsec.1
Resources.AWS::EC2::VPNConnection.Properties.VpnGatewayId,{u'Ref': u'VPNGateway'}
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.NetworkAclId,{u'Ref': u'PrivateNetworkAcl'}
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,100
Parameters.SubnetCIDR.MaxLength,18
Parameters.VPNAddress.ConstraintDescription,must be a valid IP address of the form x.x.x.x
Resources.AWS::EC2::VPNConnectionRoute.Type,AWS::EC2::VPNConnectionRoute
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'VPN Connected Subnet', u'Key': u'Network'}]"
Resources.AWS::EC2::VPNConnectionRoute.Properties.DestinationCidrBlock,{u'Ref': u'OnPremiseCIDR'}
Parameters.VPCCIDR.MinLength,9
Parameters.VPNAddress.MinLength,7
Resources.AWS::EC2::VPNConnection.Properties.CustomerGatewayId,{u'Ref': u'CustomerGateway'}
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Resources.AWS::EC2::Route.Properties.RouteTableId,{u'Ref': u'PrivateRouteTable'}
Parameters.OnPremiseCIDR.Type,String
Resources.AWS::EC2::RouteTable.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::CustomerGateway.Properties.BgpAsn,65000
Outputs.PrivateSubnet.Value,{u'Ref': u'PrivateSubnet'}
Resources.AWS::EC2::VPC.Properties.CidrBlock,{u'Ref': u'VPCCIDR'}
Parameters.OnPremiseCIDR.Description,IP Address range for your existing infrastructure
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.To,65535
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpcId,{u'Ref': u'VPC'}
Parameters.OnPremiseCIDR.MinLength,9
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Parameters.OnPremiseCIDR.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Parameters.VPNAddress.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})"
Parameters.SubnetCIDR.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Resources.AWS::EC2::NetworkAcl.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.From,0
Resources.AWS::EC2::NetworkAcl.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'Private', u'Key': u'Network'}]"
Resources.AWS::EC2::CustomerGateway.Properties.IpAddress,{u'Ref': u'VPNAddress'}
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,{u'Ref': u'PrivateRouteTable'}
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'VPN Connected VPC', u'Key': u'Network'}]"
Parameters.VPCCIDR.Default,10.1.0.0/16
Parameters.OnPremiseCIDR.Default,10.0.0.0/16
Resources.AWS::EC2::VPNConnection.Type,AWS::EC2::VPNConnection
Parameters.VPCCIDR.MaxLength,18
Parameters.SubnetCIDR.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpnGatewayId,{u'Ref': u'VPNGateway'}
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Parameters.SubnetCIDR.MinLength,9
Resources.AWS::EC2::VPNConnectionRoute.Properties.VpnConnectionId,{u'Ref': u'VPNConnection'}
Parameters.OnPremiseCIDR.MaxLength,18
Parameters.SubnetCIDR.Description,IP Address range for the VPN connected Subnet
Resources.AWS::EC2::VPNGateway.Type,AWS::EC2::VPNGateway
Parameters.SubnetCIDR.Default,10.1.0.0/24
Resources.AWS::EC2::VPCGatewayAttachment.Type,AWS::EC2::VPCGatewayAttachment
Resources.AWS::EC2::Route.Properties.GatewayId,{u'Ref': u'VPNGateway'}
Resources.AWS::EC2::VPC.Type,AWS::EC2::VPC
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'VPN Connected Subnet', u'Key': u'Network'}]"
Parameters.OnPremiseCIDR.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Resources.AWS::EC2::SubnetRouteTableAssociation.Type,AWS::EC2::SubnetRouteTableAssociation
Parameters.VPCCIDR.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,{u'Ref': u'PrivateSubnet'}
Resources.AWS::EC2::RouteTable.Type,AWS::EC2::RouteTable
Parameters.VPNAddress.Description,IP Address of your VPN device
Parameters.VPNAddress.Type,String
Resources.AWS::EC2::Subnet.Type,AWS::EC2::Subnet
Parameters.VPCCIDR.Description,IP Address range for the VPN connected VPC
Resources.AWS::EC2::VPNConnection.Properties.StaticRoutesOnly,true
Parameters.SubnetCIDR.Type,String
Resources.AWS::EC2::CustomerGateway.Properties.Type,ipsec.1
