Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,-1
Outputs.VPC.Export.Name,"[u'${AppName}VPC', {u'AppName': u'AppName'}]"
Resources.AWS::EC2::NatGateway.Type,AWS::EC2::NatGateway
Outputs.PublicSubnet1a.Export.Name,"[u'${AppName}PublicSubnet1a', {u'AppName': u'AppName'}]"
Resources.AWS::EC2::Route.Type,AWS::EC2::Route
Resources.AWS::EC2::SubnetRouteTableAssociation.Type,AWS::EC2::SubnetRouteTableAssociation
Outputs.PublicSubnet1c.Export.Name,"[u'${AppName}PublicSubnet1c', {u'AppName': u'AppName'}]"
Resources.AWS::EC2::DHCPOptions.Properties.Tags,"[{u'Value': u'AWS::StackName', u'Key': u'Name'}]"
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,VPC
Resources.AWS::EC2::FlowLog.Type,AWS::EC2::FlowLog
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Resources.AWS::EC2::VPCDHCPOptionsAssociation.Properties.DhcpOptionsId,DHCPOption
Resources.AWS::EC2::Subnet.Properties.CidrBlock,"[u'NetworkSettings', u'CidrBlock', u'PrivateSubnet1a']"
Resources.AWS::EC2::Route.Properties.NatGatewayId,NAT
Resources.AWS::EC2::NetworkAclEntry.Properties.NetworkAclId,NACLPrivate
Resources.AWS::EC2::NatGateway.Properties.SubnetId,PublicSubnet1a
Resources.AWS::EC2::Route.Properties.RouteTableId,RouteTablePublic
Resources.AWS::EC2::FlowLog.Properties.DeliverLogsPermissionArn,"{u'Fn::ImportValue': [u'${AppName}FlowLogsRoleArn', {u'AppName': u'AppName'}]}"
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,true
Resources.AWS::EC2::EIP.Type,AWS::EC2::EIP
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Resources.AWS::EC2::VPCGatewayAttachment.Properties.InternetGatewayId,IGW
Resources.AWS::EC2::NatGateway.Properties.AllocationId,EIP.AllocationId
Resources.AWS::EC2::FlowLog.Properties.ResourceType,VPC
Mappings.NetworkSettings.CidrBlock.VPC,172.31.0.0/16
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.NetworkAclId,NACLPrivate
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,ap-northeast-1a
Resources.AWS::EC2::DHCPOptions.Properties.DomainName,ap-northeast-1.compute.internal
Resources.AWS::EC2::DHCPOptions.Properties.DomainNameServers,[u'AmazonProvidedDNS']
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,100
Resources.AWS::EC2::NetworkAcl.Properties.VpcId,VPC
Outputs.PrivateSubnet1a.Value,PrivateSubnet1a
Resources.AWS::EC2::VPCDHCPOptionsAssociation.Properties.VpcId,VPC
Resources.AWS::EC2::NetworkAcl.Properties.Tags,"[{u'Value': u'AWS::StackName', u'Key': u'Name'}]"
Resources.AWS::EC2::VPCGatewayAttachment.Type,AWS::EC2::VPCGatewayAttachment
Resources.AWS::EC2::InternetGateway.Type,AWS::EC2::InternetGateway
Outputs.PrivateSubnet1a.Export.Name,"[u'${AppName}PrivateSubnet1a', {u'AppName': u'AppName'}]"
Resources.AWS::EC2::Route.Properties.GatewayId,IGW
Resources.AWS::EC2::VPC.Properties.CidrBlock,"[u'NetworkSettings', u'CidrBlock', u'VPC']"
Resources.AWS::EC2::FlowLog.Properties.LogGroupName,VPCFlowLogsGroup-${AWS::StackName}
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': u'AWS::StackName', u'Key': u'Name'}]"
Mappings.NetworkSettings.CidrBlock.PublicSubnet1a,172.31.0.0/20
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': u'AWS::StackName', u'Key': u'Name'}]"
Resources.AWS::EC2::VPC.Properties.InstanceTenancy,default
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,RouteTablePublic
Mappings.NetworkSettings.CidrBlock.PublicSubnet1c,172.31.64.0/20
Resources.AWS::EC2::InternetGateway.Properties.Tags,"[{u'Value': u'AWS::StackName', u'Key': u'Name'}]"
Outputs.PublicSubnet1a.Value,PublicSubnet1a
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': u'AWS::StackName', u'Key': u'Name'}]"
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,PublicSubnet1c
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Resources.AWS::EC2::Subnet.Properties.MapPublicIpOnLaunch,False
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.SubnetId,PrivateSubnet1c
Resources.AWS::EC2::FlowLog.Properties.ResourceId,VPC
Resources.AWS::EC2::Route.DependsOn,IGW
Outputs.PublicSubnet1c.Value,PublicSubnet1c
Resources.AWS::EC2::EIP.Properties.Domain,vpc
Resources.AWS::EC2::NetworkAcl.Type,AWS::EC2::NetworkAcl
Resources.AWS::EC2::NetworkAclEntry.Type,AWS::EC2::NetworkAclEntry
Resources.AWS::EC2::RouteTable.Properties.VpcId,VPC
Parameters.AppName.Type,String
Resources.AWS::EC2::FlowLog.Properties.TrafficType,ALL
Resources.AWS::EC2::NatGateway.DependsOn,IGWAttachment
Outputs.PrivateSubnet1c.Value,PrivateSubnet1c
Mappings.NetworkSettings.CidrBlock.PrivateSubnet1c,172.31.192.0/20
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Resources.AWS::EC2::RouteTable.Type,AWS::EC2::RouteTable
Mappings.NetworkSettings.CidrBlock.PrivateSubnet1a,172.31.128.0/20
Resources.AWS::EC2::VPCDHCPOptionsAssociation.Type,AWS::EC2::VPCDHCPOptionsAssociation
Resources.AWS::EC2::VPC.Type,AWS::EC2::VPC
Resources.AWS::EC2::SubnetNetworkAclAssociation.Type,AWS::EC2::SubnetNetworkAclAssociation
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpcId,VPC
Resources.AWS::EC2::DHCPOptions.Type,AWS::EC2::DHCPOptions
Resources.AWS::EC2::Subnet.Type,AWS::EC2::Subnet
Outputs.VPC.Value,VPC
Outputs.PrivateSubnet1c.Export.Name,"[u'${AppName}PrivateSubnet1c', {u'AppName': u'AppName'}]"
