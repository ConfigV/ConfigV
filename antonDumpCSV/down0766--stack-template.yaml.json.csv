Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpcId,VPC
Resources.AWS::EC2::NatGateway.Type,AWS::EC2::NatGateway
Resources.AWS::EC2::Route.Type,AWS::EC2::Route
Resources.AWS::EC2::SubnetRouteTableAssociation.Type,AWS::EC2::SubnetRouteTableAssociation
Resources.AWS::ElasticLoadBalancingV2::TargetGroup.Properties.HealthCheckProtocol,HTTP
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,VPC
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Resources.AWS::EC2::Subnet.Properties.CidrBlock,10.0.102.0/24
Resources.AWS::EC2::Route.Properties.NatGatewayId,NAT
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,"[u'-', [{u'Ref': u'Id'}, u'public-elb-backend']]"
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Listeners,"[{u'InstancePort': u'80', u'LoadBalancerPort': u'443', u'Protocol': u'HTTP'}]"
Resources.AWS::ElasticLoadBalancingV2::TargetGroup.Properties.HealthCheckTimeoutSeconds,5
Resources.AWS::EC2::NatGateway.Properties.SubnetId,PublicSubnet1
Outputs.GlueSG.Value,GlueSG
Parameters.Id.Description,Id of the infrastructure
Parameters.Id.Type,String
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Target,"{u'Fn::Join': [u'', [u'HTTP:', u'80', u'/']]}"
Resources.AWS::EC2::EIP.Type,AWS::EC2::EIP
Resources.AWS::ElasticLoadBalancingV2::TargetGroup.Properties.HealthyThresholdCount,3
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Timeout,5
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Interval,30
Resources.AWS::EC2::NatGateway.Properties.AllocationId,EIP.AllocationId
Resources.AWS::EC2::InternetGateway.Properties.Tags,"[{u'Value': [u'-', [{u'Ref': u'Id'}, u'igw']], u'Key': u'Name'}]"
Outputs.PublicRouteTable.Value,PublicRouteTable
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,AZ1
Resources.AWS::ElasticLoadBalancingV2::TargetGroup.Properties.HealthCheckIntervalSeconds,30
Outputs.PrivateRouteTable.Value,PrivateRouteTable
Resources.AWS::EC2::VPCGatewayAttachment.Properties.InternetGatewayId,InternetGateway
Parameters.AZ1.Type,String
Parameters.AZ1.Description,Name of the first AZ
Resources.AWS::EC2::EIP.Properties.Domain,vpc
Resources.AWS::ElasticLoadBalancingV2::TargetGroup.Properties.Protocol,HTTP
Resources.AWS::ElasticLoadBalancingV2::TargetGroup.Properties.UnhealthyThresholdCount,5
Resources.AWS::EC2::VPCGatewayAttachment.Type,AWS::EC2::VPCGatewayAttachment
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.SecurityGroups,[u'PublicELBSG']
Resources.AWS::EC2::Route.Properties.GatewayId,InternetGateway
Resources.AWS::EC2::VPC.Properties.CidrBlock,10.0.0.0/16
Outputs.PublicELB.Value,PublicELB
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': [u'-', [{u'Ref': u'Id'}, u'public']], u'Key': u'Name'}]"
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Type,AWS::ElasticLoadBalancing::LoadBalancer
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': [u'-', [{u'Ref': u'Id'}, u'public-2']], u'Key': u'Name'}]"
Resources.AWS::EC2::VPC.Properties.InstanceTenancy,default
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,PrivateRouteTable
Parameters.AZ1.AllowedPattern,[a-z0-9\-]*
Resources.AWS::ElasticLoadBalancingV2::TargetGroup.Properties.VpcId,VPC
Outputs.PrivateELBDNSName.Value,PrivateELB.DNSName
Outputs.PublicSubnet1.Value,PublicSubnet1
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': [u'-', [{u'Ref': u'Id'}, u'vpc']], u'Key': u'Name'}]"
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,PrivateSubnet1
Resources.AWS::EC2::RouteTable.Type,AWS::EC2::RouteTable
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'SourceSecurityGroupId': u'PublicELBSG', u'FromPort': u'80', u'ToPort': u'80', u'IpProtocol': u'tcp'}]"
Resources.AWS::ElasticLoadBalancingV2::TargetGroup.Properties.HealthCheckPort,80
Outputs.PublicELBDNSName.Value,PublicELB.DNSName
Resources.AWS::EC2::Route.Properties.RouteTableId,PrivateRouteTable
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Subnets,[u'PublicSubnet1']
Resources.AWS::EC2::Route.DependsOn,InternetGateway
Outputs.PublicALBBackendSG.Value,PublicALBBackendSG
Outputs.PrivateSubnet1.Value,PrivateSubnet1
Resources.AWS::EC2::InternetGateway.Type,AWS::EC2::InternetGateway
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Tags,"[{u'Value': [u'-', [{u'Ref': u'Id'}, u'public']], u'Key': u'Name'}]"
Parameters.Id.AllowedPattern,[a-zA-Z0-9\-]*
Outputs.TargetGroup.Value,TargetGroup
Resources.AWS::EC2::RouteTable.Properties.VpcId,VPC
Resources.AWS::EC2::SecurityGroup.Properties.VpcId,VPC
Outputs.PublicELBBackendSG.Value,PublicELBBackendSG
Resources.AWS::EC2::NatGateway.DependsOn,IgwAttach
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Resources.AWS::ElasticLoadBalancingV2::TargetGroup.Properties.Port,80
Resources.AWS::ElasticLoadBalancingV2::TargetGroup.Properties.Name,"[u'-', [{u'Ref': u'Id'}, u'target-group']]"
Outputs.PrivateELB.Value,PrivateELB
Resources.AWS::ElasticLoadBalancingV2::TargetGroup.Properties.HealthCheckPath,/
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.UnhealthyThreshold,5
Resources.AWS::EC2::VPC.Type,AWS::EC2::VPC
Resources.AWS::EC2::SecurityGroup.Type,AWS::EC2::SecurityGroup
Parameters.Id.Default,kube-aws-e2e-infra
Outputs.PrivateELBBackendSG.Value,PrivateELBBackendSG
Parameters.AZ1.Default,us-west-1a
Resources.AWS::EC2::Subnet.Type,AWS::EC2::Subnet
Outputs.VPC.Value,VPC
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.HealthyThreshold,3
Resources.AWS::ElasticLoadBalancingV2::TargetGroup.Type,AWS::ElasticLoadBalancingV2::TargetGroup
