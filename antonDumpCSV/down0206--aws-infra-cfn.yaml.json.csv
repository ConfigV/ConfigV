Parameters.FrameS3BucketNameParameter.MinLength,1
Resources.AWS::Kinesis::Stream.Properties.ShardCount,1
Parameters.DDBTableNameParameter.Default,EnrichedFrame
Resources.AWS::Lambda::Function.Properties.Description,Function processes frame images fetched from a Kinesis stream.
Resources.AWS::Lambda::Permission.Properties.FunctionName,FrameFetcherLambda.Arn
Resources.AWS::ApiGateway::ApiKey.Properties.Enabled,True
Resources.AWS::DynamoDB::Table.Type,AWS::DynamoDB::Table
Resources.AWS::Lambda::Function.Properties.Timeout,40
Parameters.SourceS3BucketParameter.Type,String
Parameters.SourceS3BucketParameter.Description,Enter the name of the S3 bucket containing source .zip files.
Resources.AWS::DynamoDB::Table.Properties.KeySchema,"[{u'KeyType': u'HASH', u'AttributeName': u'frame_id'}]"
Parameters.DDBTableNameParameter.Type,String
Resources.AWS::Lambda::Permission.Type,AWS::Lambda::Permission
Resources.AWS::ApiGateway::Stage.Properties.StageName,ApiGatewayStageNameParameter
Resources.AWS::Lambda::EventSourceMapping.Type,AWS::Lambda::EventSourceMapping
Resources.AWS::Lambda::Function.Properties.Handler,imageprocessor.handler
Resources.AWS::Lambda::EventSourceMapping.Properties.StartingPosition,TRIM_HORIZON
Parameters.DDBTableNameParameter.Description,Name of the DynamoDB table for persistence & querying of captured frames metadata.
Parameters.SourceS3BucketParameter.MinLength,1
Parameters.ImageProcessorLambdaFunctionName.Type,String
Resources.AWS::Lambda::Function.Properties.FunctionName,imageprocessor
Resources.AWS::ApiGateway::Method.Properties.RestApiId,VidAnalyzerRestApi
Resources.AWS::DynamoDB::Table.Properties.AttributeDefinitions,"[{u'AttributeName': u'frame_id', u'AttributeType': u'S'}, {u'AttributeName': u'processed_timestamp', u'AttributeType': u'N'}, {u'AttributeName': u'processed_year_month', u'AttributeType': u'S'}]"
Resources.AWS::IAM::Role.DependsOn,"[u'FrameS3Bucket', u'EnrichedFrameTable']"
Resources.AWS::Lambda::Function.Properties.MemorySize,128
Parameters.FrameFetcherSourceS3KeyParameter.MinLength,1
Parameters.FrameS3BucketNameParameter.Type,String
Parameters.ApiGatewayRestApiNameParameter.Default,RtRekogRestApi
Resources.AWS::Lambda::Function.DependsOn,"[u'FrameStream', u'ImageProcessorLambdaExecutionRole']"
Resources.AWS::ApiGateway::UsagePlanKey.Properties.UsagePlanId,DevUsagePlan
Resources.AWS::ApiGateway::RestApi.Properties.Name,ApiGatewayRestApiNameParameter
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Resources.AWS::ApiGateway::ApiKey.Properties.Name,DevApiKey
Resources.AWS::Lambda::Permission.Properties.SourceArn,"[u'', [u'arn:aws:execute-api:', u'AWS::Region', u':', u'AWS::AccountId', u':', u'VidAnalyzerRestApi', u'/*/*/', u'FrameFetcherLambdaFunctionName']]"
Parameters.FrameFetcherApiResourcePathPart.Type,String
Resources.AWS::ApiGateway::UsagePlan.Properties.Description,Development usage plan
Parameters.FrameFetcherSourceS3KeyParameter.Description,Enter the name of the S3 key of Frame Fetcher lambda function .zip file.
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.ReadCapacityUnits,10
Parameters.ImageProcessorLambdaFunctionName.Description,Name of the Lambda function that receives and processes frame images.
Resources.AWS::Kinesis::Stream.Properties.Name,KinesisStreamNameParameter
Resources.AWS::ApiGateway::Method.Properties.AuthorizationType,NONE
Resources.AWS::ApiGateway::ApiKey.Properties.StageKeys,"[{u'RestApiId': u'VidAnalyzerRestApi', u'StageName': u'ApiGatewayStageNameParameter'}]"
Parameters.FrameFetcherApiResourcePathPart.Default,enrichedframe
Resources.AWS::IAM::Role.Properties.ManagedPolicyArns,"[u'arn:aws:iam::aws:policy/AmazonKinesisReadOnlyAccess', u'arn:aws:iam::aws:policy/AmazonRekognitionReadOnlyAccess', u'arn:aws:iam::aws:policy/AmazonS3FullAccess', u'arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess', u'arn:aws:iam::aws:policy/AmazonSNSFullAccess', u'arn:aws:iam::aws:policy/CloudWatchLogsFullAccess']"
Resources.AWS::Lambda::EventSourceMapping.Properties.EventSourceArn,FrameStream.Arn
Resources.AWS::ApiGateway::Deployment.Properties.RestApiId,VidAnalyzerRestApi
Parameters.ApiGatewayRestApiNameParameter.Type,String
Resources.AWS::Lambda::Permission.Properties.Action,lambda:InvokeFunction
Resources.AWS::ApiGateway::Method.Type,AWS::ApiGateway::Method
Resources.AWS::Lambda::EventSourceMapping.Properties.FunctionName,ImageProcessorLambda.Arn
Parameters.ImageProcessorSourceS3KeyParameter.Description,Enter the name of the S3 key of Image Processor lambda function .zip file.
Resources.AWS::ApiGateway::Stage.Properties.Description,API development stage of video analyzer.
Resources.AWS::ApiGateway::UsagePlan.DeletionPolicy,Retain
Resources.AWS::ApiGateway::ApiKey.DependsOn,"[u'VidAnalyzerApiDeployment', u'DevStage']"
Resources.AWS::ApiGateway::Stage.Properties.DeploymentId,VidAnalyzerApiDeployment
Resources.AWS::ApiGateway::Resource.Properties.RestApiId,VidAnalyzerRestApi
Resources.AWS::DynamoDB::Table.Properties.GlobalSecondaryIndexes,"[{u'KeySchema': [{u'KeyType': u'HASH', u'AttributeName': u'processed_year_month'}, {u'KeyType': u'RANGE', u'AttributeName': u'processed_timestamp'}], u'IndexName': u'DDBGlobalSecondaryIndexNameParameter', u'Projection': {u'ProjectionType': u'ALL'}, u'ProvisionedThroughput': {u'WriteCapacityUnits': 10, u'ReadCapacityUnits': 10}}]"
Parameters.DDBGlobalSecondaryIndexNameParameter.Description,Name of the DDB Global Secondary Index for querying of captured frames by Web UI.
Resources.AWS::ApiGateway::UsagePlan.Properties.ApiStages,"[{u'ApiId': u'VidAnalyzerRestApi', u'Stage': u'DevStage'}]"
Resources.AWS::ApiGateway::Method.Properties.HttpMethod,GET
Resources.AWS::ApiGateway::ApiKey.Type,AWS::ApiGateway::ApiKey
Resources.AWS::Lambda::Function.Type,AWS::Lambda::Function
Parameters.ApiGatewayStageNameParameter.Type,String
Resources.AWS::ApiGateway::Resource.Properties.PathPart,FrameFetcherApiResourcePathPart
Resources.AWS::ApiGateway::Method.Properties.Integration.PassthroughBehavior,WHEN_NO_MATCH
Resources.AWS::ApiGateway::Deployment.Type,AWS::ApiGateway::Deployment
Resources.AWS::ApiGateway::Method.Properties.ResourceId,EnrichedFrameResource
Resources.AWS::ApiGateway::Method.Properties.MethodResponses,"[{u'ResponseModels': {u'application/json': u'Empty'}, u'StatusCode': 200, u'ResponseParameters': {u'method.response.header.Access-Control-Allow-Origin': True, u'method.response.header.Access-Control-Allow-Methods': True, u'method.response.header.Access-Control-Allow-Headers': True}}]"
Resources.AWS::ApiGateway::RestApi.Properties.Description,The amazon rekognition video analyzer public API.
Parameters.FrameFetcherLambdaFunctionName.Type,String
Resources.AWS::ApiGateway::Stage.Properties.RestApiId,VidAnalyzerRestApi
Resources.AWS::ApiGateway::Resource.Type,AWS::ApiGateway::Resource
Outputs.VidAnalyzerApiEndpoint.Value,VidAnalyzerApiDeployment
Parameters.ApiGatewayUsagePlanNameParameter.Default,development-plan
Parameters.KinesisStreamNameParameter.Default,FrameStream
Parameters.FrameS3BucketNameParameter.Description,Name of the S3 bucket for storage of captured frames.
Parameters.DDBGlobalSecondaryIndexNameParameter.Type,String
Resources.AWS::Lambda::Permission.Properties.Principal,apigateway.amazonaws.com
Resources.AWS::ApiGateway::Deployment.DependsOn,"[u'EnrichedFrameResourceGET', u'EnrichedFrameResourceOPTIONS']"
Resources.AWS::ApiGateway::Resource.Properties.ParentId,VidAnalyzerRestApi.RootResourceId
Resources.AWS::ApiGateway::UsagePlan.Type,AWS::ApiGateway::UsagePlan
Parameters.ImageProcessorLambdaFunctionName.Default,imageprocessor
Resources.AWS::ApiGateway::RestApi.DependsOn,FrameFetcherLambda
Parameters.KinesisStreamNameParameter.Description,Name of the Kinesis stream to receive frames from video capture client.
Resources.AWS::ApiGateway::Deployment.Properties.Description,Public API endpoint of video analyzer.
Resources.AWS::Lambda::Permission.DependsOn,[u'VidAnalyzerApiDeployment']
Resources.AWS::ApiGateway::UsagePlanKey.Properties.KeyType,API_KEY
Parameters.ApiGatewayStageNameParameter.Default,development
Resources.AWS::ApiGateway::Method.Properties.ApiKeyRequired,True
Resources.AWS::Lambda::Function.Properties.Code.S3Bucket,SourceS3BucketParameter
Resources.AWS::ApiGateway::Method.Properties.Integration.IntegrationHttpMethod,POST
Parameters.FrameFetcherSourceS3KeyParameter.Type,String
Resources.AWS::S3::Bucket.Type,AWS::S3::Bucket
Resources.AWS::DynamoDB::Table.Properties.TableName,DDBTableNameParameter
Parameters.ApiGatewayStageNameParameter.Description,Name of the API Gateway stage.
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'lambda.amazonaws.com']}}]"
Outputs.VidAnalyzerApiKey.Description,Key for invoking video analyzer API.
Resources.AWS::ApiGateway::UsagePlan.Properties.UsagePlanName,ApiGatewayUsagePlanNameParameter
Resources.AWS::ApiGateway::Method.Properties.Integration.IntegrationResponses,"[{u'StatusCode': 200, u'ResponseTemplates': {u'application/json': u''}, u'ResponseParameters': {u'method.response.header.Access-Control-Allow-Origin': u""'*'"", u'method.response.header.Access-Control-Allow-Methods': u""'GET,OPTIONS'"", u'method.response.header.Access-Control-Allow-Headers': u""'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'""}}]"
Resources.AWS::Lambda::EventSourceMapping.DependsOn,"[u'FrameStream', u'ImageProcessorLambda']"
Outputs.VidAnalyzerApiKey.Value,VidAnalyzerApiKey
Resources.AWS::ApiGateway::Method.Properties.Integration.RequestTemplates.application/json,"{""statusCode"": 200 }"
Resources.AWS::ApiGateway::RestApi.Type,AWS::ApiGateway::RestApi
Resources.AWS::ApiGateway::Stage.Type,AWS::ApiGateway::Stage
Parameters.FrameFetcherApiResourcePathPart.Description,Path part for the API Gateway resource to access FrameFetcher lambda function.
Resources.AWS::ApiGateway::UsagePlanKey.Type,AWS::ApiGateway::UsagePlanKey
Resources.AWS::ApiGateway::Method.Properties.Integration.Uri,arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FrameFetcherLambda.Arn}/invocations
Parameters.KinesisStreamNameParameter.Type,String
Resources.AWS::Lambda::Function.Properties.Code.S3Key,ImageProcessorSourceS3KeyParameter
Resources.AWS::ApiGateway::ApiKey.Properties.Description,Video Analyzer Dev API Key
Parameters.ImageProcessorSourceS3KeyParameter.Type,String
Parameters.DDBGlobalSecondaryIndexNameParameter.Default,processed_year_month-processed_timestamp-index
Resources.AWS::IAM::Role.Properties.Path,/
Resources.AWS::ApiGateway::UsagePlanKey.Properties.KeyId,VidAnalyzerApiKey
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Resources.AWS::Lambda::Function.Properties.Role,ImageProcessorLambdaExecutionRole.Arn
Parameters.ApiGatewayUsagePlanNameParameter.Description,Name of the API Gateway Usage Plan.
Outputs.VidAnalyzerApiEndpoint.Description,Endpoint for invoking video analyzer API.
Parameters.ApiGatewayUsagePlanNameParameter.Type,String
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.WriteCapacityUnits,10
Parameters.FrameFetcherLambdaFunctionName.Default,framefetcher
Resources.AWS::Lambda::Function.Properties.Runtime,python2.7
Resources.AWS::Kinesis::Stream.Type,AWS::Kinesis::Stream
Parameters.FrameFetcherLambdaFunctionName.Description,Name of the Lambda function that fetches frame metadata from DynamoDB.
Parameters.ApiGatewayRestApiNameParameter.Description,Name of the API Gateway Rest API.
Resources.AWS::ApiGateway::Method.Properties.Integration.Type,AWS_PROXY
Parameters.ImageProcessorSourceS3KeyParameter.MinLength,1
Resources.AWS::S3::Bucket.Properties.BucketName,FrameS3BucketNameParameter
