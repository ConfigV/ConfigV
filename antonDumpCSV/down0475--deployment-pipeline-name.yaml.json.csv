Resources.AWS::CodeBuild::Project.Properties.Environment.PrivilegedMode,True
Resources.AWS::CodePipeline::Pipeline.Properties.ArtifactStore.Type,S3
Parameters.GitHubRepo001.Type,String
Resources.AWS::CodeBuild::Project.Properties.Name,AWS::StackName
Parameters.ArtifactBucketName.Type,String
Parameters.Cluster.Type,String
Resources.AWS::ECR::Repository.Type,AWS::ECR::Repository
Resources.AWS::CodePipeline::Pipeline.Properties.Stages,"[{u'Name': u'Source', u'Actions': [{u'RunOrder': 1, u'ActionTypeId': {u'Category': u'Source', u'Owner': u'ThirdParty', u'Version': 1, u'Provider': u'GitHub'}, u'Configuration': {u'Owner': u'GitHubUser', u'Repo': u'GitHubRepo001', u'OAuthToken': u'GitHubToken', u'Branch': u'GitHubBranch'}, u'Name': u'App', u'OutputArtifacts': [{u'Name': u'App'}]}]}, {u'Name': u'Build', u'Actions': [{u'InputArtifacts': [{u'Name': u'App'}], u'RunOrder': 1, u'ActionTypeId': {u'Category': u'Build', u'Owner': u'AWS', u'Version': 1, u'Provider': u'CodeBuild'}, u'OutputArtifacts': [{u'Name': u'BuildOutput'}], u'Configuration': {u'ProjectName': u'CodeBuildProject'}, u'Name': u'Build'}]}, {u'Name': u'Deploy', u'Actions': [{u'ActionTypeId': {u'Category': u'Deploy', u'Owner': u'AWS', u'Version': 1, u'Provider': u'ECS'}, u'Configuration': {u'ClusterName': u'Cluster', u'ServiceName': u'Service', u'FileName': u'images-name.json'}, u'Name': u'Deploy', u'InputArtifacts': [{u'Name': u'BuildOutput'}], u'RunOrder': 1}]}]"
Resources.AWS::CodeBuild::Project.Type,AWS::CodeBuild::Project
Resources.AWS::CodePipeline::Pipeline.Properties.RoleArn,CodePipelineServiceRoleArn
Parameters.GitHubToken.NoEcho,True
Outputs.PipelineUrl.Value,https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
Parameters.CodeBuildServiceRole.Type,String
Resources.AWS::CodeBuild::Project.Properties.Environment.ComputeType,BUILD_GENERAL1_SMALL
Resources.AWS::CodeBuild::Project.Properties.Environment.Image,aws/codebuild/java:openjdk-8
Parameters.GitHubUser.Type,String
Resources.AWS::CodePipeline::Pipeline.Properties.ArtifactStore.Location,ArtifactBucketName
Resources.AWS::CodeBuild::Project.Properties.Environment.Type,LINUX_CONTAINER
Resources.AWS::CodeBuild::Project.Properties.Artifacts.Type,CODEPIPELINE
Resources.AWS::ECR::Repository.DeletionPolicy,Retain
Resources.AWS::CodeBuild::Project.Properties.Source.Type,CODEPIPELINE
Parameters.GitHubToken.Type,String
Parameters.Service.Type,String
Parameters.GitHubBranch.Type,String
Resources.AWS::CodeBuild::Project.Properties.ServiceRole,CodeBuildServiceRole
Parameters.CodePipelineServiceRoleArn.Type,String
Resources.AWS::CodeBuild::Project.Properties.Source.BuildSpec,"version: 0.2
phases:
  pre_build:
    commands:
      - $(aws ecr get-login --no-include-email)
      - TAG=""$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)""
      - IMAGE_URI=""${REPOSITORY_URI}:${TAG}""
  build:
    commands:
      - mvn package -Pdocker -Ddocker.repo=$REPOSITORY_URI -Ddocker.tag=$TAG
  post_build:
    commands:
      - docker tag $REPOSITORY_URI/name:$TAG $IMAGE_URI
      - docker push ""$IMAGE_URI""
      - printf '[{""name"":""name"",""imageUri"":""%s""}]' ""$IMAGE_URI"" > images-name.json
artifacts:
  files: images-name.json
"
Resources.AWS::CodeBuild::Project.Properties.Environment.EnvironmentVariables,"[{u'Name': u'AWS_DEFAULT_REGION', u'Value': u'AWS::Region'}, {u'Name': u'REPOSITORY_URI', u'Value': u'${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}'}]"
Resources.AWS::CodePipeline::Pipeline.Type,AWS::CodePipeline::Pipeline
