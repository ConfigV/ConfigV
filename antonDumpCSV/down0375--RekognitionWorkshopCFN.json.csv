Resources.AWS::IAM::InstanceProfile.Properties.Path,/
Outputs.PublicIP.Value,"{u'Fn::GetAtt': [u'TwitterEC2Instance', u'PublicIp']}"
Parameters.EmailAddress.Default,example@email.com
Resources.AWS::IAM::Policy.Properties.PolicyDocument.Version,2012-10-17
Resources.AWS::Lambda::Function.Properties.Description,Extract Twitter feed attributes and store them in DynamoDB
Resources.AWS::Lambda::Permission.Properties.FunctionName,"{u'Fn::GetAtt': [u'RekognitionLambdaFunction', u'Arn']}"
Parameters.SSHLocation.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::DynamoDB::Table.Type,AWS::DynamoDB::Table
Resources.AWS::Lambda::Function.Properties.Timeout,120
Resources.AWS::DynamoDB::Table.Properties.KeySchema,"[{u'KeyType': u'HASH', u'AttributeName': u'id_str'}]"
Resources.AWS::Lambda::Permission.Type,AWS::Lambda::Permission
Parameters.SSHLocation.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Parameters.EmailAddress.Type,String
Parameters.KeyName.ConstraintDescription,must be the name of an existing EC2 KeyPair.
Resources.AWS::Lambda::Function.Properties.Handler,lambda_function.lambda_handler
Resources.AWS::EC2::Instance.Properties.UserData,"{u'Fn::Base64': {u'Fn::Join': [u'', [u'#!/bin/bash -xe \n', u'exec > >(tee /var/log/user-data.log|logger -t user-data ) 2>&1 \n', u'echo BEGIN ', u""date '+%Y-%m-%d %H:%M:%S'\n"", u'# Install the files and packages from the metadata\n', u'/opt/aws/bin/cfn-init -v ', u'         --stack ', {u'Ref': u'AWS::StackName'}, u'         --resource TwitterEC2Instance ', u'         --region ', {u'Ref': u'AWS::Region'}, u'\n', u'sudo su root \n', u'mkdir -p /home/ec2-user/rekognition-workshop \n', u'chmod -R 777 /home/ec2-user/rekognition-workshop\n', u'yum -y update \n', u'pip install twitter \n', u'pip install textblob \n', u'pip install boto3 \n', u'# Signal the status from cfn-init\n', u'/opt/aws/bin/cfn-signal -e $? ', u'         --stack ', {u'Ref': u'AWS::StackName'}, u'         --resource TwitterEC2Instance ', u'         --region ', {u'Ref': u'AWS::Region'}, u'\n', u'echo END ', u""date '+%Y-%m-%d %H:%M:%S'\n""]]}}"
Resources.AWS::KinesisFirehose::DeliveryStream.Properties.S3DestinationConfiguration.CompressionFormat,UNCOMPRESSED
Parameters.TwitterConsumerSecret.Type,String
Resources.AWS::Lambda::Function.Properties.FunctionName,lambda_function
Resources.AWS::DynamoDB::Table.Properties.AttributeDefinitions,"[{u'AttributeName': u'id_str', u'AttributeType': u'S'}]"
Resources.AWS::Lambda::Function.Properties.MemorySize,1280
Resources.AWS::SNS::Subscription.Type,AWS::SNS::Subscription
Resources.AWS::IAM::Policy.Properties.PolicyDocument.Statement,"[{u'Action': [u'cloudwatch:*', u'cloudwatchlogs:*', u's3:*', u'firehose:*'], u'Resource': [u'*'], u'Effect': u'Allow'}]"
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Parameters.SSHLocation.Description,The IP address range that can be used to SSH to the EC2 instances
Resources.AWS::SNS::Subscription.Properties.Endpoint,{u'Ref': u'EmailAddress'}
Resources.AWS::KinesisFirehose::DeliveryStream.Properties.S3DestinationConfiguration.BufferingHints.SizeInMBs,5
Resources.AWS::Lambda::Permission.Properties.SourceArn,"{u'Fn::Join': [u':', [u'arn', u'aws', u's3', u'', u'', {u'Fn::Join': [u'-', [{u'Ref': u'AWS::StackName'}, u'rekognition-workshop', {u'Ref': u'AWS::AccountId'}, {u'Ref': u'AWS::Region'}]]}]]}"
Resources.AWS::Lambda::Function.Properties.Environment.Variables.SNSArn,{u'Ref': u'FaceMatchNotifyTopic'}
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.ReadCapacityUnits,5
Parameters.TwitterConsumerKey.Description,"Twitter Consumer Key, as generated by dev.twitter.com."
Resources.AWS::SNS::Topic.Properties.TopicName,FaceMatchNotifyTopic
Resources.AWS::KinesisFirehose::DeliveryStream.Properties.S3DestinationConfiguration.RoleARN,"{u'Fn::GetAtt': [u'FirehoseDeliveryRole', u'Arn']}"
Resources.AWS::IAM::Policy.Properties.Roles,[{u'Ref': u'RekognitionWorkshopRole'}]
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./home/ec2-user/rekognition-workshop/twitter-rekognition.config.group,ec2-user
Resources.AWS::EC2::Instance.Properties.KeyName,{u'Ref': u'KeyName'}
Resources.AWS::IAM::Policy.Type,AWS::IAM::Policy
Parameters.TwitterToken.Description,"Twitter Access Token, as generated by dev.twitter.com."
Resources.AWS::Lambda::Permission.Properties.Action,lambda:InvokeFunction
Outputs.PublicDNS.Description,Public DNSName of the newly created EC2 instance
Parameters.PersonPhotoFilename.Description,Filename of the reference photo containing the favority celebrity. Rekognition will scan incoming photos for people that are similar to the person in this photo.
Outputs.InstanceId.Value,{u'Ref': u'TwitterEC2Instance'}
Parameters.KeyName.Type,AWS::EC2::KeyPair::KeyName
Parameters.TwitterConsumerSecret.Description,"Twitter Consumer Secret, as generated by dev.twitter.com"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./home/ec2-user/rekognition-workshop/twitter_streaming.py.owner,ec2-user
Parameters.TwitterConsumerKey.Type,String
Resources.AWS::SNS::Subscription.Properties.TopicArn,{u'Ref': u'FaceMatchNotifyTopic'}
Resources.AWS::SNS::Subscription.Properties.Protocol,email
Resources.AWS::KinesisFirehose::DeliveryStream.Properties.S3DestinationConfiguration.BufferingHints.IntervalInSeconds,60
Resources.AWS::Lambda::Function.Type,AWS::Lambda::Function
Resources.AWS::KinesisFirehose::DeliveryStream.Properties.S3DestinationConfiguration.BucketARN,"{u'Fn::Join': [u'', [u'arn:aws:s3:::', {u'Ref': u'TwitterS3Bucket'}]]}"
Resources.AWS::Lambda::Permission.Properties.SourceAccount,{u'Ref': u'AWS::AccountId'}
Resources.AWS::KinesisFirehose::DeliveryStream.Type,AWS::KinesisFirehose::DeliveryStream
Resources.AWS::Lambda::Function.Properties.Role,"{u'Fn::GetAtt': [u'LambdaExecutionRole', u'Arn']}"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./home/ec2-user/rekognition-workshop/twitter_streaming.py.mode,000771
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'S3Access', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u's3:*'], u'Resource': [{u'Fn::Join': [u'', [u'arn:aws:s3:::', {u'Ref': u'TwitterS3Bucket'}]]}, {u'Fn::Join': [u'', [{u'Fn::Join': [u'', [u'arn:aws:s3:::', {u'Ref': u'TwitterS3Bucket'}]]}, u'/*']]}], u'Effect': u'Allow'}]}}, {u'PolicyName': u'CloudWatch', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u'cloudwatch:*', u'cloudwatchlogs:*'], u'Resource': [u'*'], u'Effect': u'Allow'}]}}]"
Resources.AWS::S3::BucketPolicy.Properties.Bucket,{u'Ref': u'RekognitionS3Bucket'}
Resources.AWS::IAM::InstanceProfile.Properties.Roles,[{u'Ref': u'RekognitionWorkshopRole'}]
Resources.AWS::EC2::SecurityGroup.Type,AWS::EC2::SecurityGroup
Outputs.AZ.Description,Availability Zone of the newly created EC2 instance
Parameters.SSHLocation.Default,0.0.0.0/0
Resources.AWS::Lambda::Function.Properties.Environment.Variables.RefPhoto,{u'Ref': u'PersonPhotoFilename'}
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Enable SSH access via port 22
Resources.AWS::Lambda::Permission.Properties.Principal,s3.amazonaws.com
Outputs.PublicDNS.Value,"{u'Fn::GetAtt': [u'TwitterEC2Instance', u'PublicDnsName']}"
Outputs.InstanceId.Description,InstanceId of the newly created EC2 instance
Parameters.PersonPhotoFilename.Type,String
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./home/ec2-user/rekognition-workshop/twitter-rekognition.config.content,"{u'Fn::Join': [u'', [u'[keys] \n', u'consumer_key = ', {u'Ref': u'TwitterConsumerKey'}, u'\n', u'consumer_secret = ', {u'Ref': u'TwitterConsumerSecret'}, u'\n', u'access_token = ', {u'Ref': u'TwitterToken'}, u'\n', u'access_token_secret = ', {u'Ref': u'TwitterTokenSecret'}, u'\n', u'\n', u'[s3]\n', u'twitter_bucket = ', {u'Ref': u'TwitterS3Bucket'}, u'\n', u'\n', u'[firehose]\n', u'deliverystream_name = ', {u'Ref': u'FirehoseDeliveryStream'}, u'\n', u'\n', u'[dynamodb]\n', u'twitter_table = ', {u'Ref': u'TwitterDDBTable'}, u'']]}"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./home/ec2-user/rekognition-workshop/twitter_streaming.py.source,https://s3-eu-west-1.amazonaws.com/serverlessbytes/twitter_streaming.py
Resources.AWS::S3::Bucket.Type,AWS::S3::Bucket
Resources.AWS::DynamoDB::Table.Properties.TableName,rekognitionTable
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'ec2.amazonaws.com']}}]"
Parameters.KeyName.Description,Name of an existing EC2 KeyPair to enable SSH access to the instance
Resources.AWS::EC2::Instance.Properties.IamInstanceProfile,{u'Ref': u'RekognitionWorkshopInstanceProfile'}
Resources.AWS::Lambda::Function.Properties.Environment.Variables.S3RekBucket,"{u'Fn::Join': [u'-', [{u'Ref': u'AWS::StackName'}, u'rekognition-workshop', {u'Ref': u'AWS::AccountId'}, {u'Ref': u'AWS::Region'}]]}"
Parameters.PersonPhotoFilename.Default,celebrity.jpg
Parameters.TwitterToken.Type,String
Outputs.PublicIP.Description,Public IP address of the newly created EC2 instance
Parameters.SSHLocation.MinLength,9
Resources.AWS::Lambda::Function.Properties.Code.S3Bucket,serverlessbytes
Resources.AWS::Lambda::Function.Properties.Code.S3Key,TwitterDDB.zip
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./home/ec2-user/rekognition-workshop/twitter-rekognition.config.mode,000771
Resources.AWS::SNS::Topic.Type,AWS::SNS::Topic
Resources.AWS::IAM::Role.Properties.Path,/
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Parameters.SSHLocation.Type,String
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./home/ec2-user/rekognition-workshop/twitter-rekognition.config.owner,ec2-user
Resources.AWS::EC2::Instance.Properties.SecurityGroups,[{u'Ref': u'InstanceSecurityGroup'}]
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.WriteCapacityUnits,5
Parameters.EmailAddress.Description,Email to where face match notifications will be sent
Resources.AWS::IAM::InstanceProfile.Type,AWS::IAM::InstanceProfile
Resources.AWS::S3::BucketPolicy.Type,AWS::S3::BucketPolicy
Resources.AWS::EC2::Instance.Type,AWS::EC2::Instance
Parameters.SSHLocation.MaxLength,18
Resources.AWS::S3::BucketPolicy.Properties.PolicyDocument.Statement,"[{u'Action': u's3:GetObject', u'Resource': {u'Fn::Join': [u'', [u'arn:aws:s3:::', {u'Ref': u'RekognitionS3Bucket'}, u'/images/*']]}, u'Effect': u'Allow', u'Principal': u'*'}]"
Resources.AWS::Lambda::Function.Properties.Runtime,python3.6
Resources.AWS::IAM::Policy.Properties.PolicyName,RekognitionWorkshopRolePolicy
Resources.AWS::KinesisFirehose::DeliveryStream.Properties.S3DestinationConfiguration.Prefix,firehose/
Outputs.AZ.Value,"{u'Fn::GetAtt': [u'TwitterEC2Instance', u'AvailabilityZone']}"
Parameters.TwitterTokenSecret.Type,String
Resources.AWS::EC2::Instance.Properties.ImageId,"{u'Fn::FindInMap': [u'AWSRegionArch2AMI', {u'Ref': u'AWS::Region'}, {u'Fn::FindInMap': [u'AWSInstanceType2Arch', {u'Ref': u'InstanceType'}, u'Arch']}]}"
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'22', u'IpProtocol': u'tcp', u'CidrIp': {u'Ref': u'SSHLocation'}, u'FromPort': u'22'}]"
Resources.AWS::S3::Bucket.Properties.NotificationConfiguration.LambdaConfigurations,"[{u'Function': {u'Fn::GetAtt': [u'RekognitionLambdaFunction', u'Arn']}, u'Filter': {u'S3Key': {u'Rules': [{u'Name': u'prefix', u'Value': u'images/'}]}}, u'Event': u's3:ObjectCreated:*'}]"
Parameters.TwitterTokenSecret.Description,"Twitter Access Token Secret, as generated by dev.twitter.com"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./home/ec2-user/rekognition-workshop/twitter_streaming.py.group,ec2-user
Resources.AWS::S3::Bucket.Properties.BucketName,"{u'Fn::Join': [u'-', [{u'Ref': u'AWS::StackName'}, u'rekognition-workshop', {u'Ref': u'AWS::AccountId'}, {u'Ref': u'AWS::Region'}]]}"
