Resources.AWS::WAF::Rule.Properties.MetricName,WAFRule2
Resources.AWS::Events::Rule.Properties.ScheduleExpression,rate(1 hour)
Parameters.ReputationLists.Type,String
Parameters.ReputationLists.Description,"IP reputation lists, in a JSON-formatted array of objects. Each object should have a 'url' property and optional 'prefix' in regular expressions format"
Resources.AWS::Lambda::Permission.Properties.FunctionName,{u'Ref': u'LambdaFunction'}
Resources.AWS::Lambda::Function.Properties.Code.S3Key,waf-reputation-lists/lambda.zip
Resources.AWS::WAF::IPSet.Type,AWS::WAF::IPSet
Resources.AWS::Lambda::Permission.Properties.Principal,events.amazonaws.com
Resources.AWS::Lambda::Permission.Properties.Action,lambda:InvokeFunction
Resources.AWS::WAF::WebACL.Type,AWS::WAF::WebACL
Resources.AWS::Lambda::Function.Properties.Timeout,60
Resources.AWS::Lambda::Function.Properties.Handler,index.handler
Resources.AWS::Lambda::Permission.Type,AWS::Lambda::Permission
Resources.AWS::WAF::WebACL.Properties.Name,WebACL
Resources.AWS::Lambda::Function.Properties.Role,"{u'Fn::GetAtt': [u'LambdaRole', u'Arn']}"
Resources.AWS::WAF::WebACL.Properties.DefaultAction.Type,ALLOW
Resources.AWS::WAF::IPSet.Properties.Name,IP Set #2
Resources.AWS::WAF::WebACL.Properties.MetricName,MaliciousRequesters
Resources.AWS::Lambda::Function.Properties.Code.S3Bucket,"{u'Fn::Join': [u'.', [u'awswaf', {u'Ref': u'AWS::Region'}]]}"
Resources.AWS::Events::Rule.Properties.Targets,"[{u'Input': {u'Fn::Join': [u'', [u'{""lists"":', {u'Ref': u'ReputationLists'}, u',', u'""ipSetIds"": [', u'""', {u'Ref': u'WAFIPSet1'}, u'"",', u'""', {u'Ref': u'WAFIPSet2'}, u'""', u']}']]}, u'Id': u'LambdaFunction', u'Arn': {u'Fn::GetAtt': [u'LambdaFunction', u'Arn']}}]"
Resources.AWS::WAF::Rule.Properties.Name,WAF Rule #2
Resources.AWS::WAF::WebACL.Properties.Rules,"[{u'Action': {u'Type': u'BLOCK'}, u'Priority': 1, u'RuleId': {u'Ref': u'WAFRule1'}}, {u'Action': {u'Type': u'BLOCK'}, u'Priority': 2, u'RuleId': {u'Ref': u'WAFRule2'}}]"
Resources.AWS::WAF::Rule.Properties.Predicates,"[{u'DataId': {u'Ref': u'WAFIPSet2'}, u'Type': u'IPMatch', u'Negated': u'false'}]"
Resources.AWS::Lambda::Function.Properties.MemorySize,512
Resources.AWS::Lambda::Function.Type,AWS::Lambda::Function
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': u'sts:AssumeRole', u'Effect': u'Allow', u'Principal': {u'Service': [u'lambda.amazonaws.com']}}]"
Resources.AWS::Lambda::Function.Properties.Runtime,nodejs4.3
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Resources.AWS::Events::Rule.Type,AWS::Events::Rule
Resources.AWS::WAF::Rule.Type,AWS::WAF::Rule
Resources.AWS::Lambda::Permission.Properties.SourceArn,"{u'Fn::GetAtt': [u'EventsRule', u'Arn']}"
Parameters.ReputationLists.Default,"[{""url"":""https://www.spamhaus.org/drop/drop.txt""},{""url"":""https://check.torproject.org/exit-addresses"",""prefix"":""ExitAddress ""},{""url"":""https://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt""}]"
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'CloudWatchLogs', u'PolicyDocument': {u'Statement': [{u'Action': u'logs:*', u'Resource': u'*', u'Effect': u'Allow'}]}}, {u'PolicyName': u'WAFGetChangeToken', u'PolicyDocument': {u'Statement': [{u'Action': u'waf:GetChangeToken', u'Resource': u'*', u'Effect': u'Allow'}]}}, {u'PolicyName': u'WAFGetAndUpdateIPSet', u'PolicyDocument': {u'Statement': [{u'Action': [u'waf:GetIPSet', u'waf:UpdateIPSet'], u'Resource': [{u'Fn::Join': [u'', [u'arn:aws:waf::', {u'Ref': u'AWS::AccountId'}, u':ipset/', {u'Ref': u'WAFIPSet1'}]]}, {u'Fn::Join': [u'', [u'arn:aws:waf::', {u'Ref': u'AWS::AccountId'}, u':ipset/', {u'Ref': u'WAFIPSet2'}]]}], u'Effect': u'Allow'}]}}]"
Resources.AWS::Events::Rule.Properties.Description,WAF Reputation Lists
