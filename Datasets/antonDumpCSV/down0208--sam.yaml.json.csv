Outputs.CognitoUserPoolsGroupRole.Value,CUPGroupRole
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.post.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.options.x-amazon-apigateway-integration.type,mock
Resources.AWS::Serverless::Function.Properties.Events.GoogleGet.Type,Api
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.get.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::Serverless::Function.Properties.CodeUri,s3://<S3 BUCKET>/lambda.zip
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.options.responses.200.headers.Access-Control-Allow-Headers.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.get.x-amazon-apigateway-integration.passthroughBehavior,when_no_templates
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Methods,"'POST,GET,OPTIONS'"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Methods,"'POST,GET,OPTIONS'"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.options.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::DynamoDB::Table.Type,AWS::DynamoDB::Table
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.post.x-amazon-apigateway-integration.contentHandling,CONVERT_TO_TEXT
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.options.produces,[u'application/json']
Resources.AWS::Cognito::IdentityPool.Type,AWS::Cognito::IdentityPool
Resources.AWS::DynamoDB::Table.Properties.KeySchema,"[{u'KeyType': u'HASH', u'AttributeName': u'userId'}]"
Resources.AWS::Serverless::Function.Properties.Events.CupGet.Type,Api
Outputs.LamdbaFunction.Value,CognitoDemoFunction
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.get.security,[{u'sigv4': []}]
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.options.x-amazon-apigateway-integration.responses.default.statusCode,200
Resources.AWS::Serverless::Api.Properties.StageName,demo
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.post.x-amazon-apigateway-integration.type,aws
Resources.AWS::Serverless::Function.Properties.Events.CipGet.Properties.Path,/cip
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.get.x-amazon-apigateway-integration.uri,{u'Fn::Sub': u'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CognitoDemoFunction.Arn}/invocations'}
Resources.AWS::Serverless::Api.Properties.DefinitionBody.securityDefinitions.myApiUsers.x-amazon-apigateway-authorizer.type,cognito_user_pools
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Headers,"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
Outputs.DDB.Value,Table
Resources.AWS::DynamoDB::Table.Properties.AttributeDefinitions,"[{u'AttributeName': u'userId', u'AttributeType': u'S'}]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.get.x-amazon-apigateway-integration.type,aws
Resources.AWS::Cognito::UserPoolGroup.Properties.Precedence,1
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.post.security,[{u'myApiUsers': []}]
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.options.x-amazon-apigateway-integration.passthroughBehavior,when_no_match
Outputs.CognitoIdentityPool.Value,CognitoIdPool
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.post.responses.200.description,200 response
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Headers,"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.post.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.options.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.get.x-amazon-apigateway-integration.responses.default.statusCode,200
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.get.x-amazon-apigateway-integration.contentHandling,CONVERT_TO_TEXT
Resources.AWS::Serverless::Api.Type,AWS::Serverless::Api
Resources.AWS::Serverless::Function.Properties.Events.CupGet.Properties.Method,GET
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.post.consumes,[u'application/json']
Resources.AWS::Cognito::IdentityPoolRoleAttachment.Properties.Roles.authenticated,GoogleRole.Arn
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.options.responses.200.headers.Access-Control-Allow-Methods.type,string
Resources.AWS::Serverless::Function.Properties.Events.CipPost.Properties.RestApiId,{u'Ref': u'CognitoDemoApi'}
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.post.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::Cognito::IdentityPool.Properties.AllowUnauthenticatedIdentities,False
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.options.produces,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.options.x-amazon-apigateway-integration.responses.default.statusCode,200
Resources.AWS::Serverless::Function.Properties.Events.CipGet.Properties.RestApiId,{u'Ref': u'CognitoDemoApi'}
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.ReadCapacityUnits,5
Resources.AWS::Serverless::Function.Properties.Events.CipInfoGet.Properties.Path,/cip/info
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.options.responses.200.description,200 response
Outputs.CognitoUserPoolClient.Description,Cognito User Pool App
Outputs.RestApiId.Value,CognitoDemoApi
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.post.x-amazon-apigateway-integration.httpMethod,POST
Outputs.CognitoIdentityAuthRole.Value,GoogleRole
Resources.AWS::Cognito::UserPoolGroup.Properties.GroupName,cip-group
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.get.x-amazon-apigateway-integration.passthroughBehavior,when_no_templates
Outputs.CognitoUserPool.Description,Cognito User Pool
Resources.AWS::Serverless::Function.Properties.Events.CupPost.Type,Api
Resources.AWS::Serverless::Function.Properties.Environment.Variables.TABLE_NAME,Table
Outputs.DDB.Description,DynamoDB Table
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.get.x-amazon-apigateway-integration.requestTemplates.application/json,"#set($inputRoot = $input.path('$'))
{
  ""operation"": ""list"",
  ""payload"":{    
      ""FilterExpression"" : ""userId = :this_id"",
      ""ExpressionAttributeValues"" : {"":this_id"" : ""$context.identity.cognitoIdentityId""}
    }
}"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.options.consumes,[u'application/json']
Resources.AWS::Serverless::Function.Properties.Events.CipInfoGet.Properties.RestApiId,{u'Ref': u'CognitoDemoApi'}
Resources.AWS::Serverless::Api.Properties.DefinitionBody.securityDefinitions.sigv4.type,apiKey
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.options.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::Cognito::UserPool.Properties.UserPoolName,CognitoAPIGWAngular
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.get.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.options.produces,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.options.x-amazon-apigateway-integration.passthroughBehavior,when_no_match
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.get.security,[{u'myApiUsers': []}]
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.post.produces,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.get.produces,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.get.x-amazon-apigateway-integration.type,aws
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.post.x-amazon-apigateway-integration.httpMethod,POST
Resources.AWS::Cognito::IdentityPool.Properties.CognitoIdentityProviders,"[{u'ProviderName': u'CognitoUserPool.ProviderName', u'ClientId': u'CognitoUserPoolClient'}]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.info.title,CognitoAPIGWAngular
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.get.produces,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.get.produces,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Methods,"'POST,GET,OPTIONS'"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.options.responses.200.description,200 response
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.options.responses.200.headers.Access-Control-Allow-Headers.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.options.responses.200.description,200 response
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.post.produces,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.securityDefinitions.sigv4.in,header
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.get.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::Serverless::Function.Properties.Handler,index.handler
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.options.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.get.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.get.x-amazon-apigateway-integration.type,aws
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.options.x-amazon-apigateway-integration.type,mock
Outputs.ApiUrl.Value,"[u'', [u'https://', u'CognitoDemoApi', u'.execute-api.', u'AWS::Region', u'.amazonaws.com/demo']]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.post.x-amazon-apigateway-integration.responses.default.statusCode,200
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Headers,"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
Resources.AWS::Cognito::UserPoolGroup.Properties.RoleArn,CUPGroupRole.Arn
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.get.x-amazon-apigateway-integration.contentHandling,CONVERT_TO_TEXT
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.post.consumes,[u'application/json']
Resources.AWS::Serverless::Function.Properties.Runtime,nodejs4.3
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.get.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.options.consumes,[u'application/json']
Outputs.ApiUrl.Description,URL of your API endpoint
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.get.consumes,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.schemes,[u'https']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.get.x-amazon-apigateway-integration.requestTemplates.application/json,"#set($inputRoot = $input.path('$'))
{
  ""operation"": ""echo"",
  ""payload"": {
      ""Item"" : {
          ""name"" : ""$context.authorizer.claims.given_name"",
          ""surname"" : ""$context.authorizer.claims.family_name"",
          ""email"" : ""$context.authorizer.claims.email""
          
          }
  }
}"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.options.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.post.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::Serverless::Function.Properties.Events.CupPost.Properties.Method,POST
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.options.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::Cognito::IdentityPool.Properties.IdentityPoolName,AWS::StackName
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.post.x-amazon-apigateway-integration.passthroughBehavior,when_no_templates
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.post.x-amazon-apigateway-integration.requestTemplates.application/json,"#set($inputRoot = $input.path('$'))
{
  ""operation"": ""create"",
  ""payload"": {
      ""Item"" : {
          ""userId"" : ""$context.identity.cognitoIdentityId"",
          ""name"" : ""$inputRoot.name"",
          ""surname"" : ""$inputRoot.surname"",
          ""email"" : ""$inputRoot.email"",
          ""provider"": ""Google""
          }
  }
}"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.options.consumes,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.post.x-amazon-apigateway-integration.type,aws
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.options.responses.200.headers.Access-Control-Allow-Methods.type,string
Resources.AWS::Serverless::Function.Properties.Events.CupPost.Properties.Path,/cup
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.get.x-amazon-apigateway-integration.passthroughBehavior,when_no_templates
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.get.x-amazon-apigateway-integration.httpMethod,POST
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'CognitoAPIGWAngularCIP', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': u'execute-api:Invoke', u'Resource': [[u'/', [[u':', [u'arn:aws:execute-api', u'AWS::Region', u'AWS::AccountId', u'CognitoDemoApi']], u'*/GET/cip']], [u'/', [[u':', [u'arn:aws:execute-api', u'AWS::Region', u'AWS::AccountId', u'CognitoDemoApi']], u'*/POST/cip']]], u'Effect': u'Allow'}]}}]"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.get.responses.200.description,200 response
Resources.AWS::Serverless::Function.Properties.Events.CipGet.Type,Api
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.get.x-amazon-apigateway-integration.responses.default.statusCode,200
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Methods,"'GET,OPTIONS'"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.get.x-amazon-apigateway-integration.passthroughBehavior,when_no_templates
Outputs.CognitoIdentityPool.Description,Cognito Identity Pool
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.post.x-amazon-apigateway-integration.type,aws
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.post.x-amazon-apigateway-integration.requestTemplates.application/json,"#set($inputRoot = $input.path('$'))
{
  ""operation"": ""create"",
  ""payload"": {
      ""Item"" : {
          ""userId"" : ""$context.authorizer.claims.sub"",
          ""name"" : ""$context.authorizer.claims.given_name"",
          ""surname"" : ""$context.authorizer.claims.family_name"",
          ""email"" : ""$context.authorizer.claims.email"",
          ""provider"" : ""Cognito User Pools""
          }
  }
}"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.options.x-amazon-apigateway-integration.requestTemplates.application/json,"{""statusCode"": 200}"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.post.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::Serverless::Function.Properties.Events.GooglePost.Properties.RestApiId,{u'Ref': u'CognitoDemoApi'}
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.post.produces,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.securityDefinitions.myApiUsers.x-amazon-apigateway-authorizer.providerARNs,[{u'Fn::Sub': u'${CognitoUserPool.Arn}'}]
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.options.responses.200.headers.Access-Control-Allow-Methods.type,string
Outputs.RestApiId.Description,API Gateway API ID
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.get.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.securityDefinitions.sigv4.x-amazon-apigateway-authtype,awsSigv4
Resources.AWS::Serverless::Function.Properties.Events.GooglePost.Properties.Path,/google
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.get.consumes,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.post.security,[{u'sigv4': []}]
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.options.responses.200.description,200 response
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.get.x-amazon-apigateway-integration.responses.default.statusCode,200
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.options.responses.200.headers.Access-Control-Allow-Methods.type,string
Resources.AWS::Serverless::Function.Properties.Events.GoogleGet.Properties.Path,/google
Resources.AWS::Serverless::Function.Properties.Events.GoogleGet.Properties.RestApiId,{u'Ref': u'CognitoDemoApi'}
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.options.x-amazon-apigateway-integration.passthroughBehavior,when_no_match
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.options.x-amazon-apigateway-integration.responses.default.statusCode,200
Resources.AWS::Cognito::UserPoolClient.Properties.ClientName,myApp
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::Cognito::UserPoolGroup.Type,AWS::Cognito::UserPoolGroup
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.get.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.post.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.get.x-amazon-apigateway-integration.requestTemplates.application/json,"#set($inputRoot = $input.path('$'))
{
  ""operation"": ""list"",
  ""payload"":{    
      ""FilterExpression"" : ""userId = :this_id"",
      ""ExpressionAttributeValues"" : {"":this_id"" : ""$context.authorizer.claims.sub""}
    }
}"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.options.x-amazon-apigateway-integration.requestTemplates.application/json,"{""statusCode"": 200}"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.post.responses.200.description,200 response
Resources.AWS::Serverless::Function.Properties.Events.CipGet.Properties.Method,GET
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.post.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::Cognito::UserPool.Type,AWS::Cognito::UserPool
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.post.security,[{u'sigv4': []}]
Resources.AWS::Serverless::Api.Properties.DefinitionBody.securityDefinitions.sigv4.name,Authorization
Resources.AWS::Serverless::Function.Properties.Events.CupGet.Properties.RestApiId,{u'Ref': u'CognitoDemoApi'}
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.options.x-amazon-apigateway-integration.requestTemplates.application/json,"{""statusCode"": 200}"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.post.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.get.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.options.x-amazon-apigateway-integration.requestTemplates.application/json,"{""statusCode"": 200}"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.options.responses.200.headers.Access-Control-Allow-Headers.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.securityDefinitions.myApiUsers.type,apiKey
Resources.AWS::Serverless::Function.Properties.Events.CipPost.Properties.Method,POST
Resources.AWS::Serverless::Function.Properties.Events.GoogleGet.Properties.Method,GET
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.options.responses.200.headers.Access-Control-Allow-Headers.type,string
Outputs.CognitoUserPool.Value,CognitoUserPool
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.get.security,[{u'myApiUsers': []}]
Outputs.CognitoIdentityAuthRole.Description,Cognito Identity IAM Auth Role
Resources.AWS::Serverless::Api.Properties.DefinitionBody.swagger,2.0
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.post.x-amazon-apigateway-integration.responses.default.statusCode,200
Resources.AWS::Serverless::Function.Properties.Events.CipInfoGet.Type,Api
Resources.AWS::Serverless::Function.Type,AWS::Serverless::Function
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.post.x-amazon-apigateway-integration.uri,{u'Fn::Sub': u'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CognitoDemoFunction.Arn}/invocations'}
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.options.produces,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.get.x-amazon-apigateway-integration.responses.default.statusCode,200
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.get.x-amazon-apigateway-integration.uri,{u'Fn::Sub': u'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CognitoDemoFunction.Arn}/invocations'}
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.options.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::Serverless::Function.Properties.Events.CupPost.Properties.RestApiId,{u'Ref': u'CognitoDemoApi'}
Resources.AWS::Serverless::Api.Properties.DefinitionBody.securityDefinitions.myApiUsers.x-amazon-apigateway-authtype,cognito_user_pools
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.get.responses.200.description,200 response
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.post.x-amazon-apigateway-integration.requestTemplates.application/json,"#set($inputRoot = $input.path('$'))
{
  ""operation"": ""create"",
  ""payload"": {
      ""Item"" : {
          ""userId"" : ""$context.identity.cognitoIdentityId"",
          ""name"" : ""$inputRoot.name"",
          ""surname"" : ""$inputRoot.surname"",
          ""email"" : ""$inputRoot.email"",
          ""provider"" : ""Cognito User Pools with Cognito Identity Federation""
          }
  }
}"
Resources.AWS::Serverless::Function.Properties.Policies,AmazonDynamoDBFullAccess
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.options.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.options.consumes,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.get.responses.200.description,200 response
Resources.AWS::Cognito::UserPoolGroup.Properties.UserPoolId,CognitoUserPool
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.options.x-amazon-apigateway-integration.passthroughBehavior,when_no_match
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.get.x-amazon-apigateway-integration.httpMethod,POST
Outputs.CognitoUserPoolsGroupRole.Description,Cognito User Pools IAM Group Role
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.get.responses.200.headers.Access-Control-Allow-Origin.type,string
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.get.x-amazon-apigateway-integration.uri,{u'Fn::Sub': u'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CognitoDemoFunction.Arn}/invocations'}
Resources.AWS::Cognito::UserPoolClient.Properties.UserPoolId,CognitoUserPool
Resources.AWS::IAM::Role.Properties.Path,/
Outputs.LamdbaFunction.Description,Lambda Function
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Resources.AWS::Serverless::Api.Properties.DefinitionBody.basePath,/demo
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.post.consumes,[u'application/json']
Resources.AWS::Serverless::Function.Properties.Events.GooglePost.Type,Api
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.get.x-amazon-apigateway-integration.requestTemplates.application/json,"#set($inputRoot = $input.path('$'))
{
  ""operation"": ""list"",
  ""payload"":{    
      ""FilterExpression"" : ""userId = :this_id"",
      ""ExpressionAttributeValues"" : {"":this_id"" : ""$context.identity.cognitoIdentityId""}
    }
}"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.definitions.Empty.title,Empty Schema
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.post.x-amazon-apigateway-integration.uri,{u'Fn::Sub': u'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CognitoDemoFunction.Arn}/invocations'}
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.post.responses.200.description,200 response
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.get.x-amazon-apigateway-integration.type,aws
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.post.x-amazon-apigateway-integration.passthroughBehavior,when_no_templates
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.get.x-amazon-apigateway-integration.httpMethod,POST
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.post.x-amazon-apigateway-integration.contentHandling,CONVERT_TO_TEXT
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.WriteCapacityUnits,5
Resources.AWS::Cognito::IdentityPoolRoleAttachment.Properties.IdentityPoolId,CognitoIdPool
Resources.AWS::Serverless::Function.Properties.Events.CipPost.Properties.Path,/cip
Resources.AWS::Serverless::Api.Properties.DefinitionBody.definitions.Empty.type,object
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.post.x-amazon-apigateway-integration.responses.default.statusCode,200
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.get.consumes,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.get.x-amazon-apigateway-integration.contentHandling,CONVERT_TO_TEXT
Resources.AWS::Cognito::UserPoolClient.Type,AWS::Cognito::UserPoolClient
Resources.AWS::Cognito::IdentityPoolRoleAttachment.Type,AWS::Cognito::IdentityPoolRoleAttachment
Resources.AWS::Serverless::Function.Properties.Events.CipPost.Type,Api
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.get.x-amazon-apigateway-integration.contentHandling,CONVERT_TO_TEXT
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRoleWithWebIdentity'], u'Effect': u'Allow', u'Condition': {u'StringEquals': {u'cognito-identity.amazonaws.com:aud': [u'CognitoIdPool']}, u'ForAnyValue:StringLike': {u'cognito-identity.amazonaws.com:amr': [u'authenticated']}}, u'Principal': {u'Federated': [u'cognito-identity.amazonaws.com']}}]"
Resources.AWS::Serverless::Function.Properties.Events.GooglePost.Properties.Method,POST
Resources.AWS::Serverless::Function.Properties.Events.CipInfoGet.Properties.Method,GET
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.get.produces,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.get.security,[{u'sigv4': []}]
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.get.x-amazon-apigateway-integration.httpMethod,POST
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.options.x-amazon-apigateway-integration.type,mock
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.post.x-amazon-apigateway-integration.contentHandling,CONVERT_TO_TEXT
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.get.x-amazon-apigateway-integration.uri,{u'Fn::Sub': u'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CognitoDemoFunction.Arn}/invocations'}
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.post.x-amazon-apigateway-integration.httpMethod,POST
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.options.x-amazon-apigateway-integration.type,mock
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.post.x-amazon-apigateway-integration.passthroughBehavior,when_no_templates
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Headers,"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.post.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.options.x-amazon-apigateway-integration.responses.default.statusCode,200
Resources.AWS::Serverless::Api.Properties.DefinitionBody.securityDefinitions.myApiUsers.name,Authorization
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.get.responses.200.schema.$ref,#/definitions/Empty
Resources.AWS::Serverless::Api.Properties.DefinitionBody.info.version,2017-04-26T03:23:48Z
Resources.AWS::Serverless::Api.Properties.DefinitionBody.securityDefinitions.myApiUsers.in,header
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::Cognito::UserPoolClient.Properties.GenerateSecret,False
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.options.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::Serverless::Function.Properties.Events.CupGet.Properties.Path,/cup
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./google.get.responses.200.description,200 response
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip/info.get.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.get.consumes,[u'application/json']
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cup.get.x-amazon-apigateway-integration.responses.default.responseParameters.method.response.header.Access-Control-Allow-Origin,'*'
Resources.AWS::Serverless::Api.Properties.DefinitionBody.paths./cip.post.x-amazon-apigateway-integration.uri,{u'Fn::Sub': u'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CognitoDemoFunction.Arn}/invocations'}
Outputs.CognitoUserPoolClient.Value,CognitoUserPoolClient
