Resources.AWS::IAM::InstanceProfile.Properties.Path,/
Resources.AWS::EC2::Route.Type,AWS::EC2::Route
Resources.AWS::EC2::NetworkAclEntry.Properties.NetworkAclId,{u'Ref': u'aclb765d6d2'}
Resources.AWS::EC2::NetworkInterface.Properties.SourceDestCheck,false
Outputs.FirewallManagementURL.Description,VM-Series management interface URL
Resources.AWS::EC2::EIPAssociation.DependsOn,"[u'FWPublicNetworkInterface', u'PublicElasticIP']"
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,true
Resources.AWS::EC2::Instance.Properties.UserData,"{u'Fn::Base64': {u'Fn::Join': [u'', [u'vmseries-bootstrap-aws-s3bucket=', {u'Ref': u'BootstrapBucketName'}]]}}"
Resources.AWS::EC2::VPCDHCPOptionsAssociation.Properties.VpcId,{u'Ref': u'NewVPC'}
Resources.AWS::EC2::VPC.Properties.InstanceTenancy,default
Parameters.Parameters.ServerKeyName.Type,AWS::EC2::KeyPair::KeyName
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.SubnetId,{u'Ref': u'NewDBSubnet'}
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'IpProtocol': u'-1', u'CidrIp': u'0.0.0.0/0'}]"
Outputs.WordpressURL.Value,"{u'Fn::Join': [u'', [u'http://', {u'Ref': u'PublicElasticIP'}, u'/wordpress']]}"
Outputs.WordpressURL.Description,Wordpress server
Resources.AWS::EC2::NetworkAcl.Type,AWS::EC2::NetworkAcl
Resources.AWS::EC2::EIPAssociation.Properties.NetworkInterfaceId,{u'Ref': u'FWPublicNetworkInterface'}
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Resources.AWS::EC2::Instance.Properties.EbsOptimized,true
Resources.AWS::EC2::SubnetNetworkAclAssociation.Type,AWS::EC2::SubnetNetworkAclAssociation
Resources.AWS::EC2::NetworkAclEntry.Type,AWS::EC2::NetworkAclEntry
Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,-1
Resources.AWS::EC2::Subnet.Properties.CidrBlock,10.0.2.0/24
Resources.AWS::EC2::Instance.Properties.KeyName,{u'Ref': u'ServerKeyName'}
Resources.AWS::EC2::DHCPOptions.Properties.DomainName,us-west-2.compute.internal
Resources.AWS::EC2::Instance.Properties.DisableApiTermination,false
Resources.AWS::EC2::NetworkInterface.Properties.PrivateIpAddresses,"[{u'Primary': u'true', u'PrivateIpAddress': u'10.0.0.99'}]"
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.NetworkAclId,{u'Ref': u'aclb765d6d2'}
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,100
Resources.AWS::EC2::VPCGatewayAttachment.Properties.InternetGatewayId,{u'Ref': u'igweb3def8e'}
Resources.AWS::EC2::NetworkInterface.Properties.Tags,"[{u'Value': u'WP AWS FW1 MGMT', u'Key': u'Name'}]"
Outputs.FirewallManagementURL.Value,"{u'Fn::Join': [u'', [u'https://', {u'Ref': u'ManagementElasticIP'}]]}"
Resources.AWS::EC2::EIPAssociation.Type,AWS::EC2::EIPAssociation
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Resources.AWS::EC2::Route.Properties.RouteTableId,{u'Ref': u'rtb059a2460'}
Resources.AWS::EC2::Route.DependsOn,gw1
Resources.AWS::EC2::EIP.Properties.Domain,vpc
Resources.AWS::EC2::Instance.Properties.NetworkInterfaces,"[{u'DeviceIndex': 0, u'NetworkInterfaceId': {u'Ref': u'FWManagementNetworkInterface'}}, {u'DeviceIndex': 1, u'NetworkInterfaceId': {u'Ref': u'FWPublicNetworkInterface'}}, {u'DeviceIndex': 2, u'NetworkInterfaceId': {u'Ref': u'FWPrivate12NetworkInterface'}}, {u'DeviceIndex': 3, u'NetworkInterfaceId': {u'Ref': u'FWPrivate13NetworkInterface'}}]"
Resources.AWS::EC2::NetworkInterface.Type,AWS::EC2::NetworkInterface
Resources.AWS::EC2::Instance.Properties.BlockDeviceMappings,"[{u'DeviceName': u'/dev/xvda', u'Ebs': {u'DeleteOnTermination': u'true', u'VolumeType': u'gp2', u'VolumeSize': u'60'}}]"
Resources.AWS::EC2::RouteTable.Properties.VpcId,{u'Ref': u'NewVPC'}
Resources.AWS::EC2::VPC.Properties.CidrBlock,10.0.0.0/16
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'BootstrapRolePolicy', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': u's3:ListBucket', u'Resource': {u'Fn::Join': [u'', [u'arn:aws:s3:::aws-testdrive-bootstrap-bucket']]}, u'Effect': u'Allow'}, {u'Action': u's3:GetObject', u'Resource': {u'Fn::Join': [u'', [u'arn:aws:s3:::aws-testdrive-bootstrap-bucket/*']]}, u'Effect': u'Allow'}]}}]"
Resources.AWS::EC2::Subnet.Type,AWS::EC2::Subnet
Resources.AWS::IAM::InstanceProfile.Properties.Roles,[{u'Ref': u'BootstrapRole'}]
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpcId,{u'Ref': u'NewVPC'}
Mappings.UbuntuRegionMap.eu-central-1.AMI,ami-060cde69
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupEgress,"[{u'IpProtocol': u'-1', u'CidrIp': u'0.0.0.0/0'}]"
Mappings.UbuntuRegionMap.ca-central-1.AMI,ami-b3d965d7
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,{u'Ref': u'NewVPC'}
Resources.AWS::EC2::Instance.Properties.InstanceInitiatedShutdownBehavior,stop
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Wide open security group
Resources.AWS::EC2::EIP.Type,AWS::EC2::EIP
Resources.AWS::EC2::Instance.Properties.Monitoring,false
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,
Resources.AWS::EC2::NetworkAcl.Properties.VpcId,{u'Ref': u'NewVPC'}
Parameters.Parameters.ServerKeyName.Description,Name of an existing EC2 KeyPair to enable SSH access to the FW (Hint: You MUST have its private key)
Resources.AWS::EC2::NetworkInterface.DependsOn,[u'sgWideOpen']
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,{u'Ref': u'rtb049a2461'}
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': u'sts:AssumeRole', u'Effect': u'Allow', u'Principal': {u'Service': u'ec2.amazonaws.com'}}]"
Resources.AWS::EC2::InternetGateway.Properties.Tags,"[{u'Value': u'PAN Sample CFT', u'Key': u'Name'}]"
Resources.AWS::EC2::NetworkInterface.Properties.Description,AWS FW1 MGMT
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': u'PAN Sample CFT', u'Key': u'Name'}]"
Resources.AWS::EC2::NetworkInterface.Properties.GroupSet,[{u'Ref': u'sgWideOpen'}]
Resources.AWS::EC2::Subnet.DependsOn,NewVPC
Resources.AWS::EC2::Instance.Properties.IamInstanceProfile,{u'Ref': u'BootstrapInstanceProfile'}
Resources.AWS::IAM::InstanceProfile.Type,AWS::IAM::InstanceProfile
Resources.AWS::EC2::InternetGateway.Type,AWS::EC2::InternetGateway
Resources.AWS::EC2::SecurityGroup.Properties.VpcId,{u'Ref': u'NewVPC'}
Resources.AWS::EC2::SecurityGroup.Type,AWS::EC2::SecurityGroup
Mappings.PANFWRegionMap.eu-central-1.AMI,ami-e93df486
Resources.AWS::EC2::VPCDHCPOptionsAssociation.Properties.DhcpOptionsId,{u'Ref': u'dopt21c7d043'}
Resources.AWS::EC2::EIPAssociation.Properties.AllocationId,"{u'Fn::GetAtt': [u'PublicElasticIP', u'AllocationId']}"
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Resources.AWS::IAM::Role.Properties.Path,/
Resources.AWS::EC2::NetworkInterface.Properties.SubnetId,{u'Ref': u'NewPublicSubnet'}
Resources.AWS::EC2::DHCPOptions.Properties.DomainNameServers,[u'AmazonProvidedDNS']
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Resources.AWS::EC2::EIP.DependsOn,[u'NewVPC']
Mappings.PANFWRegionMap.ca-central-1.AMI,ami-6ebd000a
Resources.AWS::EC2::VPCGatewayAttachment.Type,AWS::EC2::VPCGatewayAttachment
Resources.AWS::EC2::Route.Properties.GatewayId,{u'Ref': u'igweb3def8e'}
Resources.AWS::EC2::VPC.Type,AWS::EC2::VPC
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': u'PAN Sample CFT', u'Key': u'Name'}]"
Resources.AWS::EC2::SubnetRouteTableAssociation.Type,AWS::EC2::SubnetRouteTableAssociation
Resources.AWS::EC2::Instance.DependsOn,"[u'FWPublicNetworkInterface', u'FWPrivate12NetworkInterface', u'FWPrivate13NetworkInterface', u'NewPublicSubnet']"
Resources.AWS::EC2::Instance.Type,AWS::EC2::Instance
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,{u'Ref': u'NewPublicSubnet'}
Resources.AWS::EC2::RouteTable.Type,AWS::EC2::RouteTable
Resources.AWS::EC2::DHCPOptions.Type,AWS::EC2::DHCPOptions
Resources.AWS::EC2::VPCDHCPOptionsAssociation.Type,AWS::EC2::VPCDHCPOptionsAssociation
Resources.AWS::EC2::Instance.Properties.ImageId,"{u'Fn::FindInMap': [u'PANFWRegionMap', {u'Ref': u'AWS::Region'}, u'AMI']}"
Resources.AWS::EC2::SecurityGroup.Properties.Tags,"[{u'Value': u'Lab External SG', u'Key': u'Name'}]"
Resources.AWS::EC2::Instance.Properties.Tags,"[{u'Value': u'WP VM-Series Firewall', u'Key': u'Name'}]"
