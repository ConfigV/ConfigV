Resources.AWS::EC2::NetworkAclEntry.Properties.NetworkAclId,{u'Ref': u'NetworkAcl'}
Outputs.URL.Value,"{u'Fn::Join': [u'', [u'http://', {u'Ref': u'ElasticIP'}]]}"
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,true
Resources.AWS::EC2::Instance.Properties.UserData,"{u'Fn::Base64': {u'Fn::Join': [u'', [u'#!/bin/bash -ex\n', u'yum -y install httpd\n', u'service httpd start\n']]}}"
Resources.AWS::EC2::Instance.Properties.SubnetId,{u'Ref': u'Subnet'}
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,10
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'22', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'22'}, {u'ToPort': u'80', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'80'}, {u'ToPort': u'-1', u'IpProtocol': u'icmp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'-1'}]"
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.SubnetId,{u'Ref': u'Subnet'}
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,-1
Resources.AWS::CloudWatch::Alarm.Properties.ComparisonOperator,GreaterThanThreshold
Resources.AWS::EC2::Subnet.Properties.CidrBlock,10.0.0.0/24
Resources.AWS::EC2::Instance.Properties.KeyName,{u'Ref': u'KeyName'}
Resources.AWS::CloudWatch::Alarm.Properties.EvaluationPeriods,5
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.NetworkAclId,{u'Ref': u'NetworkAcl'}
Resources.AWS::CloudWatch::Alarm.Properties.MetricName,StatusCheckFailed_System
Resources.AWS::EC2::Instance.Properties.SecurityGroupIds,[{u'Ref': u'SecurityGroup'}]
Resources.AWS::EC2::VPCGatewayAttachment.Properties.InternetGatewayId,{u'Ref': u'InternetGateway'}
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': u'Web Server', u'Key': u'Name'}]"
Resources.AWS::CloudWatch::Alarm.Properties.AlarmActions,"[{u'Fn::Join': [u'', [u'arn:aws:automate:', {u'Ref': u'AWS::Region'}, u':ec2:recover']]}]"
Resources.AWS::CloudWatch::Alarm.Properties.Namespace,AWS/EC2
Parameters.KeyName.Default,mykey
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Resources.AWS::EC2::Route.Properties.RouteTableId,{u'Ref': u'RouteTable'}
Resources.AWS::EC2::Route.DependsOn,GatewayToInternet
Resources.AWS::EC2::EIP.Properties.Domain,vpc
Resources.AWS::CloudWatch::Alarm.Properties.Period,60
Resources.AWS::EC2::RouteTable.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.To,65535
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,SecurityGroupforjenkins
Resources.AWS::CloudWatch::Alarm.Properties.Statistic,Minimum
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,"{u'Fn::Select': [u'0', {u'Fn::GetAZs': u''}]}"
Resources.AWS::EC2::NetworkAcl.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.From,0
Resources.AWS::EC2::NetworkAcl.Properties.Tags,"[{u'Value': u'Web Server', u'Key': u'Name'}]"
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,{u'Ref': u'RouteTable'}
Mappings.EC2RegionMap.eu-central-1.AmazonLinuxAMIHVMEBSBacked64bit,ami-a8221fb5
Resources.AWS::EC2::InternetGateway.Properties.Tags,"[{u'Value': u'Web Server', u'Key': u'Name'}]"
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': u'Web Server', u'Key': u'Name'}]"
Parameters.KeyName.Description,Key Pair name
Outputs.URL.Description,URL to access web interface of Web server.
Resources.AWS::EC2::SecurityGroup.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::CloudWatch::Alarm.Properties.Dimensions,"[{u'Name': u'InstanceId', u'Value': {u'Ref': u'Server'}}]"
Resources.AWS::EC2::VPC.Properties.CidrBlock,10.0.0.0/16
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Resources.AWS::EC2::EIP.DependsOn,GatewayToInternet
Resources.AWS::CloudWatch::Alarm.Properties.Threshold,0
Resources.AWS::EC2::Route.Properties.GatewayId,{u'Ref': u'InternetGateway'}
Resources.AWS::CloudWatch::Alarm.Properties.AlarmDescription,Recover server when underlying hardware fails.
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': u'Web Server', u'Key': u'Name'}]"
Resources.AWS::EC2::Instance.DependsOn,GatewayToInternet
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,{u'Ref': u'Subnet'}
Resources.AWS::EC2::EIP.Properties.InstanceId,{u'Ref': u'Server'}
Resources.AWS::EC2::NetworkAclEntry.Properties.Icmp.Code,-1
Resources.AWS::EC2::Instance.Properties.ImageId,"{u'Fn::FindInMap': [u'EC2RegionMap', {u'Ref': u'AWS::Region'}, u'AmazonLinuxAMIHVMEBSBacked64bit']}"
Resources.AWS::EC2::SecurityGroup.Properties.Tags,"[{u'Value': u'Web Server', u'Key': u'Name'}]"
Resources.AWS::EC2::Instance.Properties.Tags,"[{u'Value': u'Web Server', u'Key': u'Name'}]"
