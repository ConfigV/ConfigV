Resources.AWS::IAM::InstanceProfile.Properties.Path,/
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Enable SSH and Registry access
Resources.AWS::Route53::RecordSet.Properties.TTL,300
Parameters.SubnetId.Description,The Subnet ID for the instance
Parameters.VpcId.Description,VPC associated with the provided subnet
Resources.AWS::IAM::Role.Properties.Path,/
Parameters.GoPackage.Default,github.com/ConradIrwin/aws-name-server
Parameters.DnsPrefix.Description,Prefix for the NS record (<prefix>.<zone>)
Parameters.GoPackage.Description,The go package to build
Parameters.AdminSecurityGroup.Description,"Existing security group that should be granted administrative access (e.g., 'sg-123456')"
Parameters.DnsPrefix.Default,aws
Parameters.DnsZone.Description,Route53-hosted zone to use for the NS record (<prefix>.<zone>)
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'ec2.amazonaws.com']}}]"
Resources.AWS::Route53::RecordSet.Properties.Comment,AWS Name Server
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'53', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'53'}, {u'ToPort': u'53', u'IpProtocol': u'udp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'53'}]"
Parameters.KeyName.Description,Name of an existing EC2 KeyPair to enable SSH access to the instances
Parameters.Ami.Default,ami-acff23c4
Parameters.Ami.Description,The EC2 AMI (64bit HVM-based EBS-backed Ubuntu 14.04 recommended)
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'Ec2DescribeInstances', u'PolicyDocument': {u'Statement': [{u'Action': u'ec2:DescribeInstances', u'Resource': u'*', u'Effect': u'Allow'}]}}]"
Resources.AWS::Route53::RecordSet.Properties.ResourceRecords,"[{u'Fn::GetAtt': [u'NameServer', u'PublicDnsName']}]"
