Parameters.NumberOfTeammates.MinValue,0
Resources.AWS::IAM::Policy.Condition,CreateIamResources
Resources.AWS::IAM::Policy.DependsOn,"[u'ZombieLabLambdaRole', u'CreateIAMUsers']"
Outputs.WriteTalkersToDynamoDBLambdaFunction.Description,This Lambda function is used for writing talkers to the Talkers table.
Resources.AWS::Lambda::Function.Properties.Timeout,10
Resources.AWS::DynamoDB::Table.Properties.KeySchema,"[{u'KeyType': u'HASH', u'AttributeName': u'channel'}, {u'KeyType': u'RANGE', u'AttributeName': u'timestamp'}]"
Resources.AWS::S3::Bucket.Properties.WebsiteConfiguration.IndexDocument,index.html
Resources.Custom::CreateIAMUsers.DependsOn,[u'ZombieLabLambdaRole']
Outputs.IamGroupCreated.Value,"{u'Fn::GetAtt': [u'CreateIAMUsers', u'IamGroup']}"
Parameters.NumberOfTeammates.Description,"How many teammates do you have? Input that here, one for each of your teammates. Don't include yourself"
Outputs.DynamoDBUsersTableName.Description,Table name of the newly created Users DynamoDB table that will contain records about registered users for the app.
Resources.AWS::Lambda::Function.Properties.Handler,index.handler
Outputs.GetTalkersFromDynamoDBLambdaFunction.Description,This Lambda function is used for getting talkers from the Talkers table.
Resources.Custom::CognitoPoolsFunction.Properties.cognitoRoleARN,"{u'Fn::GetAtt': [u'ZombieLabLambdaRole', u'Arn']}"
Resources.Custom::CreateCognitoTrigger.Properties.IamRole,"{u'Fn::GetAtt': [u'ZombieLabLambdaRole', u'Arn']}"
Outputs.DynamoDBGetMessagesLambdaFunction.Description,This Lambda function is used for getting chat messages from the Messages table.
Outputs.MyChatRoomURL.Description,The URL to access your newly created chat.
Resources.AWS::Lambda::Function.Properties.MemorySize,1536
Resources.AWS::Lambda::Function.DependsOn,"[u'TalkersDynamoDBTable', u'ZombieLabLambdaRole']"
Resources.Custom::CreateAPIGateway.Properties.iamrole,"{u'Fn::GetAtt': [u'ZombieLabLambdaRole', u'Arn']}"
Resources.Custom::PutWebsiteFilesInS3.Properties.ServiceToken,"{u'Fn::GetAtt': [u'S3GetFilesFunction', u'Arn']}"
Resources.AWS::IAM::Policy.Properties.PolicyDocument.Statement,"[{u'Action': [u'*'], u'Resource': [u'*'], u'Effect': u'Allow'}, {u'Action': [u'aws-portal:*'], u'Resource': [u'*'], u'Effect': u'Deny'}]"
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Resources.Custom::CreateIAMUsers.Condition,CreateIamResources
Outputs.IamUsersLambdaFunction.Condition,CreateIamResources
Mappings.AllowedRegions.eu-central-1.S3Endpoint,https://s3-eu-central-1
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.ReadCapacityUnits,10
Outputs.IamUsersPassword.Condition,CreateIamResources
Resources.Custom::CreateCognitoTrigger.Properties.ServiceToken,"{u'Fn::GetAtt': [u'CognitoTriggerBuild', u'Arn']}"
Outputs.IamUsersCreated.Description,The IAM users created to be used for group work
Outputs.IamUsersCreated.Condition,CreateIamResources
Outputs.LoginURL.Condition,CreateIamResources
Outputs.IamUsersLambdaFunction.Description,This Lambda function is used for creating additional IAM users in th environment.
Resources.Custom::CognitoPoolsFunction.DependsOn,"[u'S3BucketForWebsiteContent', u'ZombieLabLambdaRole', u'PutWebsiteFilesInS3', u'WriteMessagesToDynamoDB', u'GetMessagesFromDynamoDB', u'MessagesDynamoDBTable']"
Parameters.NumberOfTeammates.MaxValue,10
Outputs.IamUsersCreated.Value,"{u'Fn::GetAtt': [u'CreateIAMUsers', u'Users']}"
Outputs.IamGroupCreated.Description,The IAM group created for the users
Outputs.DynamoDBGetMessageARN.Description,The ARN for the Get Messages Lambda function
Mappings.AllowedRegions.eu-central-1.S3ContentsBucket,aws-zombie-workshop-eu-central-1
Outputs.MyStackRegion.Description,The region where the stack was created.
Outputs.LoginURL.Description,The URL to login to the AWS Management console for the IAM users.
Mappings.AllowedRegions.eu-central-1.CognitoRegion,eu-central-1
Resources.Custom::CognitoPoolsFunction.Properties.constantsFile,S3/assets/js/constants.js
Outputs.Bucket.Description,The S3 bucket which contains the chat web app contents.
Resources.AWS::Lambda::Function.Condition,CreateIamResources
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'root', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u'logs:CreateLogGroup', u'logs:CreateLogStream', u'logs:PutLogEvents'], u'Resource': u'arn:aws:logs:*:*:*', u'Effect': u'Allow'}, {u'Action': [u'cloudformation:*'], u'Resource': [u'*'], u'Effect': u'Allow'}, {u'Action': [u'lambda:*'], u'Resource': [u'*'], u'Effect': u'Allow'}, {u'Action': [u'execute-api:*'], u'Resource': [u'*'], u'Effect': u'Allow'}, {u'Action': [u'dynamodb:*'], u'Resource': [u'*'], u'Effect': u'Allow'}, {u'Action': [u'kinesis:*'], u'Resource': [u'*'], u'Effect': u'Allow'}, {u'Action': [u'es:*'], u'Resource': [u'*'], u'Effect': u'Allow'}, {u'Action': [u's3:*'], u'Resource': [u'*'], u'Effect': u'Allow'}, {u'Action': [u'apigateway:*'], u'Resource': [u'*', u'arn:aws:apigateway:*::/*'], u'Effect': u'Allow'}, {u'Action': [u'mobileanalytics:PutEvents', u'cognito-sync:*', u'cognito-identity:*', u'cognito-idp:*'], u'Resource': [u'*'], u'Effect': u'Allow'}, {u'Action': [u'iam:*'], u'Resource': [u'*'], u'Effect': u'Allow'}]}}]"
Resources.Custom::CreateIAMUsers.Properties.ServiceToken,"{u'Fn::GetAtt': [u'IamUsersFunction', u'Arn']}"
Outputs.DynamoDBWriteMessagesARN.Value,"{u'Fn::GetAtt': [u'WriteMessagesToDynamoDB', u'Arn']}"
Resources.Custom::PutWebsiteFilesInS3.DependsOn,"[u'ZombieLabLambdaRole', u'S3BucketForWebsiteContent']"
Resources.AWS::Lambda::Function.Properties.Runtime,nodejs4.3
Outputs.ApiID.Description,The unique ID for your API Gateway API.
Resources.AWS::IAM::Policy.Properties.Groups,"[{u'Fn::GetAtt': [u'CreateIAMUsers', u'IamGroup']}]"
Outputs.DynamoDBWriteMessagesLambdaFunction.Description,This Lambda function is used for writing chat messages to the Messages table.
Outputs.IamUsersFunctionARN.Value,"{u'Fn::GetAtt': [u'IamUsersFunction', u'Arn']}"
Resources.AWS::S3::Bucket.Properties.WebsiteConfiguration.ErrorDocument,error.html
Outputs.IamUsersFunctionARN.Description,The ARN for the Lambda function that creates additional IAM users.
Resources.Custom::CognitoPoolsFunction.Properties.ServiceToken,"{u'Fn::GetAtt': [u'CognitoPoolsFunction', u'Arn']}"
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole', u'sts:AssumeRoleWithWebIdentity'], u'Effect': u'Allow', u'Principal': {u'Federated': u'cognito-identity.amazonaws.com', u'Service': [u'lambda.amazonaws.com', u'apigateway.amazonaws.com']}}]"
Outputs.DynamoDBUsersPhoneIndex.Description,Name of the Phone index associated with the newly created Users DynamoDB table.
Resources.AWS::Lambda::Function.Properties.Code.S3Key,ZombieGetMessages.zip
Resources.AWS::DynamoDB::Table.Properties.AttributeDefinitions,"[{u'AttributeName': u'channel', u'AttributeType': u'S'}, {u'AttributeName': u'timestamp', u'AttributeType': u'N'}]"
Parameters.NumberOfTeammates.Default,0
Resources.Custom::CreateCognitoTrigger.DependsOn,"[u'S3BucketForWebsiteContent', u'ZombieLabLambdaRole', u'PutWebsiteFilesInS3', u'WriteMessagesToDynamoDB', u'GetMessagesFromDynamoDB', u'MessagesDynamoDBTable']"
Outputs.DynamoDBMessagesTableName.Description,Table name of the newly created Messages DynamoDB table that will contain chat messages.
Outputs.IamUsersFunctionARN.Condition,CreateIamResources
Outputs.IamUsersPassword.Value,"{u'Fn::GetAtt': [u'CreateIAMUsers', u'IamPassword']}"
Outputs.DynamoDBGetMessageARN.Value,"{u'Fn::GetAtt': [u'GetMessagesFromDynamoDB', u'Arn']}"
Resources.AWS::IAM::Role.Properties.Path,/
Resources.Custom::CreateAPIGateway.Properties.ServiceToken,"{u'Fn::GetAtt': [u'APIGatewayFunction', u'Arn']}"
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.WriteCapacityUnits,10
Resources.Custom::CreateAPIGateway.Properties.s3key,S3/assets/js/constants.js
Resources.Custom::CreateAPIGateway.DependsOn,"[u'S3BucketForWebsiteContent', u'ZombieLabLambdaRole', u'PutWebsiteFilesInS3', u'WriteMessagesToDynamoDB', u'GetMessagesFromDynamoDB', u'MessagesDynamoDBTable']"
Outputs.ApiID.Value,"{u'Fn::GetAtt': [u'CreateAPIGateway', u'RestApiID']}"
Outputs.DynamoDBUsersSlackIndex.Description,Name of the Slack index associated with the newly created Users DynamoDB table.
Outputs.IamGroupCreated.Condition,CreateIamResources
Outputs.DynamoDBWriteMessagesARN.Description,The ARN for the Write Messages Lambda function
Resources.AWS::IAM::Policy.Properties.PolicyName,ZombieLabUserPolicy
Outputs.IamUsersPassword.Description,The password for your IAM users
Resources.AWS::Lambda::Function.Properties.Role,"{u'Fn::GetAtt': [u'ZombieLabLambdaRole', u'Arn']}"
Resources.AWS::S3::Bucket.Properties.AccessControl,PublicRead
Outputs.DynamoDBTalkersTableName.Description,Table name of the newly created Talkers DynamoDB table that will contain metadata about survivors who are typing.
Outputs.BucketCopiedContentsFrom.Description,This is the local region AWS bucket where your files were copied from.
Resources.AWS::S3::Bucket.DependsOn,ZombieLabLambdaRole
