Resources.AWS::S3::Bucket.DeletionPolicy,Retain
Resources.AWS::Lambda::Function.Properties.Description,Supports Cloud Canvas Resource Manager project operations.
Resources.Custom::AccessControl.DependsOn,"[u'CloudGemPortal', u'CloudGemPortalBucketPolicy', u'CloudGemPortalAdministratorRole', u'CloudGemPortalUserAccess', u'CloudGemPortalUserRole', u'Configuration', u'ConfigurationBucketPolicy', u'CoreResourceTypes', u'Logs', u'Helper', u'PlayerAccessTokenExchange', u'PlayerAccessTokenExchangeExecution', u'ProjectAccess', u'ProjectAdmin', u'ProjectAdminRestrictions', u'ProjectIdentityPool', u'ProjectIdentityPoolAuthenticatedRole', u'ProjectIdentityPoolUnauthenticatedRole', u'ProjectOwner', u'ProjectOwnerAccess', u'ProjectResourceHandler', u'ProjectResourceHandlerExecution', u'ProjectUserPool', u'ServiceApi', u'ServiceLambda', u'SeviceLambdaConfiguration', u'ServiceLambdaExecution']"
Resources.AWS::Lambda::Function.Properties.Timeout,30
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::InterfaceDependencyResolver.HandlerFunction.Function,InterfaceDependencyResolver.handler
Resources.AWS::Lambda::Function.Metadata.CloudCanvas.Permissions.Action,lambda:InvokeFunction
Resources.Custom::CognitoIdentityPool.Metadata.CloudCanvas.Identities,"[{u'ClientApp': u'CloudGemPortalApp', u'IdentityPoolLogicalName': u'ProjectIdentityPool'}]"
Resources.AWS::Lambda::Function.Properties.Handler,cgf_lambda_service.dispatch
Outputs.ServiceUrl.Description,The service url.
Resources.AWS::Lambda::Function.Properties.Code.S3Bucket,"{u'Fn::GetAtt': [u'ServiceLambdaConfiguration', u'ConfigurationBucket']}"
Resources.Custom::ResourceTypes.Properties.Definitions.AWS::DynamoDB::Table.ArnFormat,arn:aws:dynamodb:{region}:{account_id}:table/{resource_name}
Resources.Custom::CognitoIdentityPool.Properties.Roles.unauthenticated,"{u'Fn::GetAtt': [u'ProjectIdentityPoolUnauthenticatedRole', u'Arn']}"
Resources.Custom::CognitoIdentityPool.Properties.IdentityPoolName,ProjectIdentityPool
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::DynamoDBTable.HandlerFunction.Function,Custom_SafeTable.handler
Resources.AWS::Lambda::Function.Properties.MemorySize,1024
Resources.Custom::CognitoUserPool.Properties.ClientApps,[u'CloudGemPortalApp']
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Resources.AWS::S3::Bucket.Properties.CorsConfiguration.CorsRules,"[{u'AllowedHeaders': [u'x-amz-date', u'x-amz-user-agent', u'authorization', u'x-amz-security-token', u'x-amz-content-sha256'], u'MaxAge': 3000, u'AllowedMethods': [u'GET'], u'Id': u'CGP_CORS_Policy', u'AllowedOrigins': [u'*']}]"
Parameters.CloudGemPortalTableWriteCapacityUnits.Default,1
Resources.Custom::ResourceTypes.Properties.LambdaTimeout,300
Parameters.CloudGemPortalTableWriteCapacityUnits.Description,Number of writes per second.
Resources.AWS::IAM::ManagedPolicy.Properties.Roles,"[{u'Fn::GetAtt': [u'ServiceLambdaConfiguration', u'RoleName']}]"
Resources.Custom::ResourceTypes.Properties.ServiceToken,"{u'Fn::GetAtt': [u'ProjectResourceHandler', u'Arn']}"
Resources.Custom::ResourceTypes.Properties.Definitions.AWS::Lambda::Function.ArnFormat,arn:aws:lambda:{region}:{account_id}:function:{resource_name}
Resources.AWS::IAM::ManagedPolicy.Properties.PolicyDocument.Version,2012-10-17
Resources.Custom::CognitoUserPool.Properties.AllowAdminCreateUserOnly,true
Resources.AWS::S3::Bucket.Properties.LoggingConfiguration.LogFilePrefix,CloudGemPortal/
Resources.Custom::LambdaConfiguration.Properties.Runtime,python2.7
Resources.Custom::CognitoUserPool.Metadata.CloudCanvas.Identities,"[{u'ClientApp': u'CloudGemPortalApp', u'IdentityPoolLogicalName': u'ProjectIdentityPool'}]"
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::ResourceGroupConfiguration.HandlerFunction.Function,Custom_ResourceGroupConfiguration.handler
Resources.AWS::S3::Bucket.Properties.VersioningConfiguration.Status,Enabled
Outputs.ServiceUrl.Value,"{u'Fn::GetAtt': [u'ServiceApi', u'Url']}"
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::ResourceGroupConfiguration.ArnFormat,*
Resources.Custom::CognitoIdentityPool.Properties.AllowUnauthenticatedIdentities,true
Resources.AWS::Lambda::Function.Metadata.CloudCanvas.Permissions.AbstractRole,ServiceApi
Resources.Custom::ResourceTypes.Properties.Definitions.AWS::S3::Bucket.ArnFormat,arn:aws:s3:::{resource_name}
Parameters.CloudGemPortalTableReadCapacityUnits.Description,Number of reads per second.
Resources.Custom::ServiceApi.DependsOn,[u'CoreResourceTypes']
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::CognitoUserPool.HandlerFunction.Function,Custom_CognitoUserPool.handler
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::ServiceApi.HandlerFunction.Function,Custom_ServiceApi.handler
Resources.Custom::CognitoIdentityPool.Properties.UseAuthSettingsObject,false
Resources.Custom::ResourceTypes.Properties.Definitions.AWS::SNS::Topic.ArnFormat,arn:aws:sns:{region}:{account_id}:{resource_name}
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::EmptyDeployment.HandlerFunction.Function,Custom_EmptyDeployment.handler
Resources.Custom::CognitoUserPool.Metadata.CloudCanvas.Permissions,"[{u'Action': [u'cognito-idp:AdminAddUserToGroup', u'cognito-idp:AdminCreateUser', u'cognito-idp:AdminDeleteUser', u'cognito-idp:AdminGetUser', u'cognito-idp:AdminListGroupsForUser', u'cognito-idp:AdminResetUserPassword', u'cognito-idp:ListUsers', u'cognito-idp:ListUsersInGroup'], u'AbstractRole': u'CloudGemPortalAdministratorRole'}]"
Resources.Custom::CognitoUserPool.Properties.PoolName,ProjectUserPool
Resources.Custom::ServiceApi.Properties.SwaggerSettings.ServiceLambdaArn,"{u'Fn::GetAtt': [u'ServiceLambda', u'Arn']}"
Parameters.CloudCanvasStack.Description,Identifies this stack as a Lumberyard Cloud Canvas managed stack.
Resources.Custom::ResourceTypes.Properties.Definitions.AWS::RDS::DBInstance.ArnFormat,arn:aws:rds:{region}:{account_id}:db:{resource_name}
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::DynamoDBTable.ArnFormat,arn:aws:dynamodb:{region}:{account_id}:table/{resource_name}
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::Helper.ArnFormat,*
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::EmptyDeployment.ArnFormat,*
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': u'sts:AssumeRole', u'Effect': u'Allow', u'Principal': {u'Service': u'lambda.amazonaws.com'}}]"
Resources.Custom::ResourceTypes.Properties.Definitions.AWS::SQS::Queue.ArnFunction.Function,AWS_SQS_Queue.arn_handler
Resources.Custom::CognitoIdentityPool.Properties.RoleMappings.Cognito.AmbiguousRoleResolution,AuthenticatedRole
Parameters.CloudCanvasStack.Default,Project
Resources.Custom::ResourceTypes.Properties.LambdaConfiguration,"{u'Fn::GetAtt': [u'ServiceLambdaConfiguration', u'ComposedLambdaConfiguration']}"
Resources.AWS::S3::BucketPolicy.Properties.PolicyDocument.Version,2012-10-17
Parameters.ServiceApiCacheClusterSize.Description,Indicates whether cache clustering is enabled for the service API.
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::ServiceApi.PermissionMetadata.DefaultRoleMappings,"[{u'Action': u'execute-api:*', u'ResourceSuffix': u'/*', u'AbstractRole': [u'DeploymentAdmin', u'ProjectAdmin']}]"
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::InterfaceDependencyResolver.ArnFormat,*
Parameters.CloudGemPortalTableReadCapacityUnits.Default,1
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::CognitoUserPool.ArnFormat,arn:aws:cognito-idp:{region}:{account_id}:userpool/{resource_name}
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::AccessControl.ArnFormat,*
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::ServiceApi.ArnFunction.Function,Custom_ServiceApi.arn_handler
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::Helper.HandlerFunction.Function,Custom_Helper.handler
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::CognitoIdentityPool.ArnFormat,*
Resources.Custom::CognitoIdentityPool.DependsOn,"[u'ProjectUserPool', u'CoreResourceTypes']"
Resources.AWS::IAM::Role.Metadata.CloudCanvas.RoleMappings,[]
Resources.Custom::LambdaConfiguration.Properties.FunctionName,ServiceLambda
Resources.AWS::Lambda::Function.Properties.Code.S3Key,"{u'Fn::GetAtt': [u'ServiceLambdaConfiguration', u'ConfigurationKey']}"
Parameters.ServiceApiCacheClusterEnabled.Default,false
Resources.Custom::CognitoUserPool.DependsOn,[u'CoreResourceTypes']
Parameters.ServiceApiCacheClusterEnabled.Description,Indicates whether cache clustering is enabled for the service API.
Metadata.CloudCanvas.Id,$Revision: #1 $
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::CognitoIdentityPool.HandlerFunction.Function,Custom_CognitoIdentityPool.handler
Resources.Custom::CognitoUserPool.Properties.Groups,"[{u'Role': {u'Fn::GetAtt': [u'CloudGemPortalAdministratorRole', u'Arn']}, u'Name': u'administrator', u'Precedence': u'0', u'Description': u'The Cloud Gem Portal administrators group.'}, {u'Role': {u'Fn::GetAtt': [u'CloudGemPortalUserRole', u'Arn']}, u'Name': u'user', u'Precedence': u'10', u'Description': u'The Cloud Gem Portal users group.'}]"
Resources.Custom::Helper.DependsOn,[u'CoreResourceTypes']
Resources.AWS::Lambda::Function.Properties.Runtime,"{u'Fn::GetAtt': [u'ServiceLambdaConfiguration', u'Runtime']}"
Resources.AWS::Lambda::Function.Properties.Role,"{u'Fn::GetAtt': [u'ServiceLambdaConfiguration', u'Role']}"
Resources.AWS::S3::Bucket.Properties.AccessControl,LogDeliveryWrite
Resources.Custom::CognitoIdentityPool.Properties.Roles.authenticated,"{u'Fn::GetAtt': [u'ProjectIdentityPoolAuthenticatedRole', u'Arn']}"
Resources.Custom::ResourceTypes.Properties.Definitions.Custom::AccessControl.HandlerFunction.Function,Custom_AccessControl.handler
Parameters.ConfigurationKey.Description,Location in the configuration bucket of configuration data.
Resources.AWS::S3::Bucket.Properties.LifecycleConfiguration.Rules,"[{u'Status': u'Enabled', u'Id': u'DeleteOldLogs', u'ExpirationInDays': 14}]"
Parameters.ServiceApiCacheClusterSize.Default,0.5
