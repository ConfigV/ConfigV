Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,-1
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Resources.AWS::EC2::Subnet.Properties.CidrBlock,10.0.0.0/24
Resources.AWS::EC2::Route.Properties.NatGatewayId,{u'Ref': u'NAT'}
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Security Group for Private Subnet
Resources.AWS::EC2::NatGateway.Properties.SubnetId,{u'Ref': u'SubnetB'}
Resources.AWS::EC2::DHCPOptions.Properties.DomainName,ec2.internal
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,true
Resources.AWS::EC2::SecurityGroupEgress.Properties.GroupId,{u'Ref': u'SecurityGroupA'}
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Resources.AWS::EC2::VPCGatewayAttachment.Properties.InternetGatewayId,{u'Ref': u'IGW'}
Resources.AWS::EC2::NatGateway.Properties.AllocationId,"{u'Fn::GetAtt': [u'EIP', u'AllocationId']}"
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.NetworkAclId,{u'Ref': u'NetworkAcl'}
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,us-east-1a
Resources.AWS::EC2::SecurityGroupIngress.Properties.IpProtocol,tcp
Resources.AWS::EC2::DHCPOptions.Properties.DomainNameServers,[u'AmazonProvidedDNS']
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,100
Resources.AWS::EC2::NetworkAcl.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::VPCDHCPOptionsAssociation.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::SecurityGroupIngress.Properties.SourceSecurityGroupOwnerId,361692773709
Resources.AWS::EC2::SecurityGroupIngress.Properties.ToPort,80
Resources.AWS::EC2::SecurityGroup.Properties.Tags,"[{u'Value': u'Private SG', u'Key': u'Name'}]"
Resources.AWS::EC2::SecurityGroupIngress.Properties.GroupId,{u'Ref': u'SecurityGroupB'}
Resources.AWS::EC2::VPCDHCPOptionsAssociation.Properties.DhcpOptionsId,{u'Ref': u'DHCPOptions'}
Resources.AWS::EC2::SecurityGroupIngress.Properties.SourceSecurityGroupId,{u'Ref': u'SecurityGroupB'}
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': u'VPC2', u'Key': u'Name'}]"
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': u'Public Route', u'Key': u'Name'}]"
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': u'Private Subnet', u'Key': u'Name'}]"
Resources.AWS::EC2::VPC.Properties.InstanceTenancy,default
Resources.AWS::EC2::InternetGateway.Properties.Tags,"[{u'Value': u'myIGW', u'Key': u'Name'}]"
Resources.AWS::EC2::SecurityGroupIngress.Properties.FromPort,80
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,{u'Ref': u'SubnetB'}
Resources.AWS::EC2::Subnet.Properties.MapPublicIpOnLaunch,false
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.SubnetId,{u'Ref': u'SubnetA'}
Resources.AWS::EC2::Route.Properties.RouteTableId,{u'Ref': u'RouteTableA'}
Resources.AWS::EC2::SecurityGroupIngress.Properties.CidrIp,0.0.0.0/0
Resources.AWS::EC2::Route.DependsOn,VPCGatewayAttachment
Resources.AWS::EC2::SecurityGroupEgress.Properties.IpProtocol,-1
Resources.AWS::EC2::EIP.Properties.Domain,vpc
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,{u'Ref': u'RouteTableB'}
Resources.AWS::EC2::RouteTable.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::SecurityGroup.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::NetworkAclEntry.Properties.NetworkAclId,{u'Ref': u'NetworkAcl'}
Resources.AWS::EC2::NatGateway.DependsOn,VPCGatewayAttachment
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Resources.AWS::EC2::Route.Properties.GatewayId,{u'Ref': u'IGW'}
Resources.AWS::EC2::VPC.Properties.CidrBlock,10.0.0.0/16
Resources.AWS::EC2::SecurityGroupEgress.Properties.CidrIp,0.0.0.0/0
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpcId,{u'Ref': u'VPC'}
