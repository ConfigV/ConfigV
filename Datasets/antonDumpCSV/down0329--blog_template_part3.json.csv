Resources.AWS::IAM::InstanceProfile.Properties.Path,/
Resources.AWS::Lambda::Function.Properties.Runtime,python2.7
Resources.AWS::IAM::Policy.DependsOn,[u'DevSecOpsLambdaRole']
Parameters.CodeBuildProject.Description,CodeBuildProject name
Resources.AWS::Lambda::Function.Properties.Description,Always return success
Parameters.LambdaS3Key.Description,"The file name of the source artifact of the Lambda code, such as myfolder/myartifact.zip"
Resources.AWS::Lambda::Function.Properties.Timeout,300
Resources.AWS::IAM::Role.Properties.Path,/
Resources.AWS::CodePipeline::Pipeline.DependsOn,"[u'AutomationExecuteDocument', u'InstanceRoleInstanceProfile', u'PipelineS3Bucket']"
Parameters.RepositoryBranch.Default,master
Parameters.CodeCommitRepo.Default,devsecopspart1
Parameters.ElasticLoadBalancer.Description,ElasticLoadBalancer name
Resources.AWS::Lambda::Function.Properties.Handler,AutomationExecuteDocument.lambda_handler
Parameters.RepositoryBranch.AllowedPattern,[\x20-\x7E]*
Parameters.CodeDeploymentGroup.Description,CodeDeploymentGroup name
Parameters.CodeDeployApplication.Description,CodeDeployApplication name
Parameters.SSMAutomationDocument.Description,SSMAutomationDocument name
Resources.AWS::Lambda::Function.Properties.FunctionName,AutomationExecuteDocument
Parameters.LambdaS3Bucket.Default,devsecopsblog
Parameters.RepositoryBranch.Description,The name of the branch for the CodeCommit repo
Resources.AWS::Lambda::Function.DependsOn,"[u'DevSecOpsLambdaRole', u'LambdaExecutionPolicy']"
Parameters.CodeCommitRepo.Description,Code commit repo name
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'lambda.amazonaws.com']}}]"
Resources.AWS::IAM::Policy.Properties.PolicyDocument.Version,2012-10-17
Parameters.CodeBuildProject.Default,devsecopspart1
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Parameters.RepositoryBranch.ConstraintDescription,Can contain only ASCII characters.
Parameters.LambdaS3Key.Default,devsecops-part3.zip
Parameters.LambdaS3Bucket.Description,"The name of the S3 bucket that contains the source artifact, which must be in the same region as this stack"
Resources.AWS::IAM::Policy.Properties.PolicyDocument.Statement,"[{u'Action': [u'ec2:*', u'codedeploy:*', u'autoscaling:Describe*', u'cloudformation:Describe*', u'cloudformation:GetTemplate', u's3:Get*', u's3:List*'], u'Resource': u'*', u'Effect': u'Allow'}]"
Resources.AWS::IAM::Policy.Properties.PolicyName,InstanceRole
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'codepipeline-service', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u'codecommit:GetBranch', u'codecommit:GetCommit', u'codecommit:UploadArchive', u'codecommit:GetUploadArchiveStatus', u'codecommit:CancelUploadArchive', u'codebuild:*'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u's3:GetObject', u's3:GetObjectVersion', u's3:GetBucketVersioning'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u's3:PutObject'], u'Resource': [u'arn:aws:s3:::codepipeline*', u'arn:aws:s3:::elasticbeanstalk*'], u'Effect': u'Allow'}, {u'Action': [u'codedeploy:CreateDeployment', u'codedeploy:GetApplicationRevision', u'codedeploy:GetDeployment', u'codedeploy:GetDeploymentConfig', u'codedeploy:RegisterApplicationRevision'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u'elasticbeanstalk:*', u'ec2:*', u'elasticloadbalancing:*', u'autoscaling:*', u'cloudwatch:*', u's3:*', u'sns:*', u'cloudformation:*', u'rds:*', u'sqs:*', u'ecs:*', u'iam:PassRole'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u'lambda:InvokeFunction', u'lambda:ListFunctions'], u'Resource': u'*', u'Effect': u'Allow'}]}}]"
Resources.AWS::Lambda::Function.Properties.Role,"{u'Fn::GetAtt': [u'DevSecOpsLambdaRole', u'Arn']}"
