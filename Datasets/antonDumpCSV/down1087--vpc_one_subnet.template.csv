Resources.AWS::EC2::VPC.Properties.CidrBlock,192.168.0.0/16
Parameters.KeyName.MinLength,1
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,{u'Ref': u'VPC'}
Outputs.PublicSubnetID.Description,Public subnet ID
Resources.AWS::EC2::Subnet.Properties.CidrBlock,192.168.1.0/24
Parameters.SSHFrom.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Parameters.SSHFrom.MaxLength,18
Parameters.KeyName.ConstraintDescription,"can contain only alphanumeric characters, spaces, dashes and underscores."
Parameters.SSHFrom.ConstraintDescription,must be a valid CIDR range of the form x.x.x.x/x.
Outputs.PublicSubnetID.Value,{u'Ref': u'PublicSubnet'}
Resources.AWS::EC2::VPCGatewayAttachment.Properties.InternetGatewayId,{u'Ref': u'InternetGateway'}
Parameters.KeyName.MaxLength,64
Parameters.SSHFrom.Default,0.0.0.0/0
Resources.AWS::EC2::Route.Properties.GatewayId,{u'Ref': u'InternetGateway'}
Outputs.VpcID.Description,VPC ID of newly created VPC
Outputs.VpcID.Value,{u'Ref': u'VPC'}
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'Public', u'Key': u'Network'}]"
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'Public', u'Key': u'Network'}]"
Parameters.SSHFrom.MinLength,9
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,{u'Ref': u'PublicRouteTable'}
Resources.AWS::EC2::InternetGateway.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'Public', u'Key': u'Network'}]"
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,True
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Name'}, {u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Application'}, {u'Value': u'Public', u'Key': u'Network'}]"
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,{u'Ref': u'PublicSubnet'}
Parameters.KeyName.Description,Name of an existing EC2 KeyPair to enable SSH access to the instances
Resources.AWS::EC2::Route.Properties.RouteTableId,{u'Ref': u'PublicRouteTable'}
Resources.AWS::EC2::RouteTable.Properties.VpcId,{u'Ref': u'VPC'}
Parameters.KeyName.AllowedPattern,[-_ a-zA-Z0-9]*
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,True
Parameters.SSHFrom.Description,Lockdown SSH access to NAT instance (default can be accessed from anywhere)
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpcId,{u'Ref': u'VPC'}
