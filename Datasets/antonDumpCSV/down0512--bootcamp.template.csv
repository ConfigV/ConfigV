Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupEgress,"[{u'IpProtocol': u'-1', u'CidrIp': u'0.0.0.0/0'}]"
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': u'private-route-table', u'Key': u'Name'}]"
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Resources.AWS::EC2::Subnet.Properties.CidrBlock,10.100.40.0/24
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Security group for the RDS instances
Resources.AWS::EC2::Instance.Properties.KeyName,webserver
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Listeners,"[{u'InstancePort': u'80', u'LoadBalancerPort': u'80', u'Protocol': u'HTTP'}]"
Resources.AWS::EC2::Instance.Properties.ImageId,ami-8fcee4e5
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Timeout,5
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Interval,30
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,us-east-1c
Resources.AWS::EC2::VPC.Properties.CidrBlock,10.100.0.0/16
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': u'private-subnet-us-east-1c', u'Key': u'Name'}]"
Resources.AWS::EC2::VPC.Properties.InstanceTenancy,default
Resources.AWS::EC2::InternetGateway.Properties.Tags,"[{u'Value': u'bootcamp-igw', u'Key': u'Name'}]"
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': u'AWS Bootcamp', u'Key': u'Name'}]"
Resources.AWS::EC2::Subnet.Properties.MapPublicIpOnLaunch,false
Resources.AWS::EC2::Route.DependsOn,igw
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.CrossZone,true
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Target,TCP:80
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.UnhealthyThreshold,5
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.HealthyThreshold,3
