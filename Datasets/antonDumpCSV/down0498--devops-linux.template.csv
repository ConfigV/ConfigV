Resources.AWS::IAM::InstanceProfile.Properties.Path,/
Parameters.AdminCidr.Default,0.0.0.0/0
Outputs.DevOpsServerLinuxIp.Value,"{u'Fn::GetAtt': [u'DevOpsInstance', u'PublicIp']}"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.packages.yum.jq,[]
Parameters.AdminCidr.Type,String
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,SSH access on port 22
Resources.AWS::EC2::Instance.Properties.KeyName,{u'Ref': u'KeyName'}
Outputs.DevOpsServerLinuxDns.Description,DNS Name of the newly created DevOps Linux instance
Resources.AWS::CloudFormation::WaitCondition.DependsOn,DevOpsInstance
Resources.AWS::CloudFormation::WaitConditionHandle.Type,AWS::CloudFormation::WaitConditionHandle
Parameters.AdminCidr.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::IAM::Role.Properties.Path,/
Resources.AWS::CloudFormation::WaitCondition.Type,AWS::CloudFormation::WaitCondition
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Resources.AWS::EC2::Instance.Properties.UserData,"{u'Fn::Base64': {u'Fn::Join': [u'', [u'#!/bin/bash\n', u'# Apply updates cfn-init bootstrapper helper scripts\n', u'yum update -y aws-cfn-bootstrap\n', u'/opt/aws/bin/cfn-init -s ', {u'Ref': u'AWS::StackName'}, u' -r DevOpsInstance --region ', {u'Ref': u'AWS::Region'}, u"" || echo 'Failed to run cfn-init'\n"", u""/opt/aws/bin/cfn-signal -e $? '"", {u'Ref': u'WaitHandle'}, u""'\n""]]}}"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.packages.yum.java-1.7.0-openjdk,[]
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.packages.yum.mysql55,[]
Outputs.DevOpsServerLinuxDns.Value,"{u'Fn::GetAtt': [u'DevOpsInstance', u'PublicDnsName']}"
Parameters.ImageId.Type,String
Resources.AWS::EC2::Instance.Properties.SecurityGroups,[{u'Ref': u'AdminSecurityGroup'}]
Resources.AWS::CloudFormation::WaitCondition.Properties.Handle,{u'Ref': u'WaitHandle'}
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.packages.rubygems.cloudformation-ruby-dsl,[]
Resources.AWS::IAM::InstanceProfile.Type,AWS::IAM::InstanceProfile
Parameters.ImageId.ConstraintDescription,AMI Id needs to start with ami-
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'ec2.amazonaws.com']}}]"
Resources.AWS::EC2::Instance.Type,AWS::EC2::Instance
Parameters.AdminCidr.Description,CIDR block who can access Development Server instance via admin tools
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.packages.yum.git,[]
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'22', u'FromPort': u'22', u'IpProtocol': u'tcp', u'CidrIp': {u'Ref': u'AdminCidr'}}]"
Parameters.AdminCidr.ConstraintDescription,CIDR block address must be in the form n.n.n.n/m
Parameters.KeyName.Description,Name of an existing EC2 KeyPair to enable remote access to the development server
Resources.AWS::CloudFormation::WaitCondition.Properties.Timeout,1500
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.packages.rubygems.bundler,[]
Resources.AWS::EC2::Instance.Properties.IamInstanceProfile,{u'Ref': u'AdminInstanceProfile'}
Parameters.ImageId.AllowedPattern,^(?:ami-[0-9a-f]{8})$
Parameters.ImageId.Description,AMI ID to be used for instance deployment
Resources.AWS::EC2::SecurityGroup.Type,AWS::EC2::SecurityGroup
Parameters.KeyName.Type,AWS::EC2::KeyPair::KeyName
Resources.AWS::EC2::Instance.Properties.ImageId,{u'Ref': u'ImageId'}
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'admin', u'PolicyDocument': {u'Statement': [{u'Action': u'*', u'Resource': u'*', u'Effect': u'Allow'}]}}]"
Resources.AWS::EC2::Instance.Properties.Tags,"[{u'Value': u'Linux DevOps Instance', u'Key': u'Name'}]"
Outputs.DevOpsServerLinuxIp.Description,Public IP of the newly created DevOps Linux instance
Resources.AWS::IAM::InstanceProfile.Properties.Roles,[{u'Ref': u'AdminRole'}]
