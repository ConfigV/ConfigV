Parameters.SplunkLicensePath.Description,Path to license file in S3 Bucket
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./etc/chef/client-attribs.json.owner,chef
Parameters.ResourceName.AllowedPattern,[a-zA-Z][a-zA-Z0-9]*
Parameters.ResourceName.Description,The Logical Resource Name - commonly set by parent stack
Outputs.PublicIp.Condition,AssociatePublicIpAddress
Resources.AWS::IAM::User.Properties.Path,/
Parameters.KeyName.ConstraintDescription,"can contain only alphanumeric characters, spaces, dashes and underscores."
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./etc/chef/client-attribs.json.mode,000644
Parameters.KeyName.MaxLength,64
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./etc/splunk/enterprise.license.mode,000644
Resources.AWS::IAM::User.Properties.Policies,"[{u'PolicyName': u'root', u'PolicyDocument': {u'Statement': [{u'Action': [u'cloudformation:DescribeStackResource', u's3:GetObject'], u'Resource': u'*', u'Effect': u'Allow'}]}}]"
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'22', u'IpProtocol': u'tcp', u'CidrIp': u'192.168.0.0/16', u'FromPort': u'22'}, {u'ToPort': u'80', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'80'}, {u'ToPort': u'8089', u'IpProtocol': u'tcp', u'CidrIp': u'192.168.0.0/16', u'FromPort': u'8089'}, {u'ToPort': u'9997', u'IpProtocol': u'tcp', u'CidrIp': u'192.168.0.0/16', u'FromPort': u'9997'}, {u'ToPort': u'9887', u'IpProtocol': u'tcp', u'CidrIp': u'192.168.0.0/16', u'FromPort': u'9887'}]"
Resources.AWS::CloudFormation::WaitCondition.Properties.Timeout,1200
Parameters.AssociatePublicIP.AllowedValues,"[u'yes', u'no']"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./etc/chef/client-attribs.json.group,root
Parameters.SplunkLicenseBucket.Description,Name of private S3 bucket with licenses to be accessed via authenticated requests
Parameters.AssociatePublicIP.Default,yes
Parameters.ChefServerIP.Description,Chef-server IP or hostname
Parameters.AssociatePublicIP.ConstraintDescription,must be 'yes' or 'no'
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./etc/splunk/enterprise.license.group,root
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./etc/splunk/enterprise.license.owner,root
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Authentication.S3AccessCreds.secretKey,"{u'Fn::GetAtt': [u'CfnKeys', u'SecretAccessKey']}"
Parameters.AssociatePublicIP.Description,Indicates whether the server receives a public IP address
Outputs.PublicIp.Description,Public IP address of instance
Outputs.InstanceID.Description,Splunk Server Instance ID
Parameters.ResourceName.MinLength,1
Outputs.PrivateIp.Value,"{u'Fn::GetAtt': [u'SplunkServerHost', u'PrivateIp']}"
Resources.AWS::S3::BucketPolicy.Properties.PolicyDocument.Id,MyPolicy
Parameters.ResourceName.MaxLength,128
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,"Enable SSH access via port 22, HTTP access via port 80, and Splunk ports 8089, 9997 & 9887 respectively for management, receiving, and replication"
Parameters.KeyName.MinLength,1
Resources.AWS::CloudFormation::WaitCondition.DependsOn,SplunkServerHost
Parameters.VpcId.Description,VpcId of your existing Virtual Private Cloud (VPC)
Parameters.SubnetId.Default,subnet-
Parameters.KeyName.Description,Name of an existing EC2 KeyPair to enable SSH access to the instances (use bastion KeyPair if available)
Resources.AWS::S3::BucketPolicy.Properties.PolicyDocument.Version,2008-10-17
Outputs.PublicIp.Value,"{u'Fn::GetAtt': [u'SplunkServerHost', u'PublicIp']}"
Parameters.VpcId.Default,vpc-
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Authentication.S3AccessCreds.type,S3
Mappings.AWSRegionArch2AMI.eu-central-1.64HVM,ami-a8221fb5
Outputs.PrivateIp.Description,Private IP address of instance
Parameters.SplunkRole.MaxLength,64
Parameters.SplunkRole.Description,Chef Splunk role to assign to this instance
Resources.AWS::EC2::Instance.DependsOn,BucketPolicy
Parameters.SplunkRole.AllowedValues,"[u'Splunk-server', u'Splunk-indexer', u'Splunk-searcher', u'cluster-master', u'cluster-peer', u'cluster-search-head']"
Parameters.SplunkRole.MinLength,1
Parameters.SplunkRole.ConstraintDescription,must be a valid Chef role for Splunk.
Parameters.KeyName.AllowedPattern,[-_ a-zA-Z0-9]*
Parameters.SubnetId.Description,SubnetId of an existing Public or Private subnet in your Virtual Private Cloud (VPC)
