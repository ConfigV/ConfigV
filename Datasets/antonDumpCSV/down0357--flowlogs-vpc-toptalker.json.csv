Resources.AWS::Kinesis::Stream.Properties.ShardCount,"{u'Fn::FindInMap': [u'Defaults', u'Stream', u'ShardCount']}"
Mappings.Defaults.LogGroup.RetentionInDays,1
Resources.AWS::S3::Bucket.DeletionPolicy,Retain
Resources.AWS::Logs::LogGroup.Properties.RetentionInDays,"{u'Fn::FindInMap': [u'Defaults', u'LogGroup', u'RetentionInDays']}"
Resources.AWS::Lambda::EventSourceMapping.Properties.EventSourceArn,"{u'Fn::GetAtt': [u'LogStream', u'Arn']}"
Resources.AWS::Lambda::EventSourceMapping.Properties.Enabled,True
Resources.AWS::Lambda::Function.Properties.Timeout,60
Resources.AWS::Logs::SubscriptionFilter.DependsOn,"[u'CloudWatchToKinesisPolicy', u'FlowLogUpload']"
Resources.AWS::IAM::Role.Properties.Path,/
Mappings.Defaults.EventSourceMapping.BatchSize,10000
Resources.AWS::Lambda::Function.Properties.Handler,index.handler
Resources.AWS::Lambda::EventSourceMapping.Properties.StartingPosition,TRIM_HORIZON
Outputs.DeliverLogsPermissionArn.Value,"{u'Fn::GetAtt': [u'FlowLogsToCloudWatch', u'Arn']}"
Mappings.Defaults.Stream.ShardCount,10
Resources.AWS::Lambda::Function.Properties.MemorySize,256
Resources.AWS::Lambda::EventSourceMapping.Properties.BatchSize,"{u'Fn::FindInMap': [u'Defaults', u'EventSourceMapping', u'BatchSize']}"
Resources.AWS::Logs::SubscriptionFilter.Properties.FilterPattern,"{u'Fn::Join': [u'', [u'[version, account_id, ', u'interface_id, srcaddr, dstaddr, srcport, dstport, protocol, ', u'packets, bytes, start, end, action, log_status]']]}"
Resources.AWS::Lambda::Function.DependsOn,[u'LambdaPolicy']
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': u'sts:AssumeRole', u'Effect': u'Allow', u'Principal': {u'Service': [u'vpc-flow-logs.amazonaws.com']}}]"
Resources.AWS::Logs::SubscriptionFilter.Properties.RoleArn,"{u'Fn::GetAtt': [u'CloudWatchToKinesis', u'Arn']}"
Resources.AWS::Lambda::Function.Properties.Runtime,nodejs
Resources.AWS::IAM::Policy.Properties.PolicyName,lambda
Resources.AWS::Lambda::Function.Properties.Role,"{u'Fn::GetAtt': [u'LambdaRole', u'Arn']}"
Resources.AWS::Logs::SubscriptionFilter.Properties.DestinationArn,"{u'Fn::GetAtt': [u'LogStream', u'Arn']}"
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'flowlogs', u'PolicyDocument': {u'Statement': [{u'Action': [u'logs:CreateLogGroup', u'logs:CreateLogStream', u'logs:PutLogEvents', u'logs:DescribeLogGroups', u'logs:DescribeLogStreams'], u'Resource': u'*', u'Effect': u'Allow'}]}}]"
Resources.AWS::S3::Bucket.Properties.LifecycleConfiguration.Rules,"[{u'Status': u'Enabled', u'ExpirationInDays': 7}]"
