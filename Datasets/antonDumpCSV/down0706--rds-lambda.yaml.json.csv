Parameters.Subnets.Type,List<String>
Resources.AWS::IAM::Role.Properties.Path,/
Parameters.ECSHostSecurityGroup.Description,The ECS host's security group
Resources.AWS::Lambda::Function.Type,AWS::Lambda::Function
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Resources.AWS::Lambda::Function.Properties.Role,RDSLambdaRole.Arn
Resources.AWS::Lambda::Function.Properties.VpcConfig.SubnetIds,Subnets
Resources.AWS::IAM::Role.Properties.RoleName,RDSLambdaRole
Resources.AWS::Lambda::Function.Properties.VpcConfig.SecurityGroupIds,"[u'nonexistingvalue', u'ECSHostSecurityGroup']"
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': u'sts:AssumeRole', u'Effect': u'Allow', u'Principal': {u'Service': u'lambda.amazonaws.com'}}]"
Resources.AWS::Lambda::Function.Properties.Handler,index.handler
Resources.AWS::Lambda::Function.Properties.Code.S3Key,rds-lambda.zip
Resources.AWS::Lambda::Function.Properties.Code.S3Bucket,ixortooling-prd-s3-lambda-function-store
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'rds-access', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u'logs:CreateLogGroup', u'logs:CreateLogStream', u'logs:PutLogEvents'], u'Resource': u'arn:aws:logs:*:*:*', u'Effect': u'Allow'}, {u'Action': [u'ec2:CreateNetworkInterface', u'ec2:DescribeNetworkInterfaces', u'ec2:DeleteNetworkInterface'], u'Resource': u'*', u'Effect': u'Allow'}]}}]"
Resources.AWS::Lambda::Function.Properties.Runtime,nodejs8.10
Parameters.Subnets.Description,"The Subnets the RDS instance that you want this lambda to create a database in, is deployed in"
Parameters.ECSHostSecurityGroup.Type,AWS::EC2::SecurityGroup::Id
