Resources.AWS::ApiGateway::RestApi.Properties.FailOnWarnings,True
Resources.AWS::Lambda::Function.Properties.Runtime,nodejs6.10
Resources.AWS::ApiGateway::Deployment.DependsOn,[u'GatewayRequest']
Outputs.RootUrl.Description,Root URL of the API gateway
Resources.AWS::Lambda::Function.Properties.Description,A sbs-keg-reset function
Resources.AWS::Lambda::Permission.Properties.FunctionName,"{u'Fn::GetAtt': [u'GatewayLambda', u'Arn']}"
Resources.AWS::ApiGateway::Model.Properties.Schema.properties.beer_description.type,string
Resources.AWS::ApiGateway::Model.Properties.Schema.properties.keg_capacity_liters.minimum,0
Resources.AWS::ApiGateway::Account.Properties.CloudWatchRoleArn,"{u'Fn::GetAtt': [u'ApiGatewayCloudWatchLogsRole', u'Arn']}"
Resources.AWS::Lambda::Permission.Properties.Principal,apigateway.amazonaws.com
Resources.AWS::Lambda::Permission.Properties.Action,lambda:invokeFunction
Resources.AWS::ApiGateway::Method.DependsOn,LambdaPermission
Resources.AWS::ApiGateway::Resource.Properties.ParentId,"{u'Fn::GetAtt': [u'GatewayApi', u'RootResourceId']}"
Resources.AWS::ApiGateway::Method.Properties.MethodResponses,"[{u'StatusCode': 200}, {u'StatusCode': 400}, {u'StatusCode': 500}]"
Resources.AWS::ApiGateway::Model.Properties.Schema.properties.beer_logo_url.type,string
Resources.AWS::ApiGateway::Model.Properties.Schema.required,"[u'sbs_thing_name', u'keg_capacity_liters', u'beer_name', u'beer_brewery', u'beer_description']"
Resources.AWS::ApiGateway::Method.Properties.HttpMethod,POST
Resources.AWS::ApiGateway::Model.Properties.Schema.properties.beer_brewery.type,string
Resources.AWS::ApiGateway::RestApi.Properties.Description,API used for Gateway requests
Resources.AWS::ApiGateway::Stage.Properties.StageName,LATEST
Resources.AWS::Lambda::Function.Properties.Handler,index.handler
Resources.AWS::ApiGateway::Model.Properties.Schema.properties.beer_name.type,string
Resources.AWS::ApiGateway::RequestValidator.Properties.ValidateRequestParameters,false
Resources.AWS::ApiGateway::Model.Properties.Description,SBS Keg Reset Schema
Parameters.IotEndpoint.MinLength,2
Resources.AWS::ApiGateway::Method.Properties.Integration.IntegrationHttpMethod,POST
Resources.AWS::ApiGateway::Deployment.Properties.StageName,DummyStage
Resources.AWS::ApiGateway::Stage.DependsOn,[u'ApiGatewayAccount']
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'lambda.amazonaws.com']}}]"
Resources.AWS::ApiGateway::RequestValidator.Properties.ValidateRequestBody,true
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Resources.AWS::ApiGateway::RequestValidator.Properties.Name,SbsConformanceValidator
Resources.AWS::ApiGateway::Model.Properties.ContentType,application/json
Resources.AWS::ApiGateway::Model.Properties.Schema.type,object
Resources.AWS::ApiGateway::Method.Properties.Integration.IntegrationResponses,"[{u'StatusCode': 200}, {u'StatusCode': 400, u'SelectionPattern': u'.*""errorCode"":400.*', u'ResponseTemplates': {u'application/json': {u'Fn::Sub': u'#set ($errorMessageObj = $util.parseJson($input.path(\'$.errorMessage\')))\n#set ($bodyObj = $util.parseJson($input.body))\n\n{\n  ""errorCode"": $errorMessageObj.errorCode,\n  ""errorMessage"": ""$errorMessageObj.errorMessage""\n}\n'}}}, {u'StatusCode': 500, u'SelectionPattern': u'.*""errorCode"":500.*', u'ResponseTemplates': {u'application/json': {u'Fn::Sub': u'#set ($errorMessageObj = $util.parseJson($input.path(\'$.errorMessage\')))\n#set ($bodyObj = $util.parseJson($input.body))\n\n{\n  ""errorCode"": $errorMessageObj.errorCode,\n  ""errorMessage"": ""$errorMessageObj.errorMessage""\n}\n'}}}]"
Resources.AWS::ApiGateway::Resource.Properties.PathPart,sbs-keg-reset
Resources.AWS::ApiGateway::Model.Properties.Name,SbsKegReset
Resources.AWS::ApiGateway::Model.Properties.Schema.properties.sbs_thing_name.type,string
Resources.AWS::ApiGateway::Stage.Properties.MethodSettings,"[{u'HttpMethod': u'*', u'ResourcePath': u'/*', u'DataTraceEnabled': True, u'LoggingLevel': u'INFO'}]"
Resources.AWS::Lambda::Function.Properties.Role,"{u'Fn::GetAtt': [u'LambdaExecutionRole', u'Arn']}"
Outputs.CurlCommand.Description,Curl command for the endpoint
Parameters.ResourcePrefix.MinLength,2
Resources.AWS::ApiGateway::Model.Properties.Schema.title,SbsKegResetSchema
Resources.AWS::ApiGateway::Model.Properties.Schema.$schema,http://json-schema.org/draft-04/schema#
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'LambdaRole', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u'logs:CreateLogGroup', u'logs:CreateLogStream', u'logs:PutLogEvents'], u'Resource': u'arn:aws:logs:*:*:*', u'Effect': u'Allow'}, {u'Action': [u'iot:GetThingShadow', u'iot:UpdateThingShadow'], u'Resource': u'*', u'Effect': u'Allow'}]}}]"
Resources.AWS::ApiGateway::Method.Properties.AuthorizationType,NONE
Resources.AWS::ApiGateway::Model.Properties.Schema.properties.keg_capacity_liters.type,number
