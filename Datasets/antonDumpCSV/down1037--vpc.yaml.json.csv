Mappings.SubnetConfig.VPC.CIDR,0.0/16
Parameters.PrivateSubnetZones.Default,"us-east-1a, us-east-1b, us-east-1c"
Outputs.VpcCidr.Export.Name,"[u'-', [u'AWS::Region', u'${AWS::StackName}', u'VpcCidr']]"
Resources.AWS::EC2::SecurityGroup.DependsOn,VPC
Outputs.PublicRouteTable.Value,PublicRouteTable
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,true
Parameters.PublicSubnetZones.Default,"us-east-1a, us-east-1b, us-east-1c"
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,VPC
Parameters.VpnCidr.Description,CIDR of the (sophos-utm) VPN
Outputs.PublicSubnet1.Value,PublicSubnet1
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': -1, u'FromPort': -1, u'IpProtocol': -1, u'Description': u'Allow all VPN traffic', u'CidrIp': u'VpnCidr'}]"
Outputs.PublicSubnet2.Description,SubnetId of the public subnet 2
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Security Group for VPN
Outputs.PrivateSubnet.Description,SubnetId of the private subnet
Mappings.SubnetConfig.Public.CIDR,0.0/20
Outputs.PrivateRouteTable.Export.Name,"[u'-', [u'AWS::Region', u'${AWS::StackName}', u'PrivateRouteTable']]"
Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,-1
Mappings.SubnetConfig.Public1.CIDR,32.0/20
Resources.AWS::EC2::Subnet.Properties.CidrBlock,"[u'.', [u'VpcSubnetPrefix', [u'SubnetConfig', u'Public2', u'CIDR']]]"
Outputs.PrivateSubnet.Export.Name,"[u'-', [u'AWS::Region', u'${AWS::StackName}', u'PrivateSubnet']]"
Outputs.VpcCidr.Description,VPC CIDR of the newly created VPC
Outputs.PrivateSubnet2.Export.Name,"[u'-', [u'AWS::Region', u'${AWS::StackName}', u'PrivateSubnet2']]"
Outputs.VPCId.Description,VPCId of the newly created VPC
Resources.AWS::EC2::NatGateway.Properties.AllocationId,"{u'Fn::GetAtt': [u'ElasticIP', u'AllocationId']}"
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,100
Outputs.PublicRouteTable.Description,Route table Id for public subnets
Outputs.VpcDefaultSecurityGroup.Value,"{u'Fn::GetAtt': [u'VPC', u'DefaultSecurityGroup']}"
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Outputs.PublicSubnet2.Export.Name,"[u'-', [u'AWS::Region', u'${AWS::StackName}', u'PublicSubnet2']]"
Resources.AWS::EC2::Route.DependsOn,GatewayToInternet
Outputs.PrivateSubnet1.Value,PrivateSubnet1
Parameters.PublicSubnetZones.ConstraintDescription,"List of Availability Zones in a region, such as us-east-1a, us-east-1b, us-east-1c"
Outputs.PublicSubnet2.Value,PublicSubnet2
Outputs.PublicSubnet.Value,PublicSubnet
Outputs.PrivateSubnet.Value,PrivateSubnet
Outputs.PublicSubnet.Description,SubnetId of the public subnet
Resources.AWS::EC2::VPC.Properties.CidrBlock,"[u'.', [u'VpcSubnetPrefix', [u'SubnetConfig', u'VPC', u'CIDR']]]"
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.To,65535
Mappings.SubnetConfig.Private.CIDR,16.0/20
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupEgress,"[{u'ToPort': -1, u'FromPort': -1, u'IpProtocol': -1, u'CidrIp': u'0.0.0.0/0'}]"
Outputs.PrivateSubnet1.Export.Name,"[u'-', [u'AWS::Region', u'${AWS::StackName}', u'PrivateSubnet1']]"
Outputs.VpnSecurityGroup.Description,VPN Security Group Id 
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Parameters.VpcSubnetPrefix.Description,The VPC subnet prefix (i.e. 10.40)
Parameters.VpnCidr.Default,10.1.0.0/16
Parameters.PrivateSubnetZones.Description,Availability zones for private subnets
Mappings.SubnetConfig.Public2.CIDR,64.0/20
Outputs.PrivateSubnet2.Value,PrivateSubnet2
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,"[2, u'PublicSubnetZones']"
Outputs.VpnSecurityGroup.Value,VpnSecurityGroup
Outputs.PrivateRouteTable.Value,PrivateRouteTable
Outputs.PrivateRouteTable.Description,Route table Id for private subnets
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.From,0
Resources.AWS::EC2::EIP.Properties.Domain,vpc
Parameters.VpcName.Description,The VPC name (i.e. Synapse-Prod)
Outputs.PrivateSubnet1.Description,SubnetId of the private subnet 1
Parameters.PrivateSubnetZones.ConstraintDescription,"List of Availability Zones in a region, such as us-east-1a, us-east-1b, us-east-1c"
Parameters.PublicSubnetZones.Description,Availability zones for public subnets
Outputs.VpcCidr.Value,"[u'VPC', u'CidrBlock']"
Outputs.VpcDefaultSecurityGroup.Export.Name,"[u'-', [u'AWS::Region', u'${AWS::StackName}', u'VpcDefaultSecurityGroup']]"
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Mappings.SubnetConfig.Private1.CIDR,48.0/20
Outputs.VpcDefaultSecurityGroup.Description,VPC DefaultSecurityGroup Id 
Outputs.PrivateSubnet2.Description,SubnetId of the private subnet 2
Outputs.PublicSubnet.Export.Name,"[u'-', [u'AWS::Region', u'${AWS::StackName}', u'PublicSubnet']]"
Outputs.PublicRouteTable.Export.Name,"[u'-', [u'AWS::Region', u'${AWS::StackName}', u'PublicRouteTable']]"
Mappings.SubnetConfig.Private2.CIDR,80.0/20
Outputs.VpnSecurityGroup.Export.Name,"[u'-', [u'AWS::Region', u'${AWS::StackName}', u'VpnSecurityGroup']]"
Resources.AWS::EC2::Subnet.Properties.MapPublicIpOnLaunch,True
Outputs.VPCId.Export.Name,"[u'-', [u'AWS::Region', u'${AWS::StackName}', u'VPCId']]"
Outputs.PublicSubnet1.Export.Name,"[u'-', [u'AWS::Region', u'${AWS::StackName}', u'PublicSubnet1']]"
Outputs.PublicSubnet1.Description,SubnetId of the public subnet 1
