Outputs.LambdaRoleARN.Value,"{u'Fn::GetAtt': [u'LambdaRole', u'Arn']}"
Resources.AWS::Lambda::Function.Properties.Environment.Variables.ENV,{u'Fn::Sub': u'${EnvName}'}
Resources.AWS::IAM::Role.Properties.ManagedPolicyArns,"[u'arn:aws:iam::aws:policy/AWSLambdaExecute', u'arn:aws:iam::aws:policy/AmazonS3FullAccess', u'arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess', u'arn:aws:iam::aws:policy/AmazonKinesisFullAccess']"
Outputs.LambdaRoleARN.Export.Name,{u'Fn::Sub': u'LambdaRole'}
Parameters.EnvName.Type,String
Parameters.EnvName.Description,"Name of an environment. 'dev', 'staging', 'prod' and any name."
Resources.AWS::Lambda::Function.Properties.Description,LambdaFunctioni of nodejs4.3.
Outputs.LambdaFunctionARN.Description,Lambda function ARN.
Parameters.LambdaHandlerPath.ConstraintDescription,Must end with non numberic character.
Resources.AWS::Lambda::Function.Properties.Timeout,10
Outputs.LambdaRoleARN.Description,Role for Lambda execution.
Outputs.LambdaFunctionARN.Export.Name,{u'Fn::Sub': u'LambdaARN-${EnvName}'}
Resources.AWS::IAM::Role.Properties.Path,/
Parameters.LambdaHandlerPath.Type,String
Resources.AWS::IAM::Role.Type,AWS::IAM::Role
Resources.AWS::Lambda::Function.Properties.Role,"{u'Fn::GetAtt': [u'LambdaRole', u'Arn']}"
Resources.AWS::Lambda::Function.Properties.Code.ZipFile,"exports.handler = function(event, context){
 var sample = sample;"
Resources.AWS::IAM::Role.Properties.RoleName,{u'Fn::Sub': u'lambda-role'}
Resources.AWS::Lambda::Function.Properties.Handler,${LambdaHandlerPath}
Resources.AWS::Lambda::Function.Properties.FunctionName,{u'Fn::Sub': u'lambda-function-${EnvName}'}
Parameters.EnvName.AllowedPattern,^.*[^0-9]$
Resources.AWS::Lambda::Function.Properties.MemorySize,128
Resources.AWS::Lambda::Function.Type,AWS::Lambda::Function
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'lambda.amazonaws.com']}}]"
Parameters.LambdaHandlerPath.AllowedPattern,^.*[^0-9]$
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Resources.AWS::Lambda::Function.Properties.Runtime,nodejs4.3
Resources.AWS::Lambda::Function.Properties.Environment.Variables.TZ,UTC
Parameters.EnvName.ConstraintDescription,Must end with non numberic character.
Outputs.LambdaFunctionARN.Value,"{u'Fn::GetAtt': [u'LambdaFunction', u'Arn']}"
Parameters.LambdaHandlerPath.Description,Path of an Lambda Handler.
Outputs.LambdaFunctionName.Value,{u'Ref': u'LambdaFunction'}
