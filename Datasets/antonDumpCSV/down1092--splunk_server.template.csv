Parameters.ResourceName.AllowedPattern,[a-zA-Z][a-zA-Z0-9]*
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'22', u'IpProtocol': u'tcp', u'CidrIp': u'192.168.0.0/16', u'FromPort': u'22'}, {u'ToPort': u'8089', u'IpProtocol': u'tcp', u'CidrIp': u'192.168.0.0/16', u'FromPort': u'8089'}, {u'ToPort': u'9887', u'IpProtocol': u'tcp', u'CidrIp': u'192.168.0.0/16', u'FromPort': u'9887'}, {u'ToPort': u'9997', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'9997'}, {u'ToPort': u'80', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'80'}, {u'ToPort': u'443', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'443'}]"
Parameters.ResourceName.Description,The Logical Resource Name - commonly set by parent stack
Resources.AWS::CloudFormation::WaitCondition.Properties.Timeout,900
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./etc/chef/client.rb.mode,000644
Outputs.PublicIp.Condition,AssociatePublicIpAddress
Parameters.KeyName.ConstraintDescription,"can contain only alphanumeric characters, spaces, dashes and underscores."
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./etc/chef/client.rb.owner,root
Parameters.KeyName.MaxLength,64
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./etc/chef/node.json.mode,000644
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.packages.rpm.chef-client,https://opscode-omnibus-packages.s3.amazonaws.com/el/7/x86_64/chef-12.5.1-1.el7.x86_64.rpm
Parameters.ClusterSecurityKey.ConstraintDescription,"can contain only alphanumeric characters, spaces, dashes and underscores."
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./etc/chef/client.rb.group,root
Parameters.AssociatePublicIP.AllowedValues,"[u'yes', u'no']"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./etc/chef/client.rb.content,"{u'Fn::Join': [u'', [u'log_level :info\n', u'log_location STDOUT\n', u'file_cache_path ""/var/chef""\n', u'cookbook_path ""/etc/chef/cookbooks""\n', u'role_path ""/etc/chef/roles""\n', u'json_attribs ""/etc/chef/node.json""\n']]}"
Parameters.AssociatePublicIP.Default,yes
Parameters.ClusterSecurityKey.AllowedPattern,[-_ a-zA-Z0-9]+
Outputs.PrivateDnsName.Description,Private DNS name of instance
Parameters.AssociatePublicIP.ConstraintDescription,must be 'yes' or 'no'
Parameters.ClusterSecurityKey.Default,password
Parameters.CookbookBucketName.Description,Name of S3 bucket with Chef recipes & roles
Parameters.IsLicenseMaster.ConstraintDescription,must be 'yes' or 'no'
Parameters.ClusterMasterIP.Description,[Optional] Splunk cluster master IP or hostname.
Parameters.AssociatePublicIP.Description,Indicates whether server receives a public IP address
Outputs.PublicIp.Description,Public IP address of instance
Outputs.InstanceID.Description,Splunk Server Instance ID
Parameters.ResourceName.MinLength,1
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./etc/chef/node.json.group,root
Outputs.PrivateIp.Value,"{u'Fn::GetAtt': [u'SplunkServerHost', u'PrivateIp']}"
Parameters.ClusterMasterIP.Default,
Parameters.IsLicenseMaster.Default,no
Parameters.LicenseMasterIP.Default,
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,"Enable internal access for SSH and Splunk management/replication, and allow public access to Splunk web & receiver"
Parameters.KeyName.MinLength,1
Resources.AWS::CloudFormation::WaitCondition.DependsOn,SplunkServerHost
Parameters.VpcId.Description,Vpc ID of your existing Virtual Private Cloud (VPC)
Parameters.SubnetId.Default,subnet-
Parameters.ResourceName.Default,SplunkServer
Parameters.IsLicenseMaster.AllowedValues,"[u'yes', u'no']"
Parameters.LicenseMasterIP.Description,[Optional] Splunk license master IP or hostname.
Outputs.PublicDnsName.Value,"{u'Fn::GetAtt': [u'SplunkServerHost', u'PublicDnsName']}"
Parameters.KeyName.Description,Name of an existing EC2 KeyPair to enable SSH access to the instances (use bastion KeyPair if available)
Outputs.PublicDnsName.Description,Public DNS name of instance
Outputs.PublicIp.Value,"{u'Fn::GetAtt': [u'SplunkServerHost', u'PublicIp']}"
Parameters.VpcId.Default,vpc-
Mappings.AWSRegionArch2AMI.eu-central-1.64HVM,ami-daaeaec7
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.config.files./etc/chef/node.json.owner,root
Parameters.CookbookBucketName.Default,splunk-cloud
Parameters.SecurityGroup.Description,The EC2 security group that this instance belongs to
Parameters.SecurityGroup.Default,default
Resources.AWS::EC2::SecurityGroup.Condition,CreateDefaultSecurityGroup
Outputs.PrivateIp.Description,Private IP address of instance
Parameters.SplunkRole.MaxLength,64
Parameters.ClusterSecurityKey.Description,Security key to authenticate traffic between cluster nodes.
Parameters.SplunkRole.Description,Chef Splunk role to assign to this instance
Parameters.IsLicenseMaster.Description,Indicates whether server acts as license master. Overrides SplunkLicenseMasterIP setting
Outputs.PrivateDnsName.Value,"{u'Fn::GetAtt': [u'SplunkServerHost', u'PrivateDnsName']}"
Parameters.SplunkRole.AllowedValues,"[u'splunk-server', u'splunk-indexer', u'splunk-searcher', u'cluster-master', u'cluster-peer', u'cluster-search-head']"
Parameters.SplunkRole.MinLength,1
Parameters.ResourceName.MaxLength,128
Parameters.SplunkRole.ConstraintDescription,must be a valid Chef role for Splunk.
Parameters.KeyName.AllowedPattern,[-_ a-zA-Z0-9]*
Parameters.SubnetId.Description,Subnet ID of an existing Public or Private subnet in your Virtual Private Cloud (VPC)
