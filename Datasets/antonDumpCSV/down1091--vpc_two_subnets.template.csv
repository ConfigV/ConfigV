Resources.AWS::EC2::VPC.Properties.CidrBlock,192.168.0.0/16
Parameters.KeyName.MinLength,1
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Outputs.PublicSubnetID.Description,Public subnet ID
Resources.AWS::EC2::Subnet.Properties.CidrBlock,192.168.1.0/24
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,"Enable internal access to NAT instance: receive internet-bound traffic from instances in private subnet, as well as SSH traffic from vpc"
Parameters.SSHFrom.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Parameters.SSHFrom.MaxLength,18
Parameters.KeyName.ConstraintDescription,"can contain only alphanumeric characters, spaces, dashes and underscores."
Parameters.SSHFrom.ConstraintDescription,must be a valid CIDR range of the form x.x.x.x/x.
Resources.AWS::EC2::Instance.Properties.SourceDestCheck,false
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupEgress,"[{u'ToPort': u'80', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'80'}, {u'ToPort': u'443', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'443'}, {u'ToPort': u'-1', u'IpProtocol': u'icmp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'-1'}]"
Parameters.KeyName.MaxLength,64
Parameters.SSHFrom.Default,0.0.0.0/0
Outputs.VpcID.Description,VPC ID of newly created VPC
Parameters.SSHFrom.MinLength,9
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,True
Parameters.KeyName.Description,Name of an existing EC2 KeyPair to enable SSH access to the instances
Parameters.KeyName.AllowedPattern,[-_ a-zA-Z0-9]*
Outputs.NATDeviceID.Description,NAT Instance ID
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,True
Parameters.SSHFrom.Description,Lockdown SSH access to NAT instance (default can be accessed from anywhere)
Resources.AWS::EC2::Instance.Properties.Tags,"[{u'Value': u'NATDevice', u'Key': u'Name'}]"
Outputs.PrivateSubnetID.Description,Private Subnet ID
