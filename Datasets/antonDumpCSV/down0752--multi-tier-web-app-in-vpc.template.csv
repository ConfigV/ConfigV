Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./var/www/html/index.html.owner,root
Outputs.Bastion.Description,IP Address of the Bastion host
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./etc/httpd/conf.d/maptobackend.conf.content,"{u'Fn::Join': [u'', [u'ProxyPass /backend http://', {u'Fn::GetAtt': [u'PrivateElasticLoadBalancer', u'DNSName']}, u'\n', u'ProxyPassReverse /backend http://', {u'Fn::GetAtt': [u'PrivateElasticLoadBalancer', u'DNSName']}, u'\n']]}"
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.Tags,"[{u'PropagateAtLaunch': u'true', u'Value': u'Public', u'Key': u'Network'}]"
Parameters.SSHFrom.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.MinSize,1
Resources.AWS::IAM::User.Properties.Path,/
Parameters.SSHFrom.MaxLength,18
Parameters.KeyName.ConstraintDescription,"can contain only alphanumeric characters, spaces, dashes and underscores."
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,true
Parameters.KeyName.MaxLength,64
Parameters.SSHFrom.MinLength,9
Resources.AWS::IAM::User.Properties.Policies,"[{u'PolicyName': u'root', u'PolicyDocument': {u'Statement': [{u'Action': u'cloudformation:DescribeStackResource', u'Resource': u'*', u'Effect': u'Allow'}]}}]"
Resources.AWS::CloudFormation::WaitCondition.Properties.Timeout,300
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Scheme,internal
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.AvailabilityZones,"[{u'Fn::GetAtt': [u'PrivateSubnet', u'AvailabilityZone']}]"
Parameters.SSHFrom.Description,Lockdown SSH access to the bastion host (default can be accessed from anywhere)
Mappings.SubnetConfig.Public.CIDR,10.0.0.0/24
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.UnhealthyThreshold,5
Mappings.SubnetConfig.VPC.CIDR,10.0.0.0/16
Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,6
Outputs.WebSite.Value,"{u'Fn::Join': [u'', [u'http://', {u'Fn::GetAtt': [u'PublicElasticLoadBalancer', u'DNSName']}]]}"
Resources.AWS::EC2::Subnet.Properties.CidrBlock,"{u'Fn::FindInMap': [u'SubnetConfig', u'Private', u'CIDR']}"
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Timeout,60
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Interval,90
Parameters.SSHFrom.ConstraintDescription,must be a valid CIDR range of the form x.x.x.x/x.
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,100
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./var/www/html/index.html.group,root
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Resources.AWS::EC2::EIP.Properties.Domain,vpc
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.services.sysvinit.httpd.files,[u'/var/www/html/index.html']
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./etc/httpd/conf.d/maptobackend.conf.owner,root
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.To,65535
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.HealthyThreshold,3
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupEgress,"[{u'ToPort': u'22', u'IpProtocol': u'tcp', u'CidrIp': {u'Fn::FindInMap': [u'SubnetConfig', u'Private', u'CIDR']}, u'FromPort': u'22'}]"
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Enable access to the Bastion host
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Listeners,"[{u'InstancePort': u'80', u'LoadBalancerPort': u'80', u'Protocol': u'HTTP'}]"
Resources.AWS::CloudFormation::WaitCondition.DependsOn,BackendFleet
Mappings.SubnetConfig.Private.CIDR,10.0.1.0/24
Resources.AWS::EC2::Instance.Properties.SourceDestCheck,false
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.From,0
Parameters.SSHFrom.Default,0.0.0.0/0
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.Comment1,Configure the Backend server to respond to requests
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.services.sysvinit.httpd.ensureRunning,true
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.MaxSize,10
Parameters.KeyName.Description,Name of an existing EC2 KeyPair to enable SSH access to the instances
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./etc/httpd/conf.d/maptobackend.conf.group,root
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Target,HTTP:80/
Parameters.BackendSize.Description,Number of EC2 instances to launch for the backend server
Parameters.KeyName.MinLength,1
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./var/www/html/index.html.mode,000644
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./etc/httpd/conf.d/maptobackend.conf.mode,000644
Parameters.BackendSize.Default,1
Parameters.FrontendSize.Description,Number of EC2 instances to launch for the Frontend server
Resources.AWS::EC2::VPC.Properties.CidrBlock,"{u'Fn::FindInMap': [u'SubnetConfig', u'VPC', u'CIDR']}"
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.packages.yum.httpd,[]
Parameters.FrontendSize.Default,1
Outputs.WebSite.Description,URL of the website
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./var/www/html/index.html.content,"{u'Fn::Join': [u'\n', [u'<img src=""https://s3.amazonaws.com/cloudformation-examples/cloudformation_graphic.png"" alt=""AWS CloudFormation Logo""/>', u'<h1>Congratulations, this request was served from the backend fleet</h1>']]}"
Parameters.KeyName.AllowedPattern,[-_ a-zA-Z0-9]*
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.services.sysvinit.httpd.enabled,true
