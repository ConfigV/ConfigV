Resources.AWS::IAM::InstanceProfile.Properties.Path,/
Outputs.SecretAccessKey.Value,"{u'Fn::GetAtt': [u'AccessKey', u'SecretAccessKey']}"
Resources.AWS::S3::Bucket.DeletionPolicy,Delete
Resources.AWS::Route53::HostedZone.Properties.HostedZoneConfig.Comment,Hosted zone for internal Empire services.
Resources.AWS::Logs::LogGroup.Properties.RetentionInDays,7
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.Tags,"[{u'PropagateAtLaunch': u'true', u'Value': u'Empire minion', u'Key': u'Name'}]"
Metadata.AWS::CloudFormation::Interface.ParameterLabels.DockerPass.default,Password
Resources.AWS::RDS::DBInstance.Properties.MasterUsername,empire
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.MinSize,1
Metadata.AWS::CloudFormation::Interface.ParameterLabels.DockerUser.default,Username
Metadata.AWS::CloudFormation::Interface.ParameterLabels.AmiId.default,ECS optimized AMI id
Parameters.GitHubClientSecret.Default,
Parameters.DockerPass.Description,Password of a Docker registry user to pull images from private repositories.
Metadata.AWS::CloudFormation::Interface.ParameterLabels.KeyName.default,SSH key name
Resources.AWS::SQS::QueuePolicy.Properties.PolicyDocument.Version,2012-10-17
Resources.AWS::RDS::DBInstance.DeletionPolicy,Delete
Parameters.RunLogsBackend.AllowedValues,"[u'cloudwatch', u'stdout']"
Resources.AWS::AutoScaling::AutoScalingGroup.UpdatePolicy.AutoScalingRollingUpdate.MaxBatchSize,2
Resources.AWS::ECS::TaskDefinition.Properties.Volumes,"[{u'Host': {u'SourcePath': u'/var/run/docker.sock'}, u'Name': u'dockerSocket'}, {u'Host': {u'SourcePath': u'/home/ec2-user/.dockercfg'}, u'Name': u'dockerCfg'}]"
Resources.AWS::RDS::DBInstance.Properties.Engine,postgres
Parameters.AvailabilityZones.Description,Comma delimited list of availability zones. MAX 2
Parameters.GitHubClientSecret.Description,The oauth client secret to use with the GitHub authentication backend.
Resources.AWS::IAM::Policy.Properties.PolicyDocument.Version,2012-10-17
Resources.AWS::IAM::Policy.Properties.PolicyDocument.Statement,"[{u'Action': [u'ecs:DeregisterContainerInstance', u'ecs:DiscoverPollEndpoint', u'ecs:Poll', u'ecs:RegisterContainerInstance', u'ecs:StartTelemetrySession', u'ecs:Submit*', u'ecr:GetAuthorizationToken', u'ecr:BatchCheckLayerAvailability', u'ecr:GetDownloadUrlForLayer', u'ecr:BatchGetImage'], u'Resource': [u'*'], u'Effect': u'Allow'}]"
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Metadata.AWS::CloudFormation::Interface.ParameterLabels.GitHubClientSecret.default,Client Secret
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'65535', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'1'}]"
Outputs.ELBDNSName.Condition,DemoMode
Parameters.GitHubTeamId.Default,
Resources.AWS::AutoScaling::LaunchConfiguration.DependsOn,Cluster
Parameters.EmpireVersion.Description,Docker tag to specify the version of Empire to run. This can be any git branch or sha.
Metadata.AWS::CloudFormation::Interface.ParameterLabels.GitHubTeamId.default,Team ID
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Outputs.ELBName.Description,The name of the ELB for the Empire controller
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.UnhealthyThreshold,2
Resources.AWS::ECS::Service.Condition,DemoMode
Outputs.ELBDNSName.Description,The DNS name of the ELB for the Empire controller
Resources.AWS::Route53::HostedZone.Properties.Name,empire.
Parameters.GitHubTeamId.Description,"If set, this will ensure that all users are a member of this GitHub team."
Outputs.AccessKeyId.Description,Access key that can be used for a development instance of Empire
Resources.AWS::AutoScaling::AutoScalingGroup.UpdatePolicy.AutoScalingRollingUpdate.WaitOnResourceSignals,true
Resources.AWS::EC2::Subnet.Properties.CidrBlock,10.0.1.0/24
Metadata.AWS::CloudFormation::Interface.ParameterLabels.GitHubOrganization.default,Organization
Outputs.ExternalELBSG.Description,The External ELB Security Group
Resources.AWS::AutoScaling::LaunchConfiguration.Properties.AssociatePublicIpAddress,True
Resources.AWS::EC2::DHCPOptions.Properties.DomainName,empire
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Timeout,5
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Interval,30
Resources.AWS::RDS::DBSubnetGroup.Properties.DBSubnetGroupDescription,Subnet group for Empire db
Outputs.TemplateBucket.Description,The s3 bucket where stack templates will be stored
Parameters.LaunchEmpire.Default,true
Parameters.GitHubOrganization.Description,"If set, this will ensure that all users are a member of this GitHub organization."
Metadata.AWS::CloudFormation::Interface.ParameterLabels.AvailabilityZones.default,Availability zones
Parameters.EventsBackend.Default,sns
Metadata.AWS::CloudFormation::Interface.ParameterLabels.DockerEmail.default,Email
Resources.AWS::RDS::DBInstance.Properties.MasterUserPassword,epoo9mohNg
Resources.AWS::ECS::TaskDefinition.Properties.TaskRoleArn,"{u'Fn::GetAtt': [u'EmpireRole', u'Arn']}"
Metadata.AWS::CloudFormation::Interface.ParameterLabels.DockerRegistry.default,Registry
Outputs.Cluster.Description,Name of the ECS Cluster
Resources.AWS::RDS::DBInstance.Properties.VPCSecurityGroups,"[{u'Fn::GetAtt': [u'DBSecurityGroup', u'GroupId']}]"
Outputs.CustomResourcesQueue.Description,The queue that Empire will listen on to provision custom CloudFormation resources.
Parameters.EventsBackend.Description,The backend to use to publish Empire events to. Set this to SNS to create an SNS topic and publish events there.
Metadata.AWS::CloudFormation::Interface.ParameterGroups,"[{u'Parameters': [u'LaunchEmpire', u'EmpireVersion', u'EventsBackend', u'RunLogsBackend', u'Scheduler'], u'Label': {u'default': u'Empire'}}, {u'Parameters': [u'GitHubClientId', u'GitHubClientSecret', u'GitHubOrganization', u'GitHubTeamId'], u'Label': {u'default': u'GitHub Authentication'}}, {u'Parameters': [u'DockerUser', u'DockerPass', u'DockerEmail', u'DockerRegistry'], u'Label': {u'default': u'Docker'}}, {u'Parameters': [u'DesiredCapacity', u'AmiId', u'AvailabilityZones', u'InstanceType', u'KeyName'], u'Label': {u'default': u'Cluster'}}]"
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Condition,DemoMode
Parameters.Scheduler.Description,The scheduling backend to use to run applications. The default is to run applications with ECS.
Parameters.Scheduler.AllowedValues,[u'cloudformation']
Resources.AWS::AutoScaling::AutoScalingGroup.UpdatePolicy.AutoScalingRollingUpdate.MinInstancesInService,1
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.HealthyThreshold,10
Parameters.RunLogsBackend.Default,cloudwatch
Parameters.DockerRegistry.Default,https://index.docker.io/v1/
Parameters.GitHubClientId.Description,The oauth client id to use with the GitHub authentication backend.
Outputs.ELBName.Condition,DemoMode
Resources.AWS::ECS::Service.DependsOn,"[u'Cluster', u'ServiceRole', u'ServiceRolePolicies']"
Resources.AWS::RDS::DBSubnetGroup.Condition,DemoMode
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Container Instance Allowed Ports
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Listeners,"[{u'InstancePort': u'8080', u'LoadBalancerPort': u'80', u'Protocol': u'TCP'}]"
Parameters.EventsBackend.AllowedValues,"[u'sns', u'none']"
Metadata.AWS::CloudFormation::Interface.ParameterLabels.Scheduler.default,Backend to use to run applications
Parameters.DockerRegistry.Description,The URL of the Docker registry to pull private images from.
Resources.AWS::SNS::Topic.Properties.DisplayName,Empire Events
Metadata.AWS::CloudFormation::Interface.ParameterLabels.EmpireVersion.default,Daemon version
Parameters.DockerEmail.Description,Email of a Docker registry user to pull images from private repositories.
Resources.AWS::RDS::DBInstance.Condition,DemoMode
Resources.AWS::SNS::Topic.Condition,SNSEvents
Parameters.Scheduler.Default,cloudformation
Resources.AWS::IAM::AccessKey.Properties.Status,Active
Resources.AWS::RDS::DBInstance.Properties.EngineVersion,9.5.2
Parameters.AvailabilityZones.Default,"us-east-1a,us-east-1b"
Parameters.GitHubOrganization.Default,
Resources.AWS::RDS::DBInstance.Properties.DBInstanceClass,db.t2.micro
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'ec2.amazonaws.com']}}]"
Resources.AWS::SNS::Topic.Properties.Subscription,"[{u'Endpoint': {u'Fn::GetAtt': [u'CustomResourcesQueue', u'Arn']}, u'Protocol': u'sqs'}]"
Parameters.AmiId.Default,ami-275ffe31
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.ConnectionSettings.IdleTimeout,3600
Resources.AWS::EC2::Subnet.DependsOn,AttachGateway
Parameters.KeyName.Description,The name of the key pair to use if you want to allow SSH access to hosts.
Parameters.GitHubClientId.Default,
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.CrossZone,true
Outputs.CustomResourcesTopic.Description,The ARN of the SNS topic to use as the ServiceToken for custom CloudFormation resources.
Outputs.SecretAccessKey.Description,Access key that can be used for a development instance of Empire
Resources.AWS::SQS::QueuePolicy.Properties.PolicyDocument.Id,CustomResourcesQueuePolicy
Metadata.AWS::CloudFormation::Interface.ParameterLabels.LaunchEmpire.default,Launch
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Target,HTTP:8080/health
Resources.AWS::Logs::LogGroup.Condition,CloudWatchLogs
Resources.AWS::AutoScaling::AutoScalingGroup.UpdatePolicy.AutoScalingRollingUpdate.PauseTime,PT2M
Parameters.DockerPass.Default,
Resources.AWS::ECS::TaskDefinition.Condition,DemoMode
Metadata.AWS::CloudFormation::Interface.ParameterLabels.DesiredCapacity.default,Cluster size
Parameters.DesiredCapacity.Default,3
Outputs.InternalZoneID.Description,The zone ID for the internal hosted zone.
Resources.AWS::EC2::SecurityGroup.Condition,DemoMode
Parameters.DockerEmail.Default,
Parameters.DockerPass.NoEcho,True
Parameters.LaunchEmpire.AllowedValues,"[u'false', u'true']"
Resources.AWS::IAM::Role.Properties.Path,/
Resources.AWS::EC2::DHCPOptions.Properties.DomainNameServers,[u'AmazonProvidedDNS']
Outputs.VPC.Description,The id of the VPC
Parameters.LaunchEmpire.Description,"If true, then launch Empire & Postgres as ECS services. Note that this is NOT a production grade stack, this is only meant to serve as an easy way to try out Empire. If you want to take Empire into production, read the docs on Production Best Practices http://empire.readthedocs.io/en/latest/production_best_practices/."
Resources.AWS::RDS::DBInstance.Properties.AllocatedStorage,5
Parameters.DockerUser.Description,Username of a Docker registry user to pull images from private repositories.
Outputs.ELBDNSName.Value,"{u'Fn::GetAtt': [u'LoadBalancer', u'DNSName']}"
Metadata.AWS::CloudFormation::Interface.ParameterLabels.GitHubClientId.default,Client ID
Parameters.EmpireVersion.Default,master
Outputs.Subnets.Description,The subnets created
Resources.AWS::EC2::VPC.Properties.CidrBlock,10.0.0.0/16
Parameters.DockerUser.Default,
Outputs.InternalELBSG.Description,The Internal ELB Security Group
Parameters.DesiredCapacity.Description,The number of EC2 instances to run in the ECS cluster.
Parameters.RunLogsBackend.Description,The backend used to store logs from interactive runs.
Parameters.AmiId.Description,The AMI id of the AMI to run the instances with. This defaults to the official ECS ami.
Resources.AWS::IAM::Policy.Properties.PolicyName,ecs
Outputs.ServiceRole.Description,Role to assume when creating an ECS service with an ELB attached
Resources.AWS::S3::Bucket.Properties.AccessControl,Private
Resources.AWS::RDS::DBInstance.Properties.DBName,empire
Resources.AWS::ElasticLoadBalancing::LoadBalancer.DependsOn,AttachGateway
Metadata.AWS::CloudFormation::Interface.ParameterLabels.EventsBackend.default,Send events to
Resources.AWS::ECS::Service.Properties.DesiredCount,1
Metadata.AWS::CloudFormation::Interface.ParameterLabels.RunLogsBackend.default,Send interactive run logs to
