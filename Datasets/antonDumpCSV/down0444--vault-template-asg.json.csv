Mappings.SubnetConfig.VPC.CIDR,10.0.0.0/16
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.Tags,"[{u'PropagateAtLaunch': u'true', u'Value': u'Vault-Server-ASG', u'Key': u'Name'}]"
Resources.AWS::EC2::RouteTable.Condition,VPC
Mappings.AWSRegionToAMI.ca-central-1.AMIID,ami-ef3b838b
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.MinSize,1
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./etc/vault/vault-dev-server-start.sh.mode,000744
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./etc/vault/vault-dev-server-start.sh.group,root
Resources.AWS::AutoScaling::AutoScalingGroup.UpdatePolicy.AutoScalingRollingUpdate.MaxBatchSize,1
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./etc/vault/vault-dev-server-start.sh.content,"{u'Fn::Join': [u'\n', [u'#! /bin/bash', u'LISTEN_ADDRESS=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)', u'nohup vault server -dev-listen-address=${LISTEN_ADDRESS}:8200 -dev > /etc/vault/vault-server-log.out 2>&1 &', u'echo done', u'exit 0']]}"
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./etc/profile.d/vault-addr-variable.sh.owner,root
Resources.AWS::EC2::InternetGateway.Condition,VPC
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Tags,"[{u'Value': u'Vault-server-ELB', u'Key': u'Name'}]"
Outputs.ELBDNSName.Description,URL for VAULT_ADDRESS which should be exported locally for CLI
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.commands.command1.command,ln -s /etc/vault/vault vault
Resources.AWS::AutoScaling::AutoScalingGroup.UpdatePolicy.AutoScalingRollingUpdate.WaitOnResourceSignals,true
Resources.AWS::EC2::SubnetRouteTableAssociation.Condition,Subnet
Resources.AWS::EC2::Subnet.Properties.CidrBlock,"{u'Fn::FindInMap': [u'SubnetConfig', u'Public', u'CIDR']}"
Resources.AWS::AutoScaling::AutoScalingGroup.UpdatePolicy.AutoScalingRollingUpdate.PauseTime,PT15M
Parameters.SubnetID.Description,By default we will create a new Subnet ID or select an existing subnet ID from VPC selected above.
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./etc/profile.d/vault-addr-variable.sh.content,"{u'Fn::Join': [u'\n', [u'LISTEN_ADDRESS=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)', u'export VAULT_ADDR=http://${LISTEN_ADDRESS}:8200', u""echo 'VAULT_ADDR is set to  '$VAULT_ADDR""]]}"
Resources.AWS::EC2::VPC.Condition,VPC
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./etc/profile.d/vault-addr-variable.sh.mode,000744
Parameters.EC2InstanceProfile.Default,ecsInstanceRole
Parameters.VPCID.Default,
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': u'VaultServer-RT', u'Key': u'Name'}]"
Parameters.MaxSize.Description,Maximum number of instances that can be launched in your ECS cluster.
Resources.AWS::EC2::SecurityGroupIngress.Properties.FromPort,8200
Resources.AWS::AutoScaling::AutoScalingGroup.CreationPolicy.ResourceSignal.Timeout,PT15M
Resources.AWS::EC2::VPCGatewayAttachment.Condition,VPC
Resources.AWS::EC2::Route.DependsOn,AttachGateway
Mappings.SubnetConfig.Public.CIDR,10.0.0.0/24
Parameters.VPCID.Description,By default we will create a new VPC or Select an existing VPC ID.
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.commands.command2.command,/etc/vault/vault-dev-server-start.sh
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.commands.command1.cwd,/usr/bin
Resources.AWS::EC2::VPC.Properties.CidrBlock,"{u'Fn::FindInMap': [u'SubnetConfig', u'VPC', u'CIDR']}"
Resources.AWS::AutoScaling::AutoScalingGroup.UpdatePolicy.AutoScalingRollingUpdate.MinInstancesInService,1
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,EC2 Security Group
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Listeners,"[{u'InstancePort': u'8200', u'LoadBalancerPort': u'80', u'Protocol': u'HTTP'}]"
Resources.AWS::EC2::SecurityGroupIngress.Properties.ToPort,8200
Mappings.SubnetConfig.Private.CIDR,10.0.1.0/24
Resources.AWS::EC2::SecurityGroupIngress.Properties.IpProtocol,tcp
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.sources./etc/vault,https://releases.hashicorp.com/vault/0.9.0/vault_0.9.0_linux_amd64.zip
Resources.AWS::EC2::InternetGateway.Properties.Tags,"[{u'Value': u'VaultServer-IGW', u'Key': u'Name'}]"
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': u'VaultServer-VPC', u'Key': u'Name'}]"
Parameters.KeyName.Description,Name of an existing EC2 key pair to enable SSH access to the ECS instances.
Resources.AWS::EC2::Subnet.Condition,Subnet
Parameters.EC2InstanceProfile.Description,This field is optional
Resources.AWS::EC2::Route.Condition,VPC
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./etc/vault/vault-dev-server-start.sh.owner,root
Parameters.DesiredCapacity.Default,1
Mappings.AWSRegionToAMI.eu-central-1.AMIID,ami-e28d098d
Outputs.ELBDNSName.Value,"{u'Fn::Join': [u'', [u'http://', {u'Fn::GetAtt': [u'VaultStackELB', u'DNSName']}]]}"
Parameters.SubnetID.Default,
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': u'VaultServer-Subnet', u'Key': u'Name'}]"
Parameters.DesiredCapacity.Description,Number of instances to launch in your ECS cluster.
Resources.AWS::EC2::Subnet.Properties.MapPublicIpOnLaunch,true
Parameters.MaxSize.Default,1
Resources.AWS::EC2::SecurityGroupIngress.Properties.CidrIp,0.0.0.0/0
Resources.AWS::EC2::SecurityGroup.Properties.Tags,"[{u'Value': u'VaultServer-SG', u'Key': u'Name'}]"
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.config.files./etc/profile.d/vault-addr-variable.sh.group,root
