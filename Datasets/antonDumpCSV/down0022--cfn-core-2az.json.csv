Parameters.VPCCidr.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Resources.AWS::EC2::Route.Type,AWS::EC2::Route
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,true
Parameters.VPCCidr.Type,String
Parameters.PresentationSubnetCidrAZ1.Type,String
Resources.AWS::EC2::Route.Properties.NatGatewayId,{u'Ref': u'NATAZ1'}
Resources.AWS::EC2::VPNGatewayRoutePropagation.Properties.VpnGatewayId,{u'Ref': u'VirtualPrivateGateway'}
Parameters.AppName.Description,What is the name of the application? This is used to tag resources
Outputs.VirtualPrivateGateway.Description,Virtual Private Gateway
Parameters.PresentationSubnetCidrAZ1.MaxLength,18
Parameters.DatabaseSubnetCidrAZ2.Description,CIDR block for subnet containing any databases (e.g. 10.1.2.3/25)
Resources.AWS::EC2::VPNGatewayRoutePropagation.Properties.RouteTableIds,[{u'Ref': u'InternetRouteTable'}]
Outputs.InternetSubnets.Description,Internet Subnets
Parameters.EnvironmentName.ConstraintDescription,"must be either dev, stg, prod, tst, alpha, beta, prod or test."
Parameters.EnvironmentName.Description,"What is the environment type, e.g. alpha/beta/prod/test."
Resources.AWS::EC2::VPNGateway.Properties.Type,ipsec.1
Resources.AWS::RDS::DBSubnetGroup.Properties.Tags,"[{u'Value': {u'Fn::Join': [u'-', [{u'Ref': u'AppName'}, {u'Ref': u'EnvironmentName'}, u'internal']]}, u'Key': u'Name'}, {u'Value': u'database', u'Key': u'layer'}, {u'Value': u'database subnet group', u'Key': u'purpose'}, {u'Value': {u'Ref': u'EnvironmentName'}, u'Key': u'stack'}]"
Parameters.InternetLoadBalancerSubnetCidrAZ1.MaxLength,18
Resources.AWS::EC2::VPNGateway.Properties.Tags,"[{u'Value': {u'Fn::Join': [u'-', [{u'Ref': u'AppName'}, {u'Ref': u'EnvironmentName'}]]}, u'Key': u'Name'}, {u'Value': {u'Ref': u'AppName'}, u'Key': u'app'}, {u'Value': {u'Ref': u'EnvironmentName'}, u'Key': u'stack'}, {u'Value': u'network', u'Key': u'layer'}]"
Parameters.AppName.MinLength,3
Parameters.InternetLoadBalancerSubnetCidrAZ1.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Parameters.DatabaseSubnetCidrAZ1.MaxLength,18
Parameters.DatabaseSubnetCidrAZ2.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Parameters.VPCCidr.Description,CIDR block for entire VPC (e.g. 10.1.2.3/22)
Parameters.InternetLoadBalancerSubnetCidrAZ2.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.SubnetId,{u'Ref': u'PresentationSubnetAZ1'}
Resources.AWS::EC2::NetworkAcl.Type,AWS::EC2::NetworkAcl
Parameters.ApplicationSubnetCidrAZ2.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Parameters.DatabaseSubnetCidrAZ1.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::EC2::NetworkAclEntry.Properties.NetworkAclId,{u'Ref': u'InternalSubnetAcl'}
Parameters.ApplicationSubnetCidrAZ2.Default,0.0.0.0/0
Parameters.InternalLoadBalancerSubnetCidrAZ1.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Parameters.CorporateCidrIp.Default,10.0.0.0/8
Resources.AWS::EC2::NetworkAclEntry.Properties.Icmp.Type,-1
Parameters.DatabaseSubnetCidrAZ2.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Parameters.InternalLoadBalancerSubnetCidrAZ1.MinLength,9
Resources.AWS::Redshift::ClusterSubnetGroup.Type,AWS::Redshift::ClusterSubnetGroup
Resources.AWS::EC2::NetworkAclEntry.Type,AWS::EC2::NetworkAclEntry
Parameters.ApplicationSubnetCidrAZ2.MaxLength,18
Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,-1
Parameters.CorporateCidrIp.Description,Corporate CidrIp (to restrict traffic to only the corporate IP space)
Parameters.ApplicationSubnetCidrAZ2.Type,String
Resources.AWS::EC2::Subnet.Properties.CidrBlock,{u'Ref': u'InternetLoadBalancerSubnetCidrAZ2'}
Parameters.VPCCidr.MaxLength,18
Parameters.ApplicationSubnetCidrAZ1.Description,CIDR block for subnet containing the Application Servers (e.g. 10.1.2.3/25)
Parameters.InternalLoadBalancerSubnetCidrAZ1.Type,String
Resources.AWS::EC2::NatGateway.Properties.SubnetId,{u'Ref': u'InternetLoadBalancerSubnetAZ2'}
Parameters.InternetLoadBalancerSubnetCidrAZ1.Type,String
Outputs.InternalSubnets.Description,Internal Subnets
Outputs.InternalSubnets.Value,"{u'Fn::Join': [u'', [{u'Ref': u'PresentationSubnetAZ1'}, u',', {u'Ref': u'PresentationSubnetAZ2'}, u',', {u'Ref': u'ApplicationSubnetAZ1'}, u',', {u'Ref': u'ApplicationSubnetAZ2'}, u',', {u'Ref': u'InternalLoadBalancerSubnetAZ1'}, u',', {u'Ref': u'InternalLoadBalancerSubnetAZ2'}, u',', {u'Ref': u'DatabaseSubnetAZ1'}, u',', {u'Ref': u'DatabaseSubnetAZ2'}]]}"
Parameters.InternalLoadBalancerSubnetCidrAZ2.Description,CIDR block for subnet containing the internal facing load balancers (e.g. 10.1.2.3/26)
Parameters.InternetLoadBalancerSubnetCidrAZ2.Description,CIDR block for subnet containing the internet facing load balancers (e.g. 10.1.2.3/26)
Parameters.AppName.AllowedPattern,[a-z0-9]*
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.NetworkAclId,{u'Ref': u'InternalSubnetAcl'}
Resources.AWS::EC2::SubnetRouteTableAssociation.Type,AWS::EC2::SubnetRouteTableAssociation
Resources.AWS::EC2::SubnetNetworkAclAssociation.Type,AWS::EC2::SubnetNetworkAclAssociation
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,32000
Resources.AWS::EC2::VPCGatewayAttachment.Properties.InternetGatewayId,{u'Ref': u'InternetGateway'}
Parameters.VPCCidr.Default,0.0.0.0/0
Resources.AWS::EC2::RouteTable.DependsOn,AttachIVirtualPrivateGateway
Parameters.DatabaseSubnetCidrAZ1.Default,0.0.0.0/0
Resources.AWS::EC2::VPCEndpoint.Type,AWS::EC2::VPCEndpoint
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': {u'Fn::Join': [u'-', [{u'Ref': u'AppName'}, {u'Ref': u'EnvironmentName'}, u'internal-', {u'Fn::Select': [u'1', {u'Fn::GetAZs': u''}]}]]}, u'Key': u'Name'}, {u'Value': u'internal', u'Key': u'purpose'}, {u'Value': {u'Ref': u'EnvironmentName'}, u'Key': u'stack'}, {u'Value': u'internal', u'Key': u'network'}]"
Parameters.InternalLoadBalancerSubnetCidrAZ1.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Parameters.InternalLoadBalancerSubnetCidrAZ2.MaxLength,18
Parameters.InternalLoadBalancerSubnetCidrAZ2.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Parameters.InternetLoadBalancerSubnetCidrAZ2.MaxLength,18
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Resources.AWS::EC2::Route.Properties.RouteTableId,{u'Ref': u'InternalRouteTableAZ2'}
Parameters.InternetLoadBalancerSubnetCidrAZ2.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Parameters.PresentationSubnetCidrAZ2.Description,CIDR block for subnet containing the Presentation Servers (e.g. 10.1.2.3/25)
Parameters.DatabaseSubnetCidrAZ2.MinLength,9
Resources.AWS::EC2::EIP.Properties.Domain,vpc
Outputs.InternetSubnets.Value,"{u'Fn::Join': [u'', [{u'Ref': u'InternetLoadBalancerSubnetAZ1'}, u',', {u'Ref': u'InternetLoadBalancerSubnetAZ2'}]]}"
Parameters.InternetLoadBalancerSubnetCidrAZ1.Default,0.0.0.0/0
Resources.AWS::EC2::RouteTable.Properties.VpcId,{u'Ref': u'VPC'}
Parameters.InternalLoadBalancerSubnetCidrAZ2.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::EC2::NatGateway.DependsOn,InternetGateway
Resources.AWS::EC2::NatGateway.Condition,ProvisionProdResources
Parameters.InternalLoadBalancerSubnetCidrAZ1.Default,0.0.0.0/0
Parameters.InternetLoadBalancerSubnetCidrAZ1.MinLength,9
Resources.AWS::EC2::VPC.Properties.CidrBlock,{u'Ref': u'VPCCidr'}
Parameters.PresentationSubnetCidrAZ2.MaxLength,18
Resources.AWS::EC2::Subnet.Type,AWS::EC2::Subnet
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.To,65535
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpcId,{u'Ref': u'VPC'}
Parameters.InternalLoadBalancerSubnetCidrAZ1.Description,CIDR block for subnet containing the internal facing load balancers (e.g. 10.1.2.3/26)
Resources.AWS::EC2::NatGateway.Type,AWS::EC2::NatGateway
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Parameters.DatabaseSubnetCidrAZ2.Default,0.0.0.0/0
Parameters.ApplicationSubnetCidrAZ2.Description,CIDR block for subnet containing the Application Servers (e.g. 10.1.2.3/25)
Parameters.DatabaseSubnetCidrAZ1.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Resources.AWS::EC2::EIP.Type,AWS::EC2::EIP
Resources.AWS::Redshift::ClusterSubnetGroup.Properties.Description,Default Cluster Subnet Group
Parameters.PresentationSubnetCidrAZ2.Type,String
Resources.AWS::EC2::VPCEndpoint.Properties.PolicyDocument.Statement,"[{u'Action': u'*', u'Resource': u'*', u'Effect': u'Allow', u'Principal': u'*'}]"
Resources.AWS::RDS::DBSubnetGroup.Type,AWS::RDS::DBSubnetGroup
Parameters.InternetLoadBalancerSubnetCidrAZ2.Type,String
Parameters.PresentationSubnetCidrAZ2.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,"{u'Fn::Select': [u'1', {u'Fn::GetAZs': u''}]}"
Parameters.EnvironmentName.AllowedValues,"[u'alpha', u'beta', u'prod', u'test', u'dev', u'stg', u'prd', u'tst']"
Resources.AWS::EC2::NetworkAcl.Properties.VpcId,{u'Ref': u'VPC'}
Parameters.InternetLoadBalancerSubnetCidrAZ2.MinLength,9
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.From,1
Resources.AWS::EC2::NetworkAcl.Properties.Tags,"[{u'Value': {u'Fn::Join': [u'-', [{u'Ref': u'AppName'}, {u'Ref': u'EnvironmentName'}, u'internet']]}, u'Key': u'Name'}, {u'Value': u'network', u'Key': u'layer'}, {u'Value': u'internet', u'Key': u'purpose'}, {u'Value': {u'Ref': u'EnvironmentName'}, u'Key': u'stack'}]"
Resources.AWS::EC2::VPCEndpoint.Properties.RouteTableIds,"[{u'Ref': u'InternetRouteTable'}, {u'Ref': u'InternalRouteTableAZ1'}, {u'Ref': u'InternalRouteTableAZ2'}]"
Parameters.ApplicationSubnetCidrAZ1.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Parameters.ApplicationSubnetCidrAZ2.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::EC2::InternetGateway.Properties.Tags,"[{u'Value': {u'Fn::Join': [u'-', [{u'Ref': u'AppName'}, {u'Ref': u'EnvironmentName'}]]}, u'Key': u'Name'}, {u'Value': {u'Ref': u'AppName'}, u'Key': u'app'}, {u'Value': {u'Ref': u'EnvironmentName'}, u'Key': u'stack'}, {u'Value': u'network', u'Key': u'layer'}]"
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': {u'Fn::Join': [u'-', [{u'Ref': u'AppName'}, {u'Ref': u'EnvironmentName'}]]}, u'Key': u'Name'}, {u'Value': {u'Ref': u'AppName'}, u'Key': u'app'}, {u'Value': {u'Ref': u'EnvironmentName'}, u'Key': u'stack'}, {u'Value': u'network', u'Key': u'layer'}]"
Resources.AWS::Redshift::ClusterSubnetGroup.Properties.SubnetIds,"[{u'Ref': u'DatabaseSubnetAZ1'}, {u'Ref': u'DatabaseSubnetAZ2'}]"
Parameters.InternalLoadBalancerSubnetCidrAZ2.Default,0.0.0.0/0
Resources.AWS::ElastiCache::SubnetGroup.Properties.Description,Default Cache Subnet Group
Parameters.PresentationSubnetCidrAZ1.Description,CIDR block for subnet containing the Presentation Servers (e.g. 10.1.2.3/25)
Parameters.ApplicationSubnetCidrAZ1.MaxLength,18
Resources.AWS::EC2::InternetGateway.Type,AWS::EC2::InternetGateway
Resources.AWS::EC2::VPCEndpoint.Properties.PolicyDocument.Version,2012-10-17
Parameters.AppName.Type,String
Parameters.InternalLoadBalancerSubnetCidrAZ2.MinLength,9
Parameters.VPCCidr.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::EC2::Route.Condition,ProvisionNonProdResources
Parameters.PresentationSubnetCidrAZ1.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::EC2::VPCEndpoint.Properties.VpcId,{u'Ref': u'VPC'}
Parameters.CorporateCidrIp.Type,String
Parameters.DatabaseSubnetCidrAZ2.Type,String
Resources.AWS::EC2::VPNGatewayRoutePropagation.Type,AWS::EC2::VPNGatewayRoutePropagation
Resources.AWS::EC2::NetworkAclEntry.Properties.Icmp.Code,-1
Parameters.DatabaseSubnetCidrAZ1.Type,String
Resources.AWS::ElastiCache::SubnetGroup.Properties.SubnetIds,"[{u'Ref': u'DatabaseSubnetAZ1'}, {u'Ref': u'DatabaseSubnetAZ2'}]"
Parameters.InternalLoadBalancerSubnetCidrAZ1.MaxLength,18
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpnGatewayId,{u'Ref': u'VirtualPrivateGateway'}
Resources.AWS::ElastiCache::SubnetGroup.Type,AWS::ElastiCache::SubnetGroup
Parameters.InternetLoadBalancerSubnetCidrAZ1.Description,CIDR block for subnet containing the internet facing load balancers (e.g. 10.1.2.3/26)
Parameters.PresentationSubnetCidrAZ1.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Parameters.ApplicationSubnetCidrAZ1.MinLength,9
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,{u'Ref': u'InternalRouteTableAZ1'}
Resources.AWS::EC2::VPNGateway.Type,AWS::EC2::VPNGateway
Resources.AWS::EC2::EIP.Condition,ProvisionProdResources
Parameters.InternetLoadBalancerSubnetCidrAZ2.Default,0.0.0.0/0
Resources.AWS::EC2::VPCGatewayAttachment.Type,AWS::EC2::VPCGatewayAttachment
Resources.AWS::EC2::Route.Properties.GatewayId,{u'Ref': u'InternetGateway'}
Parameters.PresentationSubnetCidrAZ1.Default,0.0.0.0/0
Resources.AWS::EC2::VPC.Type,AWS::EC2::VPC
Resources.AWS::RDS::DBSubnetGroup.Properties.DBSubnetGroupDescription,Default DB Subnet Group
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': u'internet load balancers', u'Key': u'purpose'}, {u'Value': {u'Ref': u'EnvironmentName'}, u'Key': u'stack'}, {u'Value': u'internet', u'Key': u'network'}, {u'Value': u'internet load balancers', u'Key': u'Name'}]"
Outputs.VirtualPrivateGateway.Value,{u'Ref': u'VirtualPrivateGateway'}
Parameters.DatabaseSubnetCidrAZ1.MinLength,9
Parameters.ApplicationSubnetCidrAZ1.Default,0.0.0.0/0
Parameters.PresentationSubnetCidrAZ2.Default,0.0.0.0/0
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,{u'Ref': u'DatabaseSubnetAZ1'}
Resources.AWS::EC2::RouteTable.Type,AWS::EC2::RouteTable
Resources.AWS::EC2::NatGateway.Properties.AllocationId,"{u'Fn::GetAtt': [u'NATEIPAZ2', u'AllocationId']}"
Parameters.PresentationSubnetCidrAZ2.MinLength,9
Parameters.PresentationSubnetCidrAZ1.MinLength,9
Resources.AWS::RDS::DBSubnetGroup.Properties.SubnetIds,"[{u'Ref': u'DatabaseSubnetAZ1'}, {u'Ref': u'DatabaseSubnetAZ2'}]"
Parameters.EnvironmentName.Type,String
Outputs.VPC.Description,VPC
Parameters.DatabaseSubnetCidrAZ1.Description,CIDR block for subnet containing any databases (e.g. 10.1.2.3/25)
Parameters.VPCCidr.MinLength,9
Parameters.AppName.ConstraintDescription,must be all lower case with no spaces
Parameters.DatabaseSubnetCidrAZ2.MaxLength,18
Parameters.PresentationSubnetCidrAZ2.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Parameters.ApplicationSubnetCidrAZ1.Type,String
Parameters.InternalLoadBalancerSubnetCidrAZ2.Type,String
Resources.AWS::EC2::VPCEndpoint.Properties.ServiceName,"{u'Fn::Join': [u'', [u'com.amazonaws.', {u'Ref': u'AWS::Region'}, u'.s3']]}"
Parameters.ApplicationSubnetCidrAZ1.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Parameters.ApplicationSubnetCidrAZ2.MinLength,9
Parameters.AppName.MaxLength,25
Outputs.VPC.Value,{u'Ref': u'VPC'}
Parameters.InternetLoadBalancerSubnetCidrAZ1.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
