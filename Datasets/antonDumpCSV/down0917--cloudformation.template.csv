Resources.AWS::IAM::InstanceProfile.Properties.Path,/
Parameters.WebTierDesiredCapacity.MinValue,1
Parameters.WebTierDesiredCapacity.Default,1
Parameters.SNSNotificationEmail.AllowedPattern,"[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{2,})"
Resources.AWS::AutoScaling::AutoScalingGroup.DependsOn,PublicRoute
Resources.AWS::SQS::Queue.Properties.MaximumMessageSize,262144
Parameters.WebTierAdminPassword.Description,The password that can be used to access the Administration interface
Parameters.SSHLocation.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Mappings.SubnetConfig.VPC.CIDR,10.0.0.0/16
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.Tags,"[{u'PropagateAtLaunch': u'true', u'Value': u'nfscan :: Worker-tier', u'Key': u'Name'}]"
Parameters.SNSNotificationEmail.Description,The email address you want to receive auto scaling event notifications
Resources.AWS::DynamoDB::Table.Properties.KeySchema,"[{u'KeyType': u'HASH', u'AttributeName': u'taxreceipt_id'}]"
Outputs.BackendUrl.Description,Administration interface url that you might wanna use it
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.MinSize,1
Parameters.SSHLocation.ConstraintDescription,Must be a valid IP CIDR range of the form x.x.x.x/x
Parameters.KeyName.ConstraintDescription,Can contain only ASCII characters.
Resources.AWS::AutoScaling::ScalingPolicy.Properties.AdjustmentType,ChangeInCapacity
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.Install.commands.update_region.command,"{u'Fn::Sub': u""sed -i -e 's/YourAWSRegionHere/${AWS::Region}/g' /usr/share/tomcat8/webapps/ROOT/WEB-INF/classes/application-prop.properties""}"
Resources.AWS::DynamoDB::Table.Properties.AttributeDefinitions,"[{u'AttributeName': u'taxreceipt_id', u'AttributeType': u'S'}]"
Resources.AWS::AutoScaling::AutoScalingGroup.UpdatePolicy.AutoScalingRollingUpdate.MaxBatchSize,1
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.Install.commands.update_password.command,"{u'Fn::Sub': u""sed -i -e 's/YourBackendPasswdHere/${WebTierAdminPassword}/g' /usr/share/tomcat8/webapps/ROOT/WEB-INF/classes/application-prop.properties""}"
Resources.AWS::IAM::Role.DependsOn,[u'NFScanPolicy']
Resources.AWS::EC2::VPC.Properties.InstanceTenancy,default
Mappings.AWSRegionArch2AMI.eu-central-1.WorkerTier,ami-4cb94123
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Parameters.SSHLocation.Description,The IP address range that can be used to SSH to the EC2 instances
Parameters.WebTierAdminPassword.AllowedPattern,[a-zA-Z0-9]*
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.Install.commands.update_password.ignoreErrors,false
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.HealthCheckType,ELB
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.configSets.Install,[u'Install']
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Tags,"[{u'Value': u'nfscan :: LoadBalancer :: Web-tier', u'Key': u'Name'}]"
Outputs.MobileIntegrationUrl.Value,"{u'Fn::GetAtt': [u'ElasticLoadBalancer', u'DNSName']}"
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.AvailabilityZones,"[{u'Fn::GetAtt': [u'WorkerTierSubnet1', u'AvailabilityZone']}, {u'Fn::GetAtt': [u'WorkerTierSubnet2', u'AvailabilityZone']}]"
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.UnhealthyThreshold,5
Resources.AWS::CloudWatch::Alarm.Properties.AlarmDescription,Alarm if the number of OCR messages to be processed is too high
Resources.AWS::SQS::Queue.Properties.QueueName,PROD-NFSCAN-OCR-PROCESS-IN
Mappings.SubnetConfig.WorkerTierSubnet2.CIDR,10.0.3.0/24
Resources.AWS::IAM::ManagedPolicy.Properties.PolicyDocument.Version,2012-10-17
Resources.AWS::CloudWatch::Alarm.Properties.ComparisonOperator,GreaterThanOrEqualToThreshold
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': u'nfscan', u'Key': u'Name'}]"
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Resources.AWS::S3::Bucket.Properties.Tags,"[{u'Value': u'nfscan', u'Key': u'Name'}]"
Resources.AWS::EC2::Subnet.Properties.CidrBlock,"{u'Fn::FindInMap': [u'SubnetConfig', u'WorkerTierSubnet1', u'CIDR']}"
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': u'Worker-tier :: Public Subnet 1', u'Key': u'Name'}]"
Resources.AWS::CloudWatch::Alarm.Properties.EvaluationPeriods,1
Resources.AWS::AutoScaling::LaunchConfiguration.Properties.AssociatePublicIpAddress,true
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.Install.commands.update_queue_in.ignoreErrors,false
Outputs.MobileIntegrationUrl.Description,Url that you're gonna provide to the mobile app
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Timeout,5
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Interval,30
Parameters.WorkerTierDesiredCapacity.MaxValue,10
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.Install.commands.update_username.command,"{u'Fn::Sub': u""sed -i -e 's/YourBackendUsernameHere/${WebTierAdminName}/g' /usr/share/tomcat8/webapps/ROOT/WEB-INF/classes/application-prop.properties""}"
Parameters.WebTierDesiredCapacity.MaxValue,10
Resources.AWS::SQS::Queue.Properties.MessageRetentionPeriod,345600
Resources.AWS::CloudWatch::Alarm.Properties.Namespace,Loducca/NFScan
Parameters.WebTierAdminName.Description,The username that can be used to access the Administration interface
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.Install.commands.update_bucket.command,"{u'Fn::Sub': u""sed -i -e 's/YourBucketNameHere/${S3TaxReceiptsBucket}/g' /usr/share/tomcat8/webapps/ROOT/WEB-INF/classes/application-prop.properties""}"
Mappings.SubnetConfig.WorkerTierSubnet1.CIDR,10.0.2.0/24
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.Install.commands.update_queue_out.command,"{u'Fn::Sub': u""sed -i -e 's/YourSQSQueueOutHere/${SQSOcrProcessOut.QueueName}/g' /etc/ocr-process-service/ocr-process-service.cfg""}"
Resources.AWS::IAM::ManagedPolicy.Properties.PolicyDocument.Statement,"[{u'Action': [u's3:ListBucket'], u'Resource': [{u'Fn::Sub': u'arn:aws:s3:::${S3TaxReceiptsBucket}'}], u'Effect': u'Allow'}, {u'Action': [u's3:PutObject', u's3:GetObject', u's3:DeleteObject', u's3:PutObjectAcl'], u'Resource': [{u'Fn::Sub': u'arn:aws:s3:::${S3TaxReceiptsBucket}/*'}], u'Effect': u'Allow'}, {u'Action': [u'sqs:DeleteMessage', u'sqs:GetQueueAttributes', u'sqs:GetQueueUrl', u'sqs:ReceiveMessage', u'sqs:SendMessage'], u'Resource': [{u'Fn::Sub': u'${SQSOcrProcessIn.Arn}'}, {u'Fn::Sub': u'${SQSOcrProcessOut.Arn}'}], u'Effect': u'Allow'}, {u'Action': [u'dynamodb:BatchGetItem', u'dynamodb:BatchWriteItem', u'dynamodb:DeleteItem', u'dynamodb:GetItem', u'dynamodb:PutItem', u'dynamodb:Query', u'dynamodb:Scan', u'dynamodb:UpdateItem', u'dynamodb:DescribeTable'], u'Resource': [{u'Fn::Sub': u'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDBOcrTransaction}'}, {u'Fn::Sub': u'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDBTaxReceipt}'}, {u'Fn::Sub': u'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDBTaxReceiptArchive}'}], u'Effect': u'Allow'}, {u'Action': [u'cloudwatch:PutMetricData'], u'Resource': [u'*'], u'Effect': u'Allow'}]"
Resources.AWS::EC2::Route.DependsOn,GatewayToInternet
Parameters.WebTierAdminPassword.MaxLength,18
Resources.AWS::SQS::Queue.Properties.VisibilityTimeout,30
Parameters.SNSNotificationEmail.MinLength,6
Mappings.SubnetConfig.WebTierSubnet2.CIDR,10.0.1.0/24
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.HealthCheckGracePeriod,200
Resources.AWS::SQS::Queue.Properties.DelaySeconds,0
Resources.AWS::EC2::Subnet.Properties.MapPublicIpOnLaunch,True
Resources.AWS::AutoScaling::AutoScalingGroup.UpdatePolicy.AutoScalingRollingUpdate.MinInstancesInService,1
Resources.AWS::CloudWatch::Alarm.Properties.Period,60
Parameters.WebTierAdminName.MaxLength,18
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.HealthyThreshold,3
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupEgress,[]
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Worker-tier Security Group with no access to the other instances
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Listeners,"[{u'InstancePort': u'8080', u'LoadBalancerPort': u'80', u'Protocol': u'HTTP'}]"
Resources.AWS::CloudWatch::Alarm.Properties.Statistic,Sum
Resources.AWS::AutoScaling::ScalingPolicy.Properties.Cooldown,300
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,"{u'Fn::Select': [u'0', {u'Fn::GetAZs': u''}]}"
Resources.AWS::AutoScaling::ScalingPolicy.Properties.ScalingAdjustment,-1
Resources.AWS::CloudWatch::Alarm.Properties.MetricName,OCR_PROCESS_IN_QUEUE_MESSAGES_SENT
Parameters.WebTierAdminName.AllowedPattern,[a-zA-Z0-9]*
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.Comment1,Configure properties files with the resources created in this cloudformation template
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'ec2.amazonaws.com']}}]"
Resources.AWS::IAM::InstanceProfile.DependsOn,[u'NfScanRole']
Resources.AWS::EC2::InternetGateway.Properties.Tags,"[{u'Value': u'nfscan', u'Key': u'Name'}]"
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': u'nfscan', u'Key': u'Name'}]"
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.Install.commands.update_bucket.ignoreErrors,false
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.Install.commands.update_queue_in.command,"{u'Fn::Sub': u""sed -i -e 's/YourSQSQueueInHere/${SQSOcrProcessIn.QueueName}/g' /etc/ocr-process-service/ocr-process-service.cfg""}"
Parameters.KeyName.Description,Name of an existing EC2 KeyPair to enable SSH access to the instance
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.Install.commands.update_region.ignoreErrors,false
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.CrossZone,True
Parameters.WebTierAdminPassword.NoEcho,True
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.ReadCapacityUnits,1
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Target,HTTP:8080/
Resources.AWS::AutoScaling::AutoScalingGroup.UpdatePolicy.AutoScalingRollingUpdate.PauseTime,PT5M
Parameters.SSHLocation.MinLength,9
Parameters.WorkerTierDesiredCapacity.Default,1
Resources.AWS::SQS::Queue.Properties.ReceiveMessageWaitTimeSeconds,0
Parameters.WebTierAdminPassword.MinLength,6
Outputs.BackendUrl.Value,{u'Fn::Sub': u'http://${ElasticLoadBalancer.DNSName}/be'}
Resources.AWS::AutoScaling::AutoScalingGroup.Properties.MaxSize,10
Resources.AWS::IAM::ManagedPolicy.Properties.Description,nfscan_policy
Resources.AWS::DynamoDB::Table.Properties.TableName,PROD-NFSCAN-TAXRECEIPT
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.Install.commands.update_queue_out.ignoreErrors,false
Mappings.SubnetConfig.WebTierSubnet1.CIDR,10.0.0.0/24
Mappings.AWSRegionArch2AMI.eu-central-1.WebTier,ami-47b94128
Resources.AWS::DynamoDB::Table.Properties.ProvisionedThroughput.WriteCapacityUnits,1
Resources.AWS::CloudWatch::Alarm.Properties.Threshold,3
Parameters.WebTierDesiredCapacity.Description,The amount of instances in the web tier
Parameters.WebTierAdminName.Default,admin
Parameters.SSHLocation.MaxLength,18
Resources.AWS::IAM::ManagedPolicy.DependsOn,"[u'DynamoDBOcrTransaction', u'DynamoDBTaxReceiptArchive', u'DynamoDBTaxReceipt', u'S3TaxReceiptsBucket', u'SQSOcrProcessIn', u'SQSOcrProcessOut']"
Parameters.WebTierAdminName.MinLength,5
Parameters.SSHLocation.Default,0.0.0.0/0
Parameters.SNSNotificationEmail.MaxLength,70
Resources.AWS::AutoScaling::LaunchConfiguration.Metadata.AWS::CloudFormation::Init.Install.commands.update_username.ignoreErrors,false
Parameters.WorkerTierDesiredCapacity.MinValue,1
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,[]
Resources.AWS::EC2::VPC.Properties.CidrBlock,"{u'Fn::FindInMap': [u'SubnetConfig', u'VPC', u'CIDR']}"
Parameters.WorkerTierDesiredCapacity.Description,The amount of instances in the worker tier
