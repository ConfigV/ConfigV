Resources.AWS::IAM::InstanceProfile.Properties.Path,/
Resources.AWS::IAM::User.Properties.ManagedPolicyArns,[u'arn:aws:iam::aws:policy/AWSCodeCommitPowerUser']
Resources.AWS::EC2::SecurityGroup.DependsOn,DevAttachGateway
Parameters.KeyName.ConstraintDescription,must be the name of an existing EC2 KeyPair.
Outputs.CodePipeLineARN.Description,ARN of the CodePipeline Service Role
Resources.AWS::EC2::InternetGateway.DependsOn,DevVpc
Resources.AWS::EC2::SubnetRouteTableAssociation.DependsOn,"[u'DevPublicRouteTable', u'DevPrivateSubnet', u'DevAttachGateway']"
Resources.AWS::IAM::Policy.Properties.PolicyDocument.Statement,"[{u'Action': [u'ec2:*', u'logs:*', u'cloudformation:*', u's3:*', u'iam:PassRole', u'iam:ListInstanceProfiles', u'iam:UploadSSHPublicKey', u'codepipeline:AcknowledgeJob', u'codepipeline:GetJobDetails', u'codepipeline:PollForJobs', u'codepipeline:PutJobFailureResult', u'codepipeline:PutJobSuccessResult'], u'Resource': u'*', u'Effect': u'Allow'}]"
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Resources.AWS::CloudFormation::WaitCondition.Properties.Timeout,1800
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Resources.AWS::S3::Bucket.Properties.VersioningConfiguration.Status,Enabled
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.UnhealthyThreshold,5
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': u'Dev Private Subnet', u'Key': u'Name'}, {u'Value': u'Development', u'Key': u'Environment'}]"
Parameters.DevPrivateSubnetCidr.Default,10.1.2.0/24
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Timeout,5
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Interval,30
Resources.AWS::EC2::RouteTable.DependsOn,"[u'DevVpc', u'DevAttachGateway']"
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': u'Dev Public Route Table', u'Key': u'Name'}]"
Mappings.AmazonLinuxAMI.eu-central-1.AMI,ami-a8221fb5
Resources.AWS::EC2::NetworkAcl.DependsOn,DevAttachGateway
Resources.AWS::EC2::Route.DependsOn,"[u'DevPublicRouteTable', u'DevAttachGateway']"
Outputs.JenkinsEndpoint.Description,Endpoint used to connect to the Jenkins Server
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'root', u'PolicyDocument': {u'Version': u'2012-10-17', u'Statement': [{u'Action': [u's3:GetObject', u's3:GetObjectVersion', u's3:GetBucketVersioning'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u's3:PutObject'], u'Resource': [u'arn:aws:s3:::codepipeline*', u'arn:aws:s3:::elasticbeanstalk*'], u'Effect': u'Allow'}, {u'Action': [u'codedeploy:CreateDeployment', u'codedeploy:GetApplicationRevision', u'codedeploy:GetDeployment', u'codedeploy:GetDeploymentConfig', u'codedeploy:RegisterApplicationRevision'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u'elasticbeanstalk:*', u'ec2:*', u'elasticloadbalancing:*', u'autoscaling:*', u'cloudwatch:*', u's3:*', u'sns:*', u'cloudformation:*', u'rds:*', u'sqs:*', u'ecs:*', u'iam:PassRole'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u'lambda:InvokeFunction', u'lambda:ListFunctions'], u'Resource': u'*', u'Effect': u'Allow'}]}}]"
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupEgress,"[{u'ToPort': u'65535', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'0'}, {u'ToPort': u'65535', u'IpProtocol': u'udp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'0'}]"
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Enable internal access to the NAT device
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Listeners,"[{u'InstancePort': u'8080', u'LoadBalancerPort': u'80', u'Protocol': u'HTTP'}]"
Resources.AWS::CloudFormation::WaitCondition.DependsOn,CIInstance
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,"{u'Fn::Select': [u'0', {u'Fn::GetAZs': u''}]}"
Outputs.JenkinsEndpoint.Value,"{u'Fn::GetAtt': [u'DevWebAppLoadBalancer', u'DNSName']}"
Resources.AWS::EC2::Instance.Properties.SourceDestCheck,false
Resources.AWS::EC2::NetworkAcl.Properties.Tags,"[{u'Value': u'Dev Private NACL', u'Key': u'Network'}, {u'Value': u'Development', u'Key': u'Environment'}]"
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'ec2.amazonaws.com']}}]"
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': u'Dev VPC', u'Key': u'VPC'}, {u'Value': u'Dev VPC', u'Key': u'Name'}]"
Resources.AWS::ElasticLoadBalancing::LoadBalancer.DependsOn,CIInstance
Resources.AWS::EC2::Subnet.DependsOn,DevAttachGateway
Parameters.KeyName.Description,Name of an existing EC2 KeyPair to enable SSH access to the instance
Parameters.DevVpcCidr.Default,10.1.0.0/16
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Target,HTTP:8080/login
Resources.AWS::EC2::VPCGatewayAttachment.DependsOn,"[u'DevVpc', u'DevInternetGateway']"
Parameters.DevVpcCidr.Description,CIDR Block for Developer VPC
Parameters.DevPublicSubnetCidr.Description,Dev Environment Public Subnet
Resources.AWS::IAM::Role.Properties.Path,/
Outputs.CodePipeLineARN.Value,"{u'Fn::GetAtt': [u'CodePipeLineRole', u'Arn']}"
Resources.AWS::EC2::Instance.DependsOn,"[u'DevPublicSubnet', u'CIUser', u'CIInstanceSecurityGroup', u'DevAttachGateway']"
Parameters.DevPublicSubnetCidr.Default,10.1.0.0/24
Parameters.DevVpcCidr.AllowedValues,[u'10.1.0.0/16']
Parameters.DevPrivateSubnetCidr.Description,Dev Environment Private Subnet
Resources.AWS::IAM::Policy.Properties.PolicyName,CIInstance_RestrictedAccess
Resources.AWS::EC2::SecurityGroup.Properties.Tags,"[{u'Value': u'DevJenkinsSecurityGroup', u'Key': u'Name'}, {u'Value': u'Development', u'Key': u'Environment'}]"
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.HealthyThreshold,3
Resources.AWS::EC2::Instance.Properties.Tags,"[{u'Value': u'CI-Instance', u'Key': u'Name'}, {u'Value': u'Development', u'Key': u'DeploymentType'}]"
