Resources.AWS::IAM::Policy.Properties.PolicyDocument.Version,2012-10-17
Resources.AWS::Lambda::Function.Properties.Description,Function to isolate Ec2 instance
Parameters.SSHLocation.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Parameters.NodeRunTime.Description,Node Runtime
Resources.AWS::Lambda::Function.Properties.Timeout,300
Parameters.SSHLocation.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Parameters.AMIID.Default,ami-c3d113a1
Resources.AWS::Lambda::Function.Properties.Handler,isolateInstance.lambda_handler
Resources.AWS::Lambda::Function.Properties.FunctionName,sec-ir-2-isolateInstance
Resources.AWS::IAM::Policy.Properties.PolicyDocument.Statement,"[{u'Action': [u'logs:CreateLogGroup', u'logs:CreateLogStream', u'logs:PutLogEvents', u'logs:DescribeLog*'], u'Resource': u'arn:aws:logs:*:*:*', u'Effect': u'Allow'}, {u'Action': [u'ec2:*', u'elasticloadbalancing:*', u'ssm:*'], u'Resource': u'*', u'Effect': u'Allow'}, {u'Action': [u'iam:ListRolePolicies', u'iam:ListRoles', u'iam:Pass*'], u'Resource': u'*', u'Effect': u'Allow', u'Sid': u'ListExistingRolesAndPolicies'}, {u'Action': [u'lambda:InvokeFunction'], u'Resource': u'*', u'Effect': u'Allow', u'Sid': u'InvokePermission'}, {u'Action': [u'states:*'], u'Resource': u'*', u'Effect': u'Allow', u'Sid': u'stepinvocation'}]"
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Parameters.SSHLocation.Description, The IP address range that can be used to SSH to the EC2 instances
Parameters.SubnetCIDR.MaxLength,18
Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,6
Parameters.VPCCIDR.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Outputs.VPCId.Description,VPCId of the newly created VPC
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,102
Parameters.lambdas3bucketsname.Default,sydney-summit-incident-response
Outputs.SubnetDetails.Description,SubnetId of the subnet Created
Parameters.lambdas3bucketsname.Description,Bucket name where lambda functions reside
Parameters.VPCCIDR.MinLength,9
Parameters.SSHLocation.MaxLength,18
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Resources.AWS::StepFunctions::StateMachine.Properties.DefinitionString,"{u'Fn::Join': [u'', [u'{', u'""Comment"": "" A state machine that submits a Job to AWS Batch and monitors the Job until it completes. "",', u'""StartAt"": ""Create Support Ticket Job"",', u'""States"": {', u'""Create Support Ticket Job"": {', u'""Type"": ""Task"",', u'""Resource"": ""', {u'Fn::GetAtt': [u'CreateTicket', u'Arn']}, u'"",', u'""ResultPath"": ""$.supportID"",', u'""Next"": ""Start Isolating the instance"",', u'""Retry"": [{', u'""ErrorEquals"": [""States.ALL""],', u'""IntervalSeconds"": 1,', u'""MaxAttempts"": 3,', u'""BackoffRate"": 2.0', u'}]', u'},', u'""Start Isolating the instance"": {', u'""Type"": ""Task"",', u'""Resource"": ""', {u'Fn::GetAtt': [u'IsolateInstance', u'Arn']}, u'"",', u'""Next"": ""Job Complete?"",', u'""InputPath"": ""$"",', u'""ResultPath"": ""$"",', u'""Retry"": [{', u'""ErrorEquals"": [""States.ALL""],', u'""IntervalSeconds"": 1,', u'""MaxAttempts"": 3,', u'""BackoffRate"": 2.0', u'}]', u'},', u'""Wait X Seconds"": {', u'""Type"": ""Wait"",', u'""SecondsPath"": ""$.wait_time"",', u'""Next"": ""Start Isolating the instance""', u'},', u'""Job Complete?"": {', u'""Type"": ""Choice"",', u'""Choices"": [{', u'""Variable"": ""$.STATUS"",', u'""StringEquals"": ""FAILED"",', u'""Next"": ""Job Failed""', u'}, {', u'""Variable"": ""$.STATUS"",', u'""StringEquals"": ""SUCCEEDED"",', u'""Next"": ""Alert Security Team on Isolation and Incident""', u'}],', u'""Default"": ""Wait X Seconds""', u'},', u'""Job Failed"": {', u'""Type"": ""Fail"",', u'""Cause"": ""AWS Batch Job Failed"",', u'""Error"": ""DescribeJob returned FAILED""', u'},', u'', u'""Alert Security Team on Isolation and Incident"": {', u'""Type"": ""Task"",', u'""Resource"": ""', {u'Fn::GetAtt': [u'SendIsolationNotification', u'Arn']}, u'"",', u'""InputPath"": ""$"",', u'""ResultPath"": ""$"",', u'""Next"": ""Prepare for Remediation"",', u'""Retry"": [{', u'""ErrorEquals"": [""States.ALL""],', u'""IntervalSeconds"": 1,', u'""MaxAttempts"": 3,', u'""BackoffRate"": 2.0', u'}]', u'},', u'""Prepare for Remediation"": {', u'""Type"": ""Task"",', u'""Resource"": ""', {u'Fn::GetAtt': [u'createRemediationStepsLambda', u'Arn']}, u'"",', u'""InputPath"": ""$"",', u'""ResultPath"": ""$.snapshotID"",', u'""Next"": ""Start Forensic Instance"",', u'""Retry"": [{', u'""ErrorEquals"": [""States.ALL""],', u'""IntervalSeconds"": 1,', u'""MaxAttempts"": 3,', u'""BackoffRate"": 2.0', u'}]', u'},', u'""Start Forensic Instance"": {', u'""Type"": ""Task"",', u'""Resource"": ""', {u'Fn::GetAtt': [u'runInstance', u'Arn']}, u'"",', u'""InputPath"": ""$"",', u'""ResultPath"": ""$"",', u'""Next"": ""Attach Volume For Forensic Analysis"",', u'""Retry"": [{', u'""ErrorEquals"": [""States.ALL""],', u'""IntervalSeconds"": 1,', u'""MaxAttempts"": 3,', u'""BackoffRate"": 2.0', u'}]', u'},', u'""Attach Volume For Forensic Analysis"": {', u'""Type"": ""Task"",', u'""Resource"": ""', {u'Fn::GetAtt': [u'CreateAndAttachAffectedVolume', u'Arn']}, u'"",', u'""InputPath"": ""$"",', u'""Next"": ""SSM Activation Job Complete?"",', u'""Retry"": [{', u'""ErrorEquals"": [""States.ALL""],', u'""IntervalSeconds"": 1,', u'""MaxAttempts"": 3,', u'""BackoffRate"": 2.0', u'}]', u'},', u'""Wait for instance boot up"": {', u'""Type"": ""Wait"",', u'""SecondsPath"": ""$.wait_time"",', u'""Next"": ""IsSSMInstalled""', u'},', u'""IsSSMInstalled"": {', u'""Type"": ""Task"",', u'""Resource"": ""', {u'Fn::GetAtt': [u'IsSSMInstalled', u'Arn']}, u'"",', u'""InputPath"": ""$"",', u'""Next"": ""SSM Activation Job Complete?"",', u'""Retry"": [{', u'""ErrorEquals"": [""States.ALL""],', u'""IntervalSeconds"": 1,', u'""MaxAttempts"": 3,', u'""BackoffRate"": 2.0', u'}]', u'},', u'', u'""SSM Activation Job Complete?"": {', u'""Type"": ""Choice"",', u'""Choices"": [{', u'""Variable"": ""$.SSM_STATUS"",', u'""StringEquals"": ""FAILED"",', u'""Next"": ""SSM Activation Job Failed""', u'}, {', u'""Variable"": ""$.SSM_STATUS"",', u'""StringEquals"": ""SUCCEEDED"",', u'""Next"": ""Generate Forensic Report""', u'}],', u'""Default"": ""Wait for instance boot up""', u'},', u'""SSM Activation Job Failed"": {', u'""Type"": ""Fail"",', u'""Cause"": ""AWS SSM Activation Job Failed"",', u'""Error"": ""DescribeJob returned FAILED""', u'},', u'""Generate Forensic Report"": {', u'""Type"": ""Task"",', u'""Resource"": ""', {u'Fn::GetAtt': [u'RunForesnsicAnalysis', u'Arn']}, u'"",', u'""InputPath"": ""$"",', u'""End"": true,', u'""Retry"": [{', u'""ErrorEquals"": [""States.ALL""],', u'""IntervalSeconds"": 1,', u'""MaxAttempts"": 3,', u'""BackoffRate"": 2.0', u'}]', u'}', u'}', u'}']]}"
Resources.AWS::EC2::Route.DependsOn,AttachGateway
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.To,65535
Resources.AWS::StepFunctions::StateMachine.Properties.RoleArn,"{u'Fn::GetAtt': [u'LambdaExecutionRole', u'Arn']}"
Parameters.instanceProfile.Description,Instance Profile Details Details
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Parameters.IncidentResponseTopic.Default,IncidentResponseTopic-v1
Parameters.IncidentResponseTopic.Description,SNS RTopic
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Enable SSH access via port 22
Resources.AWS::Lambda::Permission.Properties.Principal,sns.amazonaws.com
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,true
Parameters.VpcId.Description,VpcId of your existing Virtual Private Cloud (VPC)
Resources.AWS::StepFunctions::StateMachine.Properties.StateMachineName,Sydney-Summit-Incident-Response-StateMachine
Parameters.SubnetCIDR.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.From,1024
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'lambda.amazonaws.com', u'states.amazonaws.com']}}]"
Parameters.VPCCIDR.Default,10.1.0.0/16
Parameters.NodeRunTime.Default,nodejs6.10
Parameters.lambdas3keyname.Description,Key name of lambda functions in S3
Resources.AWS::Lambda::Function.Properties.Environment.Variables.SNS,SNS_DATA
Parameters.VPCCIDR.MaxLength,18
Parameters.VpcId.ConstraintDescription,must be the VPC Id of an existing Virtual Private Cloud.
Parameters.SSHLocation.MinLength,9
Resources.AWS::Lambda::Permission.Properties.Action,lambda:InvokeFunction
Parameters.HookUrlName.Description,AWS Slack URL Name
Parameters.SubnetCIDR.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::Lambda::Permission.DependsOn,[u'SNSParserLambda']
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Parameters.VPCCIDR.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Parameters.SlackChannelName.Default,#aws-security
Parameters.SubnetCIDR.Description,IP Address range for the VPN connected Subnet
Parameters.SubnetCIDR.Default,10.1.0.0/24
Parameters.lambdas3keyname.Default,incidentresponse.zip
Parameters.AMIID.Description,AMI Details
Parameters.IsolatedInstanceSecurityGroup.Description,Security Group for isolation
Parameters.SubnetCIDR.MinLength,9
Parameters.SlackChannelName.Description,AWS Slack Channel Name to publish the message
Parameters.SSHLocation.Default,0.0.0.0/0
Resources.AWS::Lambda::Function.Properties.Runtime,python3.6
Resources.AWS::IAM::Policy.Properties.PolicyName,IncidentResponseLambdaPolicy
Resources.AWS::Lambda::Function.Properties.Role,"{u'Fn::GetAtt': [u'LambdaExecutionRole', u'Arn']}"
Resources.AWS::SNS::Topic.Properties.Subscription,"[{u'Endpoint': {u'Fn::GetAtt': [u'SNSParserLambda', u'Arn']}, u'Protocol': u'lambda'}]"
Parameters.VPCCIDR.Description,IP Address range for the VPN connected VPC
