Parameters.AdditionalReportInfoWriteCapacityUnits.Description,Number of writes per second.
Resources.AWS::Lambda::Function.Properties.Description,Lambda used to sanitize uploaded attachments.
Resources.AWS::Lambda::Permission.Properties.FunctionName,"{u'Fn::GetAtt': [u'SanitizationLambda', u'Arn']}"
Parameters.DeploymentStackArn.Description,ARN of the deployment stack that owns this resource group stack.
Resources.Custom::AccessControl.DependsOn,"[u'AttachmentBucket', u'ServiceApi', u'ServiceLambda', u'SanitizationLambda', u'SanitizedBucket', u'AdditionalReportInfo', u'RecentSearches', u'ClientConfiguration']"
Resources.AWS::Lambda::Function.Properties.Timeout,30
Resources.AWS::DynamoDB::Table.Properties.KeySchema,"[{u'KeyType': u'HASH', u'AttributeName': u'universal_unique_identifier'}, {u'KeyType': u'RANGE', u'AttributeName': u'section'}]"
Parameters.ConfigurationBucket.Description,Bucket that contains configuration data.
Resources.AWS::Lambda::Function.Properties.Handler,sanitization_lambda.main
Outputs.ServiceUrl.Description,The service url.
Resources.AWS::Lambda::Function.Properties.Code.S3Bucket,"{u'Fn::GetAtt': [u'SanitizationLambdaConfiguration', u'ConfigurationBucket']}"
Parameters.ServiceApiCacheClusterSize.Description,Indicates whether cache clustering is enabled for the service API.
Resources.AWS::DynamoDB::Table.Properties.AttributeDefinitions,"[{u'AttributeName': u'universal_unique_identifier', u'AttributeType': u'S'}, {u'AttributeName': u'section', u'AttributeType': u'S'}]"
Resources.AWS::Lambda::Function.Properties.MemorySize,768
Parameters.AdditionalReportInfoWriteCapacityUnits.Default,1
Parameters.ResourceGroupName.Description,Name of the resource group.
Resources.AWS::S3::Bucket.Properties.CorsConfiguration.CorsRules,"[{u'AllowedHeaders': [u'*'], u'MaxAge': 3000, u'AllowedMethods': [u'GET'], u'Id': u'defect_reporter_cgp_policy', u'AllowedOrigins': [u'*']}]"
Resources.AWS::Lambda::Permission.Properties.SourceArn,"{u'Fn::GetAtt': [u'AttachmentBucket', u'Arn']}"
Resources.Custom::PatchS3Notifications.DependsOn,"[u'SanitizationLambda', u'SanitizationLambdaConfiguration', u'SanitizationLambdaInvokePermission']"
Resources.Custom::ServiceApi.Metadata.CloudCanvas.Permissions.ResourceSuffix,"[u'/api/POST/service/upload', u'/api/GET/clientconfiguration']"
Resources.Custom::LambdaConfiguration.Properties.Runtime,python2.7
Resources.AWS::Lambda::Permission.Properties.Action,lambda:InvokeFunction
Parameters.RecentSearchesReadCapacityUnits.Default,1
Outputs.ServiceUrl.Value,"{u'Fn::GetAtt': [u'ServiceApi', u'Url']}"
Parameters.DeploymentName.Description,Name of the resource group's deployment.
Parameters.AdditionalReportInfoReadCapacityUnits.Default,1
Resources.AWS::Lambda::Function.Metadata.CloudCanvas.Permissions,"[{u'Action': u'lambda:InvokeFunction', u'AbstractRole': u'ServiceApi'}, {u'Action': [u's3:GetObject', u's3:PutObject'], u'ResourceSuffix': u'/*', u'AbstractRole': [u'CloudGemPortalAdministratorRole']}, {u'Action': [u's3:GetObject', u's3:PutObject'], u'ResourceSuffix': u'/*', u'AbstractRole': [u'CloudGemPortalUserRole']}]"
Parameters.ServiceApiCacheClusterEnabled.Default,false
Resources.Custom::ServiceApi.Metadata.CloudCanvas.Permissions.AbstractRole,Player
Parameters.RecentSearchesWriteCapacityUnits.Description,Number of writes per second.
Resources.Custom::PatchS3Notifications.Properties.SanitizationLambdaArn,"{u'Fn::GetAtt': [u'SanitizationLambda', u'Arn']}"
Resources.Custom::ServiceApi.Properties.SwaggerSettings.ServiceLambdaArn,"{u'Fn::GetAtt': [u'ServiceLambda', u'Arn']}"
Resources.AWS::Lambda::Permission.Properties.Principal,s3.amazonaws.com
Outputs.SanitizedBucketName.Description,Name of the attachment bucket.
Parameters.CloudCanvasStack.Default,ResourceGroup
Parameters.AdditionalReportInfoReadCapacityUnits.Description,Number of reads per second.
Parameters.ProjectResourceHandler.Description,Service token of the custom resource handler.
Parameters.CloudCanvasStack.Description,Identifies this stack as a Lumberyard Cloud Canvas managed stack.
Resources.Custom::LambdaConfiguration.Properties.FunctionName,ServiceLambda
Resources.AWS::Lambda::Function.Properties.Code.S3Key,"{u'Fn::GetAtt': [u'SanitizationLambdaConfiguration', u'ConfigurationKey']}"
Parameters.ConfigurationKey.Description,Location in the configuration bucket of configuration data.
Resources.AWS::S3::Bucket.Metadata.CloudCanvas.Permissions,"[{u'Action': [u's3:GetObject', u's3:PutObject'], u'ResourceSuffix': u'/*', u'AbstractRole': [u'CloudGemPortalAdministratorRole']}, {u'Action': [u's3:GetObject', u's3:PutObject'], u'ResourceSuffix': u'/*', u'AbstractRole': [u'CloudGemPortalUserRole']}, {u'Action': [u's3:PutObject'], u'ResourceSuffix': u'/*', u'AbstractRole': [u'SanitizationLambda']}]"
Resources.AWS::Lambda::Function.Properties.Role,"{u'Fn::GetAtt': [u'SanitizationLambdaConfiguration', u'Role']}"
Parameters.ServiceApiCacheClusterEnabled.Description,Indicates whether cache clustering is enabled for the service API.
Resources.AWS::DynamoDB::Table.Metadata.CloudCanvas.Permissions,"[{u'Action': [u'dynamodb:GetItem', u'dynamodb:PutItem', u'dynamodb:UpdateItem', u'dynamodb:Query'], u'ResourceSuffix': [u'', u'/*'], u'AbstractRole': u'ServiceLambda'}]"
Metadata.CloudCanvas.Id,$Revision: #1 $
Parameters.RecentSearchesReadCapacityUnits.Description,Number of reads per second.
Parameters.RecentSearchesWriteCapacityUnits.Default,1
Resources.AWS::Lambda::Function.Properties.Runtime,"{u'Fn::GetAtt': [u'SanitizationLambdaConfiguration', u'Runtime']}"
Resources.Custom::ServiceApi.Metadata.CloudCanvas.Permissions.Action,execute-api:Invoke
Parameters.ServiceApiCacheClusterSize.Default,0.5
