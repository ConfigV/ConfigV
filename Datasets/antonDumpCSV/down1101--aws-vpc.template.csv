Parameters.PrivateSubnet1ACIDR.ConstraintDescription,CIDR block parameter must be in the form x.x.x.x/16-28
Metadata.AWS::CloudFormation::Interface.ParameterLabels.PrivateSubnet3ACIDR.default,Private subnet 3A CIDR
Outputs.PrivateSubnet1BID.Value,{u'Ref': u'PrivateSubnet1B'}
Outputs.PrivateSubnet3BID.Condition,AdditionalPrivateSubnets&3AZCondition
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,false
Outputs.PrivateSubnet1BCIDR.Description,Private subnet 1B CIDR in Availability Zone 1
Outputs.NAT3EIP.Description,NAT Gateway 3 IP address
Resources.AWS::EC2::Route.Properties.NatGatewayId,"{u'Fn::If': [u'NATGatewayCondition', {u'Ref': u'NATGateway4'}, {u'Ref': u'AWS::NoValue'}]}"
Outputs.NAT4EIP.Value,{u'Ref': u'NAT4EIP'}
Resources.AWS::EC2::VPCGatewayAttachment.Properties.InternetGatewayId,{u'Ref': u'InternetGateway'}
Outputs.PrivateSubnet1AID.Description,Private subnet 1A ID in Availability Zone 1
Parameters.NumberOfAZs.Description,Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.
Parameters.PrivateSubnet2BCIDR.Default,10.0.200.0/21
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,100
Resources.AWS::EC2::RouteTable.Condition,AdditionalPrivateSubnetsCondition
Resources.AWS::EC2::Route.Type,AWS::EC2::Route
Outputs.NAT4EIP.Description,NAT Gateway 4 IP address
Outputs.PublicSubnet4CIDR.Condition,4AZCondition
Metadata.AWS::CloudFormation::Interface.ParameterLabels.PrivateSubnet3BCIDR.default,Private subnet 3B with dedicated network ACL CIDR
Mappings.AWSInfoRegionMap.eu-central-1.Partition,aws
Parameters.VPCCIDR.Type,String
Parameters.PublicSubnet4CIDR.AllowedPattern,^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
Metadata.AWS::CloudFormation::Interface.ParameterLabels.PrivateSubnet2BCIDR.default,Private subnet 2B with dedicated network ACL CIDR
Outputs.PrivateSubnet2BCIDR.Description,Private subnet 2B CIDR in Availability Zone 2
Parameters.PrivateSubnet1BCIDR.Default,10.0.192.0/21
Metadata.AWS::CloudFormation::Interface.ParameterLabels.NumberOfAZs.default,Number of Availability Zones
Parameters.AvailabilityZones.Description,List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved.
Resources.AWS::EC2::VPCEndpoint.Properties.PolicyDocument.Version,2012-10-17
Outputs.PrivateSubnet3AID.Description,Private subnet 3A ID in Availability Zone 3
Outputs.PrivateSubnet1BCIDR.Condition,AdditionalPrivateSubnetsCondition
Resources.AWS::EC2::EIP.DependsOn,VPCGatewayAttachment
Parameters.PrivateSubnet4ACIDR.Default,10.0.96.0/19
Resources.AWS::EC2::Subnet.Condition,4AZCondition
Parameters.PrivateSubnet2ACIDR.Type,String
Parameters.PublicSubnet2CIDR.Default,10.0.144.0/20
Metadata.AWS::CloudFormation::Interface.ParameterLabels.PrivateSubnet4ACIDR.default,Private subnet 4A CIDR
Outputs.NAT3EIP.Value,{u'Ref': u'NAT3EIP'}
Resources.AWS::EC2::VPCEndpoint.Properties.ServiceName,"{u'Fn::Join': [u'', [u'com.amazonaws.', {u'Ref': u'AWS::Region'}, u'.s3']]}"
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.SubnetId,{u'Ref': u'PrivateSubnet1B'}
Outputs.PrivateSubnet4ACIDR.Description,Private subnet 4A CIDR in Availability Zone 4
Outputs.PublicSubnet4ID.Value,{u'Ref': u'PublicSubnet4'}
Parameters.PrivateSubnet2ACIDR.Description,CIDR block for private subnet 2A located in Availability Zone 2
Parameters.PrivateSubnet1ACIDR.AllowedPattern,^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
Parameters.PublicSubnet3CIDR.AllowedPattern,^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Outputs.PublicSubnet4CIDR.Value,{u'Ref': u'PublicSubnet4CIDR'}
Resources.AWS::EC2::VPCDHCPOptionsAssociation.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::NetworkAclEntry.Properties.NetworkAclId,{u'Ref': u'PrivateSubnet3BNetworkAcl'}
Mappings.AWSAMIRegionMap.AMI.AWSNATHVM,amzn-ami-vpc-nat-hvm-2016.09.1.20170119-x86_64-ebs
Parameters.PrivateSubnet3BCIDR.Description,CIDR block for private subnet 3B with dedicated network ACL located in Availability Zone 3
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Enables outbound internet access for the VPC via the NAT instances
Parameters.PrivateSubnet3BCIDR.ConstraintDescription,CIDR block parameter must be in the form x.x.x.x/16-28
Outputs.PrivateSubnet4ACIDR.Value,{u'Ref': u'PrivateSubnet4ACIDR'}
Metadata.AWS::CloudFormation::Interface.ParameterGroups,"[{u'Parameters': [u'AvailabilityZones', u'NumberOfAZs'], u'Label': {u'default': u'Availability Zone Configuration'}}, {u'Parameters': [u'VPCCIDR', u'PrivateSubnet1ACIDR', u'PrivateSubnet2ACIDR', u'PrivateSubnet3ACIDR', u'PrivateSubnet4ACIDR', u'PublicSubnet1CIDR', u'PublicSubnet2CIDR', u'PublicSubnet3CIDR', u'PublicSubnet4CIDR', u'CreateAdditionalPrivateSubnets', u'PrivateSubnet1BCIDR', u'PrivateSubnet2BCIDR', u'PrivateSubnet3BCIDR', u'PrivateSubnet4BCIDR'], u'Label': {u'default': u'Network Configuration'}}, {u'Parameters': [u'KeyPairName', u'NATInstanceType'], u'Label': {u'default': u'Amazon EC2 Configuration'}}]"
Parameters.PublicSubnet4CIDR.ConstraintDescription,CIDR block parameter must be in the form x.x.x.x/16-28
Outputs.PrivateSubnet3ACIDR.Description,Private subnet 3A CIDR in Availability Zone 3
Mappings.AWSAMIRegionMap.ca-central-1.AWSNATHVM,ami-cdf24fa9
Outputs.VPCCIDR.Description,VPC CIDR
Outputs.VPCID.Value,{u'Ref': u'VPC'}
Resources.AWS::EC2::VPCEndpoint.Type,AWS::EC2::VPCEndpoint
Resources.AWS::EC2::SecurityGroup.Type,AWS::EC2::SecurityGroup
Resources.AWS::EC2::RouteTable.Properties.Tags,"[{u'Value': u'Private subnet 1B', u'Key': u'Name'}, {u'Value': u'Private', u'Key': u'Network'}]"
Parameters.CreateAdditionalPrivateSubnets.Default,false
Outputs.PrivateSubnet1BID.Condition,AdditionalPrivateSubnetsCondition
Outputs.PrivateSubnet3AID.Condition,3AZCondition
Resources.AWS::EC2::Subnet.Properties.CidrBlock,{u'Ref': u'PublicSubnet4CIDR'}
Mappings.AWSInfoRegionMap.ca-central-1.QuickStartS3URL,https://s3.amazonaws.com
Resources.AWS::EC2::Instance.Properties.KeyName,"{u'Fn::If': [u'NATInstanceCondition', {u'Ref': u'KeyPairName'}, {u'Ref': u'AWS::NoValue'}]}"
Outputs.PublicSubnet2CIDR.Value,{u'Ref': u'PublicSubnet2CIDR'}
Parameters.VPCCIDR.AllowedPattern,^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
Resources.AWS::EC2::DHCPOptions.Properties.DomainName,"{u'Fn::If': [u'NVirginiaRegionCondition', u'ec2.internal', {u'Fn::Join': [u'', [{u'Ref': u'AWS::Region'}, u'.compute.internal']]}]}"
Outputs.PrivateSubnet4BID.Condition,AdditionalPrivateSubnets&4AZCondition
Outputs.PrivateSubnet3ACIDR.Condition,3AZCondition
Outputs.PrivateSubnet4AID.Condition,4AZCondition
Outputs.PrivateSubnet2BID.Value,{u'Ref': u'PrivateSubnet2B'}
Outputs.PrivateSubnet4BID.Value,{u'Ref': u'PrivateSubnet4B'}
Parameters.PrivateSubnet4BCIDR.Description,CIDR block for private subnet 4B with dedicated network ACL located in Availability Zone 4
Parameters.PrivateSubnet2BCIDR.AllowedPattern,^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
Outputs.PrivateSubnet4BID.Description,Private subnet 4B ID in Availability Zone 4
Parameters.PrivateSubnet3ACIDR.Type,String
Parameters.PrivateSubnet1BCIDR.Type,String
Parameters.PrivateSubnet3BCIDR.AllowedPattern,^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
Parameters.PrivateSubnet2BCIDR.Type,String
Parameters.PrivateSubnet2BCIDR.ConstraintDescription,CIDR block parameter must be in the form x.x.x.x/16-28
Metadata.AWS::CloudFormation::Interface.ParameterLabels.PrivateSubnet4BCIDR.default,Private subnet 4B with dedicated network ACL CIDR
Parameters.KeyPairName.Description,Public/private key pairs allow you to securely connect to your NAT instance after it launches. This is used only if the region does not support NAT gateways.
Outputs.PrivateSubnet1ACIDR.Description,Private subnet 1A CIDR in Availability Zone 1
Outputs.PublicSubnet3CIDR.Condition,3AZCondition
Parameters.PrivateSubnet2BCIDR.Description,CIDR block for private subnet 2B with dedicated network ACL located in Availability Zone 2
Metadata.AWS::CloudFormation::Interface.ParameterLabels.AvailabilityZones.default,Availability Zones
Parameters.PublicSubnet1CIDR.AllowedPattern,^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
Resources.AWS::EC2::SubnetNetworkAclAssociation.Type,AWS::EC2::SubnetNetworkAclAssociation
Metadata.AWS::CloudFormation::Interface.ParameterLabels.PrivateSubnet1ACIDR.default,Private subnet 1A CIDR
Parameters.PrivateSubnet1ACIDR.Description,CIDR block for private subnet 1A located in Availability Zone 1
Outputs.PrivateSubnet4AID.Value,{u'Ref': u'PrivateSubnet4A'}
Outputs.PublicSubnet2ID.Value,{u'Ref': u'PublicSubnet2'}
Outputs.NAT2EIP.Description,NAT Gateway 2 IP address
Outputs.S3VPCEndpoint.Condition,S3VPCEndpointCondition
Outputs.PrivateSubnet2ACIDR.Value,{u'Ref': u'PrivateSubnet2ACIDR'}
Parameters.PrivateSubnet3ACIDR.ConstraintDescription,CIDR block parameter must be in the form x.x.x.x/16-28
Outputs.PublicSubnet3ID.Description,Public subnet 3 ID in Availability Zone 3
Parameters.PublicSubnet2CIDR.Description,CIDR block for the public DMZ subnet 2 located in Availability Zone 2
Parameters.PrivateSubnet4BCIDR.Type,String
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Outputs.NAT1EIP.Value,{u'Ref': u'NAT1EIP'}
Metadata.AWS::CloudFormation::Interface.ParameterLabels.CreateAdditionalPrivateSubnets.default,Create additional private subnets with dedicated network ACLs
Resources.AWS::EC2::Route.DependsOn,VPCGatewayAttachment
Resources.AWS::EC2::EIP.Properties.Domain,vpc
Resources.AWS::EC2::Instance.Properties.NetworkInterfaces,"[{u'DeleteOnTermination': u'true', u'DeviceIndex': u'0', u'SubnetId': {u'Ref': u'PublicSubnet3'}, u'GroupSet': [{u'Ref': u'NATInstanceSecurityGroup'}], u'AssociatePublicIpAddress': u'true'}]"
Resources.AWS::EC2::NetworkAclEntry.Type,AWS::EC2::NetworkAclEntry
Resources.AWS::EC2::RouteTable.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::NatGateway.DependsOn,VPCGatewayAttachment
Outputs.S3VPCEndpoint.Value,{u'Ref': u'S3VPCEndpoint'}
Resources.AWS::EC2::Instance.Properties.SourceDestCheck,false
Resources.AWS::EC2::NatGateway.Condition,NATGateway&3AZCondition
Outputs.PublicSubnet1ID.Description,Public subnet 1 ID in Availability Zone 1
Parameters.PublicSubnet3CIDR.Type,String
Parameters.PrivateSubnet4ACIDR.ConstraintDescription,CIDR block parameter must be in the form x.x.x.x/16-28
Resources.AWS::EC2::VPCEndpoint.Condition,S3VPCEndpointCondition
Resources.AWS::EC2::Subnet.Properties.MapPublicIpOnLaunch,True
Resources.AWS::EC2::VPC.Type,AWS::EC2::VPC
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Resources.AWS::EC2::VPCEndpoint.Properties.RouteTableIds,"[{u'Ref': u'PrivateSubnet1ARouteTable'}, {u'Ref': u'PrivateSubnet2ARouteTable'}, {u'Fn::If': [u'3AZCondition', {u'Ref': u'PrivateSubnet3ARouteTable'}, {u'Ref': u'AWS::NoValue'}]}, {u'Fn::If': [u'4AZCondition', {u'Ref': u'PrivateSubnet4ARouteTable'}, {u'Ref': u'AWS::NoValue'}]}, {u'Fn::If': [u'AdditionalPrivateSubnetsCondition', {u'Ref': u'PrivateSubnet1BRouteTable'}, {u'Ref': u'AWS::NoValue'}]}, {u'Fn::If': [u'AdditionalPrivateSubnetsCondition', {u'Ref': u'PrivateSubnet2BRouteTable'}, {u'Ref': u'AWS::NoValue'}]}, {u'Fn::If': [u'AdditionalPrivateSubnets&3AZCondition', {u'Ref': u'PrivateSubnet3BRouteTable'}, {u'Ref': u'AWS::NoValue'}]}, {u'Fn::If': [u'AdditionalPrivateSubnets&4AZCondition', {u'Ref': u'PrivateSubnet4BRouteTable'}, {u'Ref': u'AWS::NoValue'}]}]"
Outputs.PrivateSubnet4ACIDR.Condition,4AZCondition
Resources.AWS::EC2::NetworkAcl.Type,AWS::EC2::NetworkAcl
Resources.AWS::EC2::Subnet.Type,AWS::EC2::Subnet
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpcId,{u'Ref': u'VPC'}
Outputs.VPCID.Description,VPC ID
Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,-1
Outputs.PublicSubnet2ID.Description,Public subnet 2 ID in Availability Zone 2
Outputs.NAT4EIP.Condition,4AZCondition
Metadata.AWS::CloudFormation::Interface.ParameterLabels.PrivateSubnet1BCIDR.default,Private subnet 1B with dedicated network ACL CIDR
Resources.AWS::EC2::NatGateway.Properties.AllocationId,"{u'Fn::GetAtt': [u'NAT3EIP', u'AllocationId']}"
Parameters.KeyPairName.Type,AWS::EC2::KeyPair::KeyName
Outputs.PrivateSubnet2BID.Description,Private subnet 2B ID in Availability Zone 2
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,{u'Ref': u'VPC'}
Parameters.PublicSubnet2CIDR.AllowedPattern,^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
Outputs.PrivateSubnet2AID.Description,Private subnet 2A ID in Availability Zone 2
Parameters.CreateAdditionalPrivateSubnets.Type,String
Outputs.PrivateSubnet2BID.Condition,AdditionalPrivateSubnetsCondition
Parameters.PrivateSubnet3BCIDR.Type,String
Resources.AWS::EC2::Route.Properties.RouteTableId,{u'Ref': u'PrivateSubnet4ARouteTable'}
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.NetworkAclId,{u'Ref': u'PrivateSubnet1BNetworkAcl'}
Parameters.PrivateSubnet4BCIDR.ConstraintDescription,CIDR block parameter must be in the form x.x.x.x/16-28
Resources.AWS::EC2::DHCPOptions.Type,AWS::EC2::DHCPOptions
Parameters.PrivateSubnet3ACIDR.Default,10.0.64.0/19
Resources.AWS::EC2::VPCEndpoint.Properties.VpcId,{u'Ref': u'VPC'}
Resources.AWS::EC2::NetworkAcl.Properties.VpcId,{u'Ref': u'VPC'}
Parameters.NumberOfAZs.AllowedValues,"[u'2', u'3', u'4']"
Parameters.PublicSubnet3CIDR.Description,CIDR block for the public DMZ subnet 3 located in Availability Zone 3
Mappings.AWSInfoRegionMap.eu-central-1.QuickStartS3URL,https://s3.amazonaws.com
Resources.AWS::EC2::NetworkAclEntry.Condition,AdditionalPrivateSubnets&3AZCondition
Outputs.NAT2EIP.Value,{u'Ref': u'NAT2EIP'}
Outputs.PublicSubnet2CIDR.Description,Public subnet 2 CIDR in Availability Zone 2
Outputs.PrivateSubnet1ACIDR.Value,{u'Ref': u'PrivateSubnet1ACIDR'}
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,"{u'Fn::Select': [u'3', {u'Ref': u'AvailabilityZones'}]}"
Parameters.PublicSubnet3CIDR.Default,10.0.160.0/20
Outputs.PrivateSubnet3BCIDR.Value,{u'Ref': u'PrivateSubnet3BCIDR'}
Parameters.PublicSubnet4CIDR.Default,10.0.176.0/20
Mappings.AWSInfoRegionMap.ca-central-1.Partition,aws
Resources.AWS::EC2::NetworkAcl.Properties.Tags,"[{u'Value': u'NACL Protected subnet 3', u'Key': u'Name'}, {u'Value': u'NACL Protected', u'Key': u'Network'}]"
Resources.AWS::EC2::NetworkAcl.Condition,AdditionalPrivateSubnets&3AZCondition
Outputs.PublicSubnet4CIDR.Description,Public subnet 4 CIDR in Availability Zone 4
Parameters.PrivateSubnet4ACIDR.AllowedPattern,^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
Outputs.PrivateSubnet3BID.Value,{u'Ref': u'PrivateSubnet3B'}
Parameters.PrivateSubnet4ACIDR.Type,String
Parameters.PrivateSubnet4BCIDR.AllowedPattern,^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
Resources.AWS::EC2::InternetGateway.Properties.Tags,"[{u'Value': u'Public', u'Key': u'Network'}]"
Resources.AWS::EC2::VPC.Properties.Tags,"[{u'Value': {u'Ref': u'AWS::StackName'}, u'Key': u'Name'}]"
Parameters.VPCCIDR.Default,10.0.0.0/16
Outputs.PublicSubnet4ID.Condition,4AZCondition
Parameters.PublicSubnet1CIDR.Description,CIDR block for the public DMZ subnet 1 located in Availability Zone 1
Resources.AWS::EC2::VPCEndpoint.Properties.PolicyDocument.Statement,"[{u'Action': u'*', u'Resource': u'*', u'Effect': u'Allow', u'Principal': u'*'}]"
Outputs.PublicSubnet4ID.Description,Public subnet 4 ID in Availability Zone 4
Resources.AWS::EC2::NatGateway.Properties.SubnetId,{u'Ref': u'PublicSubnet3'}
Resources.AWS::EC2::SubnetNetworkAclAssociation.Condition,AdditionalPrivateSubnetsCondition
Outputs.PrivateSubnet2BCIDR.Condition,AdditionalPrivateSubnetsCondition
Parameters.NumberOfAZs.Default,2
Resources.AWS::EC2::VPCDHCPOptionsAssociation.Type,AWS::EC2::VPCDHCPOptionsAssociation
Resources.AWS::EC2::Route.Properties.InstanceId,"{u'Fn::If': [u'NATInstanceCondition', {u'Ref': u'NATInstance4'}, {u'Ref': u'AWS::NoValue'}]}"
Parameters.CreateAdditionalPrivateSubnets.Description,"Set to true to create a network ACL protected subnet in each Availability Zone. If false, the CIDR parameters for those subnets will be ignored."
Metadata.AWS::CloudFormation::Interface.ParameterLabels.PublicSubnet3CIDR.default,Public subnet 3 CIDR
Resources.AWS::EC2::SecurityGroup.Properties.VpcId,{u'Ref': u'VPC'}
Outputs.PrivateSubnet2ACIDR.Description,Private subnet 2A CIDR in Availability Zone 2
Metadata.AWS::CloudFormation::Interface.ParameterLabels.VPCCIDR.default,VPC CIDR
Parameters.PrivateSubnet1BCIDR.ConstraintDescription,CIDR block parameter must be in the form x.x.x.x/16-28
Outputs.VPCCIDR.Value,{u'Ref': u'VPCCIDR'}
Parameters.PrivateSubnet2ACIDR.ConstraintDescription,CIDR block parameter must be in the form x.x.x.x/16-28
Parameters.CreateAdditionalPrivateSubnets.AllowedValues,"[u'true', u'false']"
Resources.AWS::EC2::EIP.Type,AWS::EC2::EIP
Outputs.PublicSubnet1ID.Value,{u'Ref': u'PublicSubnet1'}
Outputs.PrivateSubnet3BCIDR.Condition,AdditionalPrivateSubnets&3AZCondition
Parameters.PrivateSubnet4ACIDR.Description,CIDR block for private subnet 4A located in Availability Zone 4
Outputs.PublicSubnet3CIDR.Description,Public subnet 3 CIDR in Availability Zone 3
Outputs.PrivateSubnet3BCIDR.Description,Private subnet 3B CIDR in Availability Zone 3
Resources.AWS::EC2::Route.Condition,4AZCondition
Parameters.PrivateSubnet1ACIDR.Type,String
Resources.AWS::EC2::SecurityGroup.Condition,NATInstanceCondition
Resources.AWS::EC2::VPC.Properties.CidrBlock,{u'Ref': u'VPCCIDR'}
Parameters.PublicSubnet3CIDR.ConstraintDescription,CIDR block parameter must be in the form x.x.x.x/16-28
Resources.AWS::EC2::SubnetRouteTableAssociation.Type,AWS::EC2::SubnetRouteTableAssociation
Parameters.PrivateSubnet1BCIDR.AllowedPattern,^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
Parameters.PublicSubnet1CIDR.Default,10.0.128.0/20
Resources.AWS::EC2::VPCDHCPOptionsAssociation.Properties.DhcpOptionsId,{u'Ref': u'DHCPOptions'}
Metadata.AWS::CloudFormation::Interface.ParameterLabels.PublicSubnet1CIDR.default,Public subnet 1 CIDR
Parameters.PrivateSubnet2ACIDR.Default,10.0.32.0/19
Outputs.PrivateSubnet2BCIDR.Value,{u'Ref': u'PrivateSubnet2BCIDR'}
Parameters.PrivateSubnet2ACIDR.AllowedPattern,^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
Parameters.AvailabilityZones.Type,List<AWS::EC2::AvailabilityZone::Name>
Mappings.AWSAMIRegionMap.eu-central-1.AWSNATHVM,ami-7d0ec112
Resources.AWS::EC2::Instance.Properties.ImageId,"{u'Fn::FindInMap': [u'AWSAMIRegionMap', {u'Ref': u'AWS::Region'}, u'AWSNATHVM']}"
Resources.AWS::EC2::Instance.Condition,NATInstance&3AZCondition
Outputs.PublicSubnet3ID.Value,{u'Ref': u'PublicSubnet3'}
Outputs.PrivateSubnet1BCIDR.Value,{u'Ref': u'PrivateSubnet1BCIDR'}
Parameters.VPCCIDR.ConstraintDescription,CIDR block parameter must be in the form x.x.x.x/16-28
Resources.AWS::EC2::DHCPOptions.Properties.DomainNameServers,[u'AmazonProvidedDNS']
Outputs.PrivateSubnet4BCIDR.Condition,AdditionalPrivateSubnets&4AZCondition
Outputs.NAT3EIP.Condition,3AZCondition
Outputs.PrivateSubnet1BID.Description,Private subnet 1B ID in Availability Zone 1
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,{u'Ref': u'PrivateSubnet4BRouteTable'}
Parameters.PrivateSubnet3ACIDR.Description,CIDR block for private subnet 3A located in Availability Zone 3
Outputs.PrivateSubnet4BCIDR.Value,{u'Ref': u'PrivateSubnet4BCIDR'}
Resources.AWS::EC2::InternetGateway.Type,AWS::EC2::InternetGateway
Resources.AWS::EC2::EIP.Condition,3AZCondition
Parameters.PrivateSubnet3ACIDR.AllowedPattern,^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
Parameters.PublicSubnet1CIDR.Type,String
Resources.AWS::EC2::VPCGatewayAttachment.Type,AWS::EC2::VPCGatewayAttachment
Resources.AWS::EC2::NatGateway.Type,AWS::EC2::NatGateway
Metadata.AWS::CloudFormation::Interface.ParameterLabels.PublicSubnet2CIDR.default,Public subnet 2 CIDR
Parameters.PublicSubnet1CIDR.ConstraintDescription,CIDR block parameter must be in the form x.x.x.x/16-28
Resources.AWS::EC2::Route.Properties.GatewayId,{u'Ref': u'InternetGateway'}
Parameters.PrivateSubnet3BCIDR.Default,10.0.208.0/21
Parameters.NumberOfAZs.Type,String
Outputs.PrivateSubnet4BCIDR.Description,Private subnet 4B CIDR in Availability Zone 4
Resources.AWS::EC2::Subnet.Properties.Tags,"[{u'Value': u'Public subnet 4', u'Key': u'Name'}, {u'Value': u'Public', u'Key': u'Network'}]"
Metadata.AWS::CloudFormation::Interface.ParameterLabels.KeyPairName.default,Key pair name
Parameters.PublicSubnet4CIDR.Type,String
Resources.AWS::EC2::Instance.DependsOn,VPCGatewayAttachment
Resources.AWS::EC2::Instance.Type,AWS::EC2::Instance
Parameters.PrivateSubnet4BCIDR.Default,10.0.216.0/21
Outputs.PrivateSubnet4AID.Description,Private subnet 4A ID in Availability Zone 4
Outputs.PrivateSubnet1AID.Value,{u'Ref': u'PrivateSubnet1A'}
Resources.AWS::EC2::RouteTable.Type,AWS::EC2::RouteTable
Parameters.PublicSubnet2CIDR.ConstraintDescription,CIDR block parameter must be in the form x.x.x.x/16-28
Outputs.PrivateSubnet3ACIDR.Value,{u'Ref': u'PrivateSubnet3ACIDR'}
Outputs.PublicSubnet1CIDR.Value,{u'Ref': u'PublicSubnet1CIDR'}
Resources.AWS::EC2::SubnetRouteTableAssociation.Condition,AdditionalPrivateSubnets&4AZCondition
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,{u'Ref': u'PrivateSubnet4B'}
Metadata.AWS::CloudFormation::Interface.ParameterLabels.PublicSubnet4CIDR.default,Public subnet 4 CIDR
Parameters.PrivateSubnet1ACIDR.Default,10.0.0.0/19
Outputs.PrivateSubnet3AID.Value,{u'Ref': u'PrivateSubnet3A'}
Outputs.PrivateSubnet2AID.Value,{u'Ref': u'PrivateSubnet2A'}
Outputs.PublicSubnet3CIDR.Value,{u'Ref': u'PublicSubnet3CIDR'}
Resources.AWS::EC2::EIP.Properties.InstanceId,"{u'Fn::If': [u'NATInstanceCondition', {u'Ref': u'NATInstance3'}, {u'Ref': u'AWS::NoValue'}]}"
Parameters.PrivateSubnet1BCIDR.Description,CIDR block for private subnet 1B with dedicated network ACL located in Availability Zone 1
Metadata.AWS::CloudFormation::Interface.ParameterLabels.PrivateSubnet2ACIDR.default,Private subnet 2A CIDR
Outputs.S3VPCEndpoint.Description,S3 VPC Endpoint
Parameters.VPCCIDR.Description,CIDR block for the VPC
Outputs.PublicSubnet3ID.Condition,3AZCondition
Parameters.PublicSubnet2CIDR.Type,String
Outputs.PrivateSubnet3BID.Description,Private subnet 3B ID in Availability Zone 3
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'65535', u'IpProtocol': u'-1', u'CidrIp': {u'Ref': u'VPCCIDR'}, u'FromPort': u'1'}]"
Parameters.PublicSubnet4CIDR.Description,CIDR block for the public DMZ subnet 4 located in Availability Zone 4
Resources.AWS::EC2::Instance.Properties.Tags,"[{u'Value': u'NAT3', u'Key': u'Name'}]"
Outputs.PublicSubnet1CIDR.Description,Public subnet 1 CIDR in Availability Zone 1
Outputs.NAT1EIP.Description,NAT Gateway 1 IP address
