Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,6
Resources.AWS::EC2::Route.Type,AWS::EC2::Route
Resources.AWS::EC2::SubnetRouteTableAssociation.Type,AWS::EC2::SubnetRouteTableAssociation
Parameters.KeyName.ConstraintDescription,must be the name of an existing EC2 KeyPair.
Outputs.SubnetB.Description,Subnet B
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Subnet.Properties.VpcId,VPC
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,True
Resources.AWS::EC2::Subnet.Properties.CidrBlock,10.0.0.0/24
Resources.AWS::EC2::NetworkAclEntry.Properties.NetworkAclId,NetworkAcl
Outputs.StackVPC.Export.Name,${AWS::StackName}-VPC
Resources.AWS::EC2::Instance.Properties.KeyName,KeyName
Outputs.InstanceSecurityGroup.Description,Instance Security Group
Outputs.SubnetB.Export.Name,${AWS::StackName}-SubnetB
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,true
Resources.AWS::EC2::EIP.Type,AWS::EC2::EIP
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Resources.AWS::EC2::VPCGatewayAttachment.Properties.InternetGatewayId,InternetGateway
Outputs.InstanceSecurityGroup.Export.Name,${AWS::StackName}-InstanceSecurityGroup
Parameters.SSHLocation.Type,String
Resources.AWS::EC2::Instance.Properties.UserData,{u'Fn::Base64': u'#!/bin/bash -xe\napt-add-repository -y ppa:ansible/ansible\napt-get update\napt-get -y install python-setuptools\napt-get -y install software-properties-common\napt-get -y install ansible\nsudo easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\ngit clone https://github.com/aemruli/ansible-teamcity\ncd ansible-teamcity\nansible-galaxy install -r requirements.yml\nansible-playbook site.yml\ncfn-signal -e $? --stack ${AWS::StackName} --resource CIServer --region ${AWS::Region}\n'}
Resources.AWS::EC2::Subnet.Type,AWS::EC2::Subnet
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.NetworkAclId,NetworkAcl
Outputs.InstanceSecurityGroup.Value,InstanceSecurityGroup
Resources.AWS::EC2::Subnet.Properties.AvailabilityZone,"[u'0', {u'Ref': u'AWS::Region'}]"
Resources.AWS::EC2::Instance.Properties.NetworkInterfaces,"[{u'SubnetId': u'SubnetA', u'DeviceIndex': u'0', u'GroupSet': [u'InstanceSecurityGroup'], u'DeleteOnTermination': u'true', u'AssociatePublicIpAddress': u'true'}]"
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,102
Resources.AWS::EC2::NetworkAcl.Properties.VpcId,VPC
Outputs.SubnetA.Export.Name,${AWS::StackName}-SubnetA
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.From,1024
Resources.AWS::EC2::EIP.DependsOn,AttachGateway
Resources.AWS::EC2::VPCGatewayAttachment.Type,AWS::EC2::VPCGatewayAttachment
Outputs.SubnetB.Value,SubnetB
Resources.AWS::EC2::Route.Properties.RouteTableId,RouteTable
Resources.AWS::EC2::Route.Properties.GatewayId,InternetGateway
Resources.AWS::EC2::VPC.Type,AWS::EC2::VPC
Parameters.SSHLocation.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Parameters.KeyName.Description,Name of an existing EC2 KeyPair to enable SSH access to the instance
Outputs.StackVPC.Description,The ID of the VPC
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.RouteTableId,RouteTable
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Resources.AWS::EC2::Instance.DependsOn,AttachGateway
Resources.AWS::EC2::Instance.Type,AWS::EC2::Instance
Parameters.SSHLocation.MaxLength,18
Outputs.SubnetA.Description,Subnet A
Resources.AWS::EC2::SubnetRouteTableAssociation.Properties.SubnetId,SubnetB
Resources.AWS::EC2::RouteTable.Type,AWS::EC2::RouteTable
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'22', u'FromPort': u'22', u'IpProtocol': u'tcp', u'CidrIp': u'SSHLocation'}, {u'ToPort': u'80', u'FromPort': u'80', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0'}]"
Parameters.SSHLocation.Default,0.0.0.0/0
Resources.AWS::EC2::SubnetNetworkAclAssociation.Properties.SubnetId,SubnetB
Resources.AWS::EC2::EIP.Properties.InstanceId,CIServer
Parameters.SSHLocation.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Resources.AWS::EC2::Route.DependsOn,AttachGateway
Resources.AWS::EC2::EIP.Properties.Domain,vpc
Resources.AWS::EC2::NetworkAcl.Type,AWS::EC2::NetworkAcl
Resources.AWS::EC2::Instance.CreationPolicy.ResourceSignal.Timeout,PT30M
Resources.AWS::EC2::InternetGateway.Type,AWS::EC2::InternetGateway
Outputs.SubnetA.Value,SubnetA
Resources.AWS::EC2::RouteTable.Properties.VpcId,VPC
Resources.AWS::EC2::SecurityGroup.Properties.VpcId,VPC
Resources.AWS::EC2::SecurityGroup.Type,AWS::EC2::SecurityGroup
Parameters.KeyName.Type,AWS::EC2::KeyPair::KeyName
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,True
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Enable SSH access via port 22
Resources.AWS::EC2::Instance.Properties.ImageId,ami-405f7226
Outputs.StackVPC.Value,VPC
Parameters.SSHLocation.Description,The IP address range that can be used to SSH to the EC2 instances
Resources.AWS::EC2::SubnetNetworkAclAssociation.Type,AWS::EC2::SubnetNetworkAclAssociation
Resources.AWS::EC2::VPC.Properties.CidrBlock,10.0.0.0/16
Resources.AWS::EC2::Instance.Properties.Tags,"[{u'Value': u'AWS::StackId', u'Key': u'Application'}]"
Parameters.SSHLocation.MinLength,9
Resources.AWS::EC2::NetworkAclEntry.Type,AWS::EC2::NetworkAclEntry
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.To,65535
Resources.AWS::EC2::VPCGatewayAttachment.Properties.VpcId,VPC
