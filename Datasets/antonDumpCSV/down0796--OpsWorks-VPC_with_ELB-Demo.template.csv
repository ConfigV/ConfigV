Resources.AWS::IAM::InstanceProfile.Properties.Path,/
Mappings.SubnetConfig.VPC.CIDR,10.0.0.0/16
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,100
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,true
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupIngress,"[{u'ToPort': u'80', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'80'}]"
Resources.AWS::OpsWorks::App.Properties.Name,MyPHPApp
Mappings.SubnetConfig.Public.CIDR,10.0.0.0/24
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.UnhealthyThreshold,5
Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,6
Resources.AWS::EC2::Subnet.Properties.CidrBlock,"{u'Fn::FindInMap': [u'SubnetConfig', u'Private', u'CIDR']}"
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Timeout,60
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Interval,90
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Resources.AWS::EC2::Route.DependsOn,VPCGatewayAttachment
Resources.AWS::EC2::EIP.Properties.Domain,vpc
Resources.AWS::OpsWorks::Layer.DependsOn,"[u'NATIPAddress', u'PublicRoute', u'PublicSubnetRouteTableAssociation', u'PrivateRoute', u'PrivateSubnetRouteTableAssociation', u'OpsWorksApp']"
Resources.AWS::EC2::VPC.Properties.CidrBlock,"{u'Fn::FindInMap': [u'SubnetConfig', u'VPC', u'CIDR']}"
Resources.AWS::IAM::Role.Properties.Policies,"[{u'PolicyName': u'opsworks-service', u'PolicyDocument': {u'Statement': [{u'Action': [u'ec2:*', u'iam:PassRole', u'cloudwatch:GetMetricStatistics', u'elasticloadbalancing:*'], u'Resource': u'*', u'Effect': u'Allow'}]}}]"
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.To,65535
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.HealthyThreshold,3
Resources.AWS::EC2::SecurityGroup.Properties.SecurityGroupEgress,"[{u'ToPort': u'80', u'IpProtocol': u'tcp', u'CidrIp': u'0.0.0.0/0', u'FromPort': u'80'}]"
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::OpsWorks::Layer.Properties.Name,MyPHPApp
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,Allow inbound access to the ELB
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Listeners,"[{u'InstancePort': u'80', u'LoadBalancerPort': u'80', u'Protocol': u'HTTP'}]"
Mappings.SubnetConfig.Private.CIDR,10.0.1.0/24
Resources.AWS::EC2::Instance.Properties.SourceDestCheck,false
Resources.AWS::EC2::NetworkAclEntry.Properties.PortRange.From,0
Resources.AWS::EC2::VPC.DependsOn,OpsWorksServiceRole
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'ec2.amazonaws.com']}}]"
Resources.AWS::OpsWorks::Layer.Properties.Shortname,php-app
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Target,HTTP:80/
Resources.AWS::OpsWorks::Layer.Properties.AutoAssignPublicIps,true
Resources.AWS::OpsWorks::Layer.Properties.EnableAutoHealing,true
Resources.AWS::OpsWorks::Stack.Properties.ServiceRoleArn,"{u'Fn::GetAtt': [u'OpsWorksServiceRole', u'Arn']}"
Resources.AWS::OpsWorks::App.Properties.AppSource.Url,git://github.com/amazonwebservices/opsworks-demo-php-simple-app.git
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Resources.AWS::IAM::Role.Properties.Path,/
Outputs.VPC.Description,VPC
Resources.AWS::OpsWorks::Layer.Metadata.Comment,OpsWorks instances require outbound Internet access. Using DependsOn to make sure outbound Internet Access is estlablished before creating instances in this layer.
Resources.AWS::OpsWorks::App.Properties.AppSource.Revision,version1
Resources.AWS::OpsWorks::App.Properties.Attributes.DocumentRoot, 
Resources.AWS::OpsWorks::Layer.Properties.AutoAssignElasticIps,false
Resources.AWS::OpsWorks::Stack.Properties.DefaultInstanceProfileArn,"{u'Fn::GetAtt': [u'OpsWorksInstanceProfile', u'Arn']}"
