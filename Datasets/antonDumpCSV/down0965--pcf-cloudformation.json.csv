Resources.AWS::IAM::InstanceProfile.Properties.Path,/
Parameters.OpsManIngressCidr.Default,0.0.0.0/0
Resources.AWS::EC2::NetworkAclEntry.Properties.Egress,true
Outputs.PcfERTSubnetAZ3AvailabilityZone.Value,"{u'Fn::GetAtt': [u'PcfERTSubnetAZ3', u'AvailabilityZone']}"
Outputs.PcfRdsPassword.Condition,CreateRDS
Outputs.PcfServicesSubnetAZ3AvailabilityZone.Value,"{u'Fn::GetAtt': [u'PcfServicesSubnetAZ3', u'AvailabilityZone']}"
Resources.AWS::IAM::Role.DependsOn,"[u'PcfVPC', u'PcfOpsManBucket']"
Resources.AWS::IAM::User.DependsOn,"[u'PcfVPC', u'PcfOpsManBucket']"
Resources.AWS::EC2::SecurityGroupEgress.Properties.IpProtocol,-1
Parameters.RDSPassword.NoEcho,true
Resources.AWS::RDS::DBInstance.Properties.MultiAZ,True
Resources.AWS::RDS::DBInstance.Properties.Engine,MySQL
Outputs.PcfRdsUsername.Condition,CreateRDS
Parameters.AvailabilityZone1.Description,Example: us-west-2a
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleNumber,100
Resources.AWS::IAM::User.Properties.Policies,[]
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Version,2012-10-17
Parameters.RDSUsername.Description,RDS database username (leave blank to skip RDS)
Outputs.PcfElbWebDnsName.Value,"{u'Fn::GetAtt': [u'PcfElbWeb', u'DNSName']}"
Resources.AWS::EC2::VPC.Properties.EnableDnsSupport,true
Resources.AWS::S3::Bucket.Properties.VersioningConfiguration.Status,Suspended
Outputs.PcfERTSubnetAZ2AvailabilityZone.Value,"{u'Fn::GetAtt': [u'PcfERTSubnetAZ2', u'AvailabilityZone']}"
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.UnhealthyThreshold,3
Parameters.ERTCertificateARN.Description,ARN for pre-uploaded certificate for the ERT
Parameters.EnvironmentID.Default,pcf-env-id
Resources.AWS::EC2::SecurityGroupEgress.Properties.CidrIp,0.0.0.0/0
Outputs.PcfIamUserSecretAccessKey.Value,"{u'Fn::GetAtt': [u'PcfIamUserAccessKey', u'SecretAccessKey']}"
Resources.AWS::EC2::NetworkAclEntry.Properties.Protocol,-1
Outputs.PcfServicesSubnetAZ1AvailabilityZone.Value,"{u'Fn::GetAtt': [u'PcfServicesSubnetAZ1', u'AvailabilityZone']}"
Resources.AWS::IAM::ManagedPolicy.Properties.PolicyDocument.Version,2012-10-17
Resources.AWS::S3::Bucket.Properties.Tags,"[{u'Value': u'Elastic Runtime S3 Packages Bucket', u'Key': u'Name'}]"
Resources.AWS::EC2::Subnet.Properties.CidrBlock,10.0.8.0/24
Parameters.RDSDBName.Description,RDS database name (leave blank to skip RDS). Nust begin with a letter and contain only alphanumeric characters.
Resources.AWS::EC2::Instance.Properties.DisableApiTermination,false
Resources.AWS::RDS::DBInstance.Properties.PubliclyAccessible,False
Mappings.NATRegionToAmiMap.eu-central-1.id,ami-0469bb6b
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Timeout,3
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Interval,5
Outputs.PcfRdsAddress.Condition,CreateRDS
Outputs.PcfServicesSubnetAZ2AvailabilityZone.Value,"{u'Fn::GetAtt': [u'PcfServicesSubnetAZ2', u'AvailabilityZone']}"
Parameters.RDSPassword.AllowedPattern,"(.{8,}|^$)"
Outputs.PcfOpsManIPAddress.Value,"{u'Fn::GetAtt': [u'PcfOpsManInstance', u'PublicIp']}"
Resources.AWS::EC2::SecurityGroupIngress.Properties.FromPort,443
Resources.AWS::EC2::NetworkAclEntry.Properties.RuleAction,allow
Resources.AWS::EC2::EIP.Properties.Domain,vpc
Parameters.EnvironmentID.Description,Default: pcf-env-id
Outputs.PcfManagementSubnetAZ1AvailabilityZone.Value,"{u'Fn::GetAtt': [u'PcfManagementSubnetAZ1', u'AvailabilityZone']}"
Resources.AWS::EC2::Instance.Properties.SourceDestCheck,false
Parameters.RDSDBName.AllowedPattern,"([a-zA-Z][a-zA-Z0-9]{3,}|^$)"
Resources.AWS::EC2::VPC.Properties.EnableDnsHostnames,true
Outputs.PcfRdsDBName.Condition,CreateRDS
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.HealthyThreshold,6
Parameters.AvailabilityZone3.Description,Example: us-west-2c
Resources.AWS::EC2::Route.Properties.DestinationCidrBlock,0.0.0.0/0
Resources.AWS::EC2::Instance.Properties.InstanceInitiatedShutdownBehavior,stop
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,ELB Security Group
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.Listeners,"[{u'InstancePort': u'2222', u'LoadBalancerPort': u'2222', u'Protocol': u'TCP', u'InstanceProtocol': u'TCP'}]"
Resources.AWS::RDS::DBSubnetGroup.Properties.DBSubnetGroupDescription,RDS Subnet Group
Resources.AWS::IAM::AccessKey.DependsOn,PcfIamUser
Resources.AWS::EC2::Instance.Properties.Monitoring,false
Resources.AWS::EC2::SecurityGroupIngress.Properties.ToPort,443
Resources.AWS::EC2::Route.DependsOn,PcfVpcGatewayAttachment1
Resources.AWS::EC2::SecurityGroupIngress.Properties.IpProtocol,tcp
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.ConnectionDrainingPolicy.Timeout,300
Parameters.RDSPassword.Description,"RDS database password (leave blank to skip RDS, must be 8+ chars)"
Outputs.PcfElbSshDnsName.Value,"{u'Fn::GetAtt': [u'PcfElbSsh', u'DNSName']}"
Resources.AWS::RDS::DBInstance.Properties.EngineVersion,5.6.35
Resources.AWS::RDS::DBInstance.Properties.Iops,1000
Resources.AWS::RDS::DBInstance.Properties.DBInstanceClass,db.m4.large
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'ec2.amazonaws.com']}}]"
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.ConnectionSettings.IdleTimeout,3600
Resources.AWS::EC2::Instance.Properties.BlockDeviceMappings,"[{u'DeviceName': u'/dev/xvda', u'Ebs': {u'VolumeSize': u'150', u'VolumeType': u'gp2'}}]"
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.CrossZone,true
Outputs.PcfRdsPort.Value,"{u'Fn::GetAtt': [u'PcfRds', u'Endpoint.Port']}"
Parameters.OpsManAMI.Description,Exampe: ami-6e799016
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.HealthCheck.Target,TCP:2222
Resources.AWS::RDS::DBInstance.Condition,CreateRDS
Resources.AWS::ElasticLoadBalancing::LoadBalancer.Properties.ConnectionDrainingPolicy.Enabled,false
Resources.AWS::EC2::EIPAssociation.Properties.AllocationId,"{u'Fn::GetAtt': [u'PcfEipOpsMan', u'AllocationId']}"
Outputs.PcfManagementSubnetAZ3AvailabilityZone.Value,"{u'Fn::GetAtt': [u'PcfManagementSubnetAZ3', u'AvailabilityZone']}"
Resources.AWS::EC2::VPC.Properties.InstanceTenancy,default
Resources.AWS::EC2::NetworkAclEntry.Properties.CidrBlock,0.0.0.0/0
Resources.AWS::EC2::DHCPOptions.Properties.DomainNameServers,[u'AmazonProvidedDNS']
Resources.AWS::RDS::DBInstance.Properties.AllocatedStorage,100
Resources.AWS::EC2::EIP.DependsOn,[u'PcfVpcGatewayAttachment1']
Parameters.OpsManSSHKeyPairName.Description,Select the SSH keypair to use for the Ops Manager VM
Resources.AWS::EC2::VPC.Properties.CidrBlock,10.0.0.0/16
Resources.AWS::IAM::Role.Properties.Policies,[]
Outputs.PcfERTSubnetAZ1AvailabilityZone.Value,"{u'Fn::GetAtt': [u'PcfERTSubnetAZ1', u'AvailabilityZone']}"
Parameters.AvailabilityZone2.Description,Example: us-west-2b
Outputs.PcfRdsPort.Condition,CreateRDS
Resources.AWS::S3::Bucket.Properties.AccessControl,Private
Outputs.PcfElbTcpDnsName.Value,"{u'Fn::GetAtt': [u'PcfElbTcp', u'DNSName']}"
Outputs.PcfManagementSubnetAZ2AvailabilityZone.Value,"{u'Fn::GetAtt': [u'PcfManagementSubnetAZ2', u'AvailabilityZone']}"
Outputs.PcfRdsAddress.Value,"{u'Fn::GetAtt': [u'PcfRds', u'Endpoint.Address']}"
Parameters.OpsManIngressCidr.Description,Allow ingress traffic to the Ops Manager VM from this CIDR range
