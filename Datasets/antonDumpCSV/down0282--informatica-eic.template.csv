Parameters.QSS3KeyPrefix.AllowedPattern,^[0-9a-zA-Z-/]*$
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./etc/cfn/cfn-hup.conf.mode,000400
Parameters.QSS3BucketName.Default,aws-quickstart
Parameters.DBPassword.MaxLength,128
Resources.AWS::RDS::DBInstance.Properties.StorageType,gp2
Parameters.InformaticaServerSubnetID.ConstraintDescription,Specifying subnet ID is mandatory
Resources.AWS::EC2::NetworkInterface.Condition,CreateLargeClusterCnd
Parameters.QSS3KeyPrefix.Default,quickstart-informatica-eic/
Metadata.AWS::CloudFormation::Interface.ParameterLabels.ICSClusterSize.default,Informatica Embedded Cluster Size
Resources.AWS::CloudFormation::WaitCondition.Properties.Timeout,3600
Resources.AWS::EC2::NetworkInterface.Properties.SourceDestCheck,true
Mappings.MultiAZRegionMapping.ca-central-1.Supporting,YES
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Configure.commands.01_ReplaceHostname.command,sudo /home/ec2-user/Mercury_Setup/replaceHostname.sh
Parameters.DBUser.MaxLength,64
Resources.AWS::IAM::InstanceProfile.Properties.Path,/
Mappings.AWSInfoRegionMap.eu-central-1.Partition,aws
Parameters.KeyName.ConstraintDescription,Specifying EC2 keypair is mandatory
Parameters.IPAddressRange.Description,The CIDR IP range that is permitted to access the Informatica domain and the Informatica embedded cluster
Metadata.AWS::CloudFormation::Interface.ParameterLabels.InformaticaEICKeyS3Bucket.default,Enterprise Data Catalog License Key Location
Resources.AWS::EC2::EIP.Properties.Domain,vpc
Parameters.InformaticaEICKeyName.MinLength,1
Outputs.InformaticaAdminConsoleURL.Value,"{u'Fn::Join': [u'', [u'http://', {u'Fn::GetAtt': [u'AdministrationServer', u'PublicDnsName']}, u':6008']]}"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Configure.commands.02_ReplaceValues.command,sudo /home/ec2-user/Mercury_Setup/replaceValues.sh
Mappings.AWSAMIRegionMap.AMI.INFAEICADMINHVM,Administrator-Server Image EIC on AWS
Parameters.ConfirmInformaticaAdminPassword.MinLength,1
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.configSets.InstallAndRun,"[u'Install', u'Configure']"
Parameters.IPAddressRange.MinLength,9
Parameters.InformaticaAdminUsername.Default,Administrator
Parameters.ICSClusterSize.AllowedValues,"[u'Small', u'Medium', u'Large']"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./etc/cfn/hooks.d/cfn-auto-reloader.conf.owner,ec2-user
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Configure.commands.06_AnalystServiceSetup.command,sudo /home/ec2-user/Mercury_Setup/launchAnalystService.sh
Metadata.AWS::CloudFormation::Interface.ParameterLabels.DBPassword.default,Informatica Database Instance Password
Parameters.InformaticaAdminPassword.Description,Password to access Informatica Administrator
Parameters.DBUser.ConstraintDescription,Database Username should be alphanumeric and start with an alphabet only 
Parameters.InformaticaEICKeyS3Bucket.Description,Name of the Amazon S3 bucket in your account that contains the Informatica Enterprise Data Catalog Key
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/replaceHostname.sh.content,"{u'Fn::Join': [u'', [u'#!/bin/bash\n', u'chmod 600 /var/log/cfn-init.log \n', u'chmod 600 /var/log/cfn-init-cmd.log \n', u'privateIp=$(curl http://169.254.169.254/latest/meta-data/local-ipv4) \n', u'publicDnsName=$(curl http://169.254.169.254/latest/meta-data/public-hostname) \n', u'hostname $publicDnsName \n', u'sudo su -c ""sed --in-place \'1s/.*/$publicDnsName/\' /etc/hostname"" \n', u'sudo su -c ""sed -i \'$ a $privateIp $publicDnsName\' /etc/hosts"" \n', u'sudo su -c ""echo HOSTNAME=$publicDnsName >> /etc/sysconfig/network"" \n', u'sudo su -c ""sed -i \'$ a preserve_hostname: true\' /etc/cloud/cloud.cfg"" \n', u'etcHostsConfigOfCluster=""', {u'Fn::If': [u'SingleNodeCnd', {u'Fn::Join': [u' ', [{u'Fn::GetAtt': [u'HadoopGateway', u'PrivateIp']}, {u'Fn::GetAtt': [u'HadoopGateway', u'PublicDnsName']}]]}, {u'Fn::If': [u'CreateLargeClusterCnd', {u'Fn::Join': [u'\\\\\\n', [{u'Fn::Join': [u' ', [{u'Fn::GetAtt': [u'MultiNodeHadoopGateway', u'PrivateIp']}, {u'Fn::GetAtt': [u'MultiNodeHadoopGateway', u'PublicDnsName']}]]}, {u'Fn::Join': [u' ', [{u'Fn::GetAtt': [u'MultiNodeHadoopNode2', u'PrivateIp']}, {u'Fn::GetAtt': [u'MultiNodeHadoopNode2', u'PublicDnsName']}]]}, {u'Fn::Join': [u' ', [{u'Fn::GetAtt': [u'MultiNodeHadoopNode3', u'PrivateIp']}, {u'Fn::GetAtt': [u'MultiNodeHadoopNode3', u'PublicDnsName']}]]}, {u'Fn::Join': [u' ', [{u'Fn::GetAtt': [u'MultiNodeHadoopNode4', u'PrivateIp']}, {u'Fn::GetAtt': [u'MultiNodeHadoopNode4', u'PublicDnsName']}]]}, {u'Fn::Join': [u' ', [{u'Fn::GetAtt': [u'MultiNodeHadoopNode5', u'PrivateIp']}, {u'Fn::GetAtt': [u'MultiNodeHadoopNode5', u'PublicDnsName']}]]}, {u'Fn::Join': [u' ', [{u'Fn::GetAtt': [u'MultiNodeHadoopNode6', u'PrivateIp']}, {u'Fn::GetAtt': [u'MultiNodeHadoopNode6', u'PublicDnsName']}]]}]]}, {u'Fn::Join': [u'\\\\\\n', [{u'Fn::Join': [u' ', [{u'Fn::GetAtt': [u'MultiNodeHadoopGateway', u'PrivateIp']}, {u'Fn::GetAtt': [u'MultiNodeHadoopGateway', u'PublicDnsName']}]]}, {u'Fn::Join': [u' ', [{u'Fn::GetAtt': [u'MultiNodeHadoopNode2', u'PrivateIp']}, {u'Fn::GetAtt': [u'MultiNodeHadoopNode2', u'PublicDnsName']}]]}, {u'Fn::Join': [u' ', [{u'Fn::GetAtt': [u'MultiNodeHadoopNode3', u'PrivateIp']}, {u'Fn::GetAtt': [u'MultiNodeHadoopNode3', u'PublicDnsName']}]]}]]}]}]}, u'""\n', u'sudo su -c ""echo -e $etcHostsConfigOfCluster >> /etc/hosts"" \n', {u'Fn::If': [u'SingleNodeCnd', {u'Fn::Join': [u'', [u'sudo ssh -o StrictHostKeyChecking=no -o PasswordAuthentication=no ', {u'Fn::GetAtt': [u'HadoopGateway', u'PublicDnsName']}, u' ""sudo su -c \'echo -e $etcHostsConfigOfCluster >> /etc/hosts\'"" \n']]}, {u'Fn::If': [u'CreateLargeClusterCnd', {u'Fn::Join': [u'', [u'sudo ssh -o StrictHostKeyChecking=no -o PasswordAuthentication=no ', {u'Fn::GetAtt': [u'MultiNodeHadoopGateway', u'PublicDnsName']}, u' ""sudo su -c \'echo -e $etcHostsConfigOfCluster >> /etc/hosts\'"" \n', u'sudo ssh -o StrictHostKeyChecking=no -o PasswordAuthentication=no ', {u'Fn::GetAtt': [u'MultiNodeHadoopNode2', u'PublicDnsName']}, u' ""sudo su -c  \'echo -e $etcHostsConfigOfCluster >> /etc/hosts\'"" \n', u'sudo ssh -o StrictHostKeyChecking=no -o PasswordAuthentication=no ', {u'Fn::GetAtt': [u'MultiNodeHadoopNode3', u'PublicDnsName']}, u' ""sudo su -c  \'echo -e $etcHostsConfigOfCluster >>  /etc/hosts\'"" \n', u'sudo ssh -o StrictHostKeyChecking=no -o PasswordAuthentication=no ', {u'Fn::GetAtt': [u'MultiNodeHadoopNode4', u'PublicDnsName']}, u' ""sudo su -c  \'echo -e $etcHostsConfigOfCluster >> /etc/hosts\'"" \n', u'sudo ssh -o StrictHostKeyChecking=no -o PasswordAuthentication=no ', {u'Fn::GetAtt': [u'MultiNodeHadoopNode5', u'PublicDnsName']}, u' ""sudo su -c  \'echo -e $etcHostsConfigOfCluster >> /etc/hosts\'"" \n', u'sudo ssh -o StrictHostKeyChecking=no -o PasswordAuthentication=no ', {u'Fn::GetAtt': [u'MultiNodeHadoopNode6', u'PublicDnsName']}, u' ""sudo su -c  \'echo -e $etcHostsConfigOfCluster >> /etc/hosts\'"" \n']]}, {u'Fn::Join': [u'', [u'sudo ssh -o StrictHostKeyChecking=no -o PasswordAuthentication=no ', {u'Fn::GetAtt': [u'MultiNodeHadoopGateway', u'PublicDnsName']}, u' ""sudo su -c \'echo -e $etcHostsConfigOfCluster >> /etc/hosts\'"" \n', u'sudo ssh -o StrictHostKeyChecking=no -o PasswordAuthentication=no ', {u'Fn::GetAtt': [u'MultiNodeHadoopNode2', u'PublicDnsName']}, u' ""sudo su -c  \'echo -e $etcHostsConfigOfCluster >> /etc/hosts\'"" \n', u'sudo ssh -o StrictHostKeyChecking=no -o PasswordAuthentication=no ', {u'Fn::GetAtt': [u'MultiNodeHadoopNode3', u'PublicDnsName']}, u' ""sudo su -c  \'echo -e $etcHostsConfigOfCluster >>  /etc/hosts\'"" \n']]}]}]}]]}"
Parameters.DBPassword.AllowedPattern,"[^/""@]*"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/replaceHostname.sh.group,ec2-user
Metadata.AWS::CloudFormation::Interface.ParameterLabels.InformaticaAdminUsername.default,Informatica Administrator Username
Outputs.ICSMultiNodeClusterURL.Description,ICS Hadoop Gateway node
Parameters.IPAddressRange.ConstraintDescription,must be a valid IP CIDR range of the form x.x.x.x/x.
Mappings.MultiAZRegionMapping.eu-central-1.Supporting,NO
Resources.AWS::IAM::ManagedPolicy.Properties.PolicyDocument.Version,2012-10-17
Parameters.InformaticaEICKeyS3Bucket.MinLength,1
Resources.AWS::IAM::Role.Properties.Path,/
Outputs.ICSSingleNodeClusterURL.Value,"{u'Fn::Join': [u'', [u'http://', {u'Fn::GetAtt': [u'HadoopGateway', u'PublicDnsName']}, u':8080']]}"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/replaceHostname.sh.mode,000770
Parameters.DBSubnetIDs.Description,IDs of two private subnets in the selected VPC. These must be in different Availability Zones in the selected VPC
Mappings.AWSInfoRegionMap.ca-central-1.QuickStartS3URL,https://s3.amazonaws.com
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/launchAnalystService.sh.owner,ec2-user
Parameters.DBUser.AllowedPattern,[a-zA-Z][a-zA-Z0-9]*
Metadata.AWS::CloudFormation::Interface.ParameterLabels.VPCID.default,VPC
Outputs.ICSMultiNodeClusterURL.Condition,MultipleNodeCnd
Resources.AWS::EC2::EIP.Condition,CreateLargeClusterCnd
Parameters.DBPassword.ConstraintDescription,"Database Password should be atleast 8 characters and cannot contain "" @ and / "
Metadata.AWS::CloudFormation::Interface.ParameterGroups,"[{u'Parameters': [u'VPCID', u'InformaticaServerSubnetID', u'DBSubnetIDs', u'IPAddressRange'], u'Label': {u'default': u'Network Configuration'}}, {u'Parameters': [u'KeyName', u'InformaticaServerInstanceType', u'ICSClusterSize'], u'Label': {u'default': u'Amazon EC2 Configuration'}}, {u'Parameters': [u'DBUser', u'DBPassword', u'ConfirmDBPassword'], u'Label': {u'default': u'Amazon RDS Configuration'}}, {u'Parameters': [u'InformaticaAdminUsername', u'InformaticaAdminPassword', u'ConfirmInformaticaAdminPassword', u'InformaticaEICKeyS3Bucket', u'InformaticaEICKeyName', u'ImportSampleData'], u'Label': {u'default': u'Informatica Enterprise Data Catalog Configuration'}}, {u'Parameters': [u'QSS3BucketName', u'QSS3KeyPrefix'], u'Label': {u'default': u'AWS Quick Start Configuration'}}]"
Resources.AWS::EC2::NetworkInterface.Properties.Tags,"[{u'Value': u'Informatica Domain Network Interface', u'Key': u'Name'}]"
Parameters.InformaticaAdminPassword.MinLength,1
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./mnt1/EICLicense.key.mode,000400
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/replaceValues.sh.owner,ec2-user
Metadata.AWS::CloudFormation::Interface.ParameterLabels.ConfirmDBPassword.default,Confirm Password
Parameters.InformaticaEICKeyS3Bucket.ConstraintDescription,Informatica EDC Key S3 Bucket is mandatory
Metadata.AWS::CloudFormation::Interface.ParameterLabels.KeyName.default,Key Pair Name
Outputs.InstanceSetupLogs.Description,Informatica Domain EC2 Instance setup Log Location
Parameters.DBPassword.NoEcho,True
Parameters.ImportSampleData.Default,Yes
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/replaceValues.sh.group,ec2-user
Parameters.InformaticaAdminPassword.NoEcho,True
Parameters.QSS3KeyPrefix.ConstraintDescription,"Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended."
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/reindexCatalogData.sh.owner,ec2-user
Parameters.InformaticaEICKeyName.Description,"The Informatica Enterprise Data Catalog license key name. For example, <license key name> or <bucket sub folder/license key name>"
Parameters.InformaticaServerSubnetID.MinLength,1
Outputs.InstanceID.Description,Informatica Domain Host Name
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/replaceHostname.sh.owner,ec2-user
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/cleanupScripts.sh.content,"{u'Fn::Join': [u'', [u'#!/bin/bash\n', u'rm -f /home/ec2-user/Mercury_Setup/config_template.xml \n', u'rm -f /home/ec2-user/Mercury_Setup/reindexCatalogData.sh \n', u'rm -f /home/ec2-user/Mercury_Setup/launchAnalystService.sh \n', u'rm -f /home/ec2-user/Mercury_Setup/replaceValues.sh \n', u'rm -f /home/ec2-user/Mercury_Setup/replaceHostname.sh \n']]}"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/replaceValues.sh.mode,000700
Parameters.VPCID.MinLength,1
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/reindexCatalogData.sh.group,ec2-user
Parameters.InformaticaAdminUsername.ConstraintDescription,Informatica Admin Username is mandatory
Parameters.QSS3BucketName.ConstraintDescription,"Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
Parameters.VPCID.ConstraintDescription,Specifying VPC ID is mandatory 
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/reindexCatalogData.sh.mode,000770
Resources.AWS::RDS::DBInstance.Properties.AllocatedStorage,200
Resources.AWS::IAM::ManagedPolicy.Properties.PolicyDocument.Statement,"[{u'Action': [u'logs:*'], u'Resource': u'*', u'Effect': u'Allow'}]"
Parameters.QSS3KeyPrefix.Description,"S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended."
Parameters.InformaticaEICKeyName.ConstraintDescription,Informatica EDC Key Name is mandatory
Resources.AWS::RDS::DBInstance.Properties.Engine,sqlserver-se
Resources.AWS::EC2::Instance.Properties.InstanceInitiatedShutdownBehavior,stop
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/cleanupScripts.sh.mode,000770
Metadata.AWS::CloudFormation::Interface.ParameterLabels.InformaticaAdminPassword.default,Informatica Administrator Password
Resources.AWS::EC2::SecurityGroup.Properties.GroupDescription,To enable all ports between hadoop machines only.
Outputs.InstanceSetupLogs.Value,/var/log/cfn-init-cmd.log
Resources.AWS::EC2::Instance.CreationPolicy.ResourceSignal.Timeout,PT3H
Mappings.AWSAMIRegionMap.eu-central-1.INFAEICCLUSTERHVM,ami-08b42e67
Parameters.IPAddressRange.AllowedPattern,"(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})"
Resources.AWS::RDS::DBSubnetGroup.Properties.DBSubnetGroupDescription,Subnets available for the RDS DB Instance
Parameters.ConfirmInformaticaAdminPassword.ConstraintDescription,Confirm Password is mandatory 
Outputs.InformaticaAdminConsoleServerLogs.Value,/installation.log
Mappings.AWSInfoRegionMap.eu-central-1.QuickStartS3URL,https://s3.amazonaws.com
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./mnt1/EICLicense.key.group,ec2-user
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./mnt1/EICLicense.key.authentication,S3AccessCreds
Mappings.AWSAMIRegionMap.ca-central-1.INFAEICCLUSTERHVM,ami-23ec6847
Outputs.ICSSingleNodeClusterURL.Description,ICS Hadoop Gateway node
Mappings.AWSInfoRegionMap.ca-central-1.Partition,aws
Parameters.ICSClusterSize.Default,Small
Mappings.ClusterSizeMapping.Medium.NumberOfInstances,3
Metadata.AWS::CloudFormation::Interface.ParameterLabels.IPAddressRange.default,IP Address Range
Metadata.AWS::CloudFormation::Interface.ParameterLabels.ImportSampleData.default,Import Sample Content
Mappings.AWSAMIRegionMap.AMI.INFAEICCLUSTERHVM,Informatica Hadoop-Cluster Image for ICS
Resources.AWS::RDS::DBInstance.Properties.DBInstanceClass,db.m4.2xlarge
Resources.AWS::RDS::DBInstance.Properties.LicenseModel,license-included
Parameters.QSS3BucketName.Description,"S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
Resources.AWS::EC2::NetworkInterface.Properties.Description,Interface for Administrator Server traffic
Outputs.ICSSingleNodeClusterURL.Condition,SingleNodeCnd
Parameters.KeyName.Description,Name of an existing Amazon EC2 keypair. You must specify this option to enable SSH access to Informatica domain and cluster instances
Metadata.AWS::CloudFormation::Interface.ParameterLabels.ConfirmInformaticaAdminPassword.default,Confirm Password
Parameters.InformaticaAdminUsername.MinLength,1
Parameters.DBUser.MinLength,1
Parameters.DBUser.Description,"Username for the database instance associated with Informatica domain and services (such as Model Repository Service, Data Integration Service, Content Management Service)"
Outputs.InformaticaAdminConsoleURL.Description,Informatica Administrator Console
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Authentication.S3AccessCreds.type,S3
Outputs.InformaticaAdminConsoleServerLogs.Description,Informatica Domain Installation Log Location
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/cleanupScripts.sh.group,ec2-user
Metadata.AWS::CloudFormation::Interface.ParameterLabels.DBSubnetIDs.default,Informatica Database Subnets
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./mnt1/EICLicense.key.owner,ec2-user
Parameters.VPCID.Description,ID of your existing VPC where you want to deploy Enterprise Data Catalog
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./etc/cfn/cfn-hup.conf.group,ec2-user
Parameters.DBPassword.MinLength,8
Parameters.ConfirmInformaticaAdminPassword.NoEcho,True
Parameters.InformaticaAdminUsername.Description,Username to access Informatica Administrator
Parameters.KeyName.MinLength,1
Parameters.InformaticaAdminPassword.ConstraintDescription,Informatica Admin Password is mandatory
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Configure.commands.07_cleanupScripts.command,sudo /home/ec2-user/Mercury_Setup/cleanupScripts.sh
Parameters.ConfirmDBPassword.ConstraintDescription,Confirm Password is mandatory 
Mappings.AWSAMIRegionMap.eu-central-1.INFAEICADMINHVM,ami-af5430c0
Resources.AWS::EC2::EIPAssociation.Properties.AllocationId,"{u'Fn::GetAtt': [u'AdministrationServerEIP', u'AllocationId']}"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./etc/cfn/cfn-hup.conf.owner,ec2-user
Resources.AWS::EC2::Instance.Condition,CreateLargeClusterCnd
Metadata.AWS::CloudFormation::Interface.ParameterLabels.InformaticaServerSubnetID.default,Informatica Domain Subnet
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./etc/cfn/hooks.d/cfn-auto-reloader.conf.group,ec2-user
Resources.AWS::IAM::Role.Properties.AssumeRolePolicyDocument.Statement,"[{u'Action': [u'sts:AssumeRole'], u'Effect': u'Allow', u'Principal': {u'Service': [u'ec2.amazonaws.com']}}]"
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/launchAnalystService.sh.group,ec2-user
Parameters.ImportSampleData.AllowedValues,"[u'Yes', u'No']"
Resources.AWS::EC2::EIPAssociation.Condition,CreateLargeClusterCnd
Mappings.ClusterSizeMapping.Small.NumberOfInstances,1
Parameters.QSS3BucketName.AllowedPattern,^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
Parameters.DBPassword.Description,"Password for the database instance associated with Informatica domain and services (such as Model Repository Service, Data Integration Service, Content Management Service). Password should be at least 8 characters long and cannot contain "" @ and / "
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Configure.commands.04_MercurySetup.command,sudo java -jar /home/ec2-user/Mercury_Setup/mercury_setup.jar -cf /home/ec2-user/Mercury_Setup/config_template.xml -s -uei
Parameters.ImportSampleData.Description,Select Yes to import the sample catalog data. You can use the sample data to get started with the product
Mappings.AWSAMIRegionMap.ca-central-1.INFAEICADMINHVM,ami-fa991d9e
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/launchAnalystService.sh.mode,000770
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./home/ec2-user/Mercury_Setup/cleanupScripts.sh.owner,ec2-user
Outputs.ICSMultiNodeClusterURL.Value,"{u'Fn::Join': [u'', [u'http://', {u'Fn::GetAtt': [u'MultiNodeHadoopGateway', u'PublicDnsName']}, u':8080']]}"
Resources.AWS::EC2::Instance.DependsOn,Node6IPAssoc
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Configure.commands.05_ReindexCatalogData.command,sudo /home/ec2-user/Mercury_Setup/reindexCatalogData.sh
Resources.AWS::EC2::Instance.Metadata.AWS::CloudFormation::Init.Install.files./etc/cfn/hooks.d/cfn-auto-reloader.conf.mode,000400
Resources.AWS::IAM::Policy.Properties.PolicyName,S3Download
Parameters.InformaticaServerSubnetID.Description,Select a publicly accessible subnet ID for the Informatica domain
Metadata.AWS::CloudFormation::Interface.ParameterLabels.QSS3KeyPrefix.default,Quick Start S3 Key Prefix
Metadata.AWS::CloudFormation::Interface.ParameterLabels.InformaticaEICKeyName.default,Enterprise Data Catalog License Key Name
Parameters.ICSClusterSize.Description,"The cluster size (i.) Small (c4.8xlarge, single node) (ii.) Medium (c4.8xlarge, three nodes) (iii.)  Large (c4.8xlarge, six nodes)"
Parameters.IPAddressRange.MaxLength,18
Parameters.ConfirmDBPassword.MinLength,1
Metadata.AWS::CloudFormation::Interface.ParameterLabels.DBUser.default,Informatica Database Instance Username
Metadata.AWS::CloudFormation::Interface.ParameterLabels.QSS3BucketName.default,Quick Start S3 Bucket Name
Parameters.ConfirmDBPassword.NoEcho,True
Resources.AWS::EC2::Instance.Properties.Tags,"[{u'Value': {u'Fn::Join': [u'-', [u'HadoopNode', u'6']]}, u'Key': u'Name'}]"
Mappings.ClusterSizeMapping.Large.NumberOfInstances,6
